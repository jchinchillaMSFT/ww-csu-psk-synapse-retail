{
	"name": "Customer_DataFlow1",
	"properties": {
		"folder": {
			"name": "adworkstarget"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "CustomerDataDeltaSource"
				},
				{
					"name": "TargetCountry"
				},
				{
					"name": "TargetLocation"
				}
			],
			"sinks": [
				{
					"name": "CustomerSink"
				}
			],
			"transformations": [
				{
					"name": "Deduplicated1CustomerDataDeltaSource"
				},
				{
					"name": "Deduplicated1TargetCountry"
				},
				{
					"name": "SelectCountry"
				},
				{
					"name": "JoinForCountryIdLookupFunction"
				},
				{
					"name": "Deduplicated1TargetLocation"
				},
				{
					"name": "SelectLocation"
				},
				{
					"name": "JoinForLocationId"
				},
				{
					"name": "Customer"
				}
			],
			"script": "parameters{\n\tmodifiedAfter as timestamp,\n\tmodifiedBefore as timestamp\n}\nsource(output(\n\t\tCustomerKey as integer,\n\t\tCustomerId as string,\n\t\tCustomer as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'CustomerData',\n\tmanifestType: 'manifest') ~> CustomerDataDeltaSource\nsource(output(\n\t\tCountryId as integer,\n\t\tIsoCountryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\tmanifestType: 'manifest') ~> TargetCountry\nsource(output(\n\t\tLocationId as integer,\n\t\tLocationCity as string,\n\t\tLocationState as string,\n\t\tCountryId as integer,\n\t\tLocationZip as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Location',\n\tmanifestType: 'manifest') ~> TargetLocation\nCustomerDataDeltaSource aggregate(groupBy(CustomerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tCustomer = last(Customer),\n\t\tCustomerId = last(CustomerId)) ~> Deduplicated1CustomerDataDeltaSource\nTargetCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Deduplicated1TargetCountry\nDeduplicated1TargetCountry select(mapColumn(\n\t\tCountryId,\n\t\tCountryName = IsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCountry\nDeduplicated1CustomerDataDeltaSource, SelectCountry join(CountryRegion == CountryName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinForCountryIdLookupFunction\nTargetLocation aggregate(groupBy(LocationId),\n\tLocationCity = last(LocationCity),\n\t\tCountryId = last(CountryId),\n\t\tLocationZip = last(LocationZip),\n\t\tLocationState = last(LocationState)) ~> Deduplicated1TargetLocation\nDeduplicated1TargetLocation select(mapColumn(\n\t\tLocationId,\n\t\tLocationZip,\n\t\tLocationState,\n\t\tLocationCity,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectLocation\nJoinForCountryIdLookupFunction, SelectLocation join(PostalCode === LocationZip\n\t&& StateProvince === LocationState\n\t&& City === LocationCity\n\t&& SelectForCountryIdLookupFunction@CountryId === SelectLocation@CountryId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinForLocationId\nJoinForLocationId select(mapColumn(\n\t\tLocationId,\n\t\tCustomerId,\n\t\tCustomerKey,\n\t\tCustomer\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Customer\nCustomer sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Customer',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> CustomerSink"
		}
	}
}