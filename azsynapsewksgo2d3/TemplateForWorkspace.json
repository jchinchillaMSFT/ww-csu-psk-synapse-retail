{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "azsynapsewksgo2d3"
		},
		"azsynapsewksgo2d3-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azsynapsewksgo2d3-WorkspaceDefaultSqlServer'"
		},
		"e2eanalytics01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'e2eanalytics01'"
		},
		"githubsynaoseretail_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'githubsynaoseretail'"
		},
		"AzureMLService01_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "18fe7d2e-5a63-474d-b00b-7dc28b16f41a"
		},
		"AzureMLService01_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "jchinchilla-rg"
		},
		"GithubFiles_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://raw.githubusercontent.com/',linkedService().githubAccount,'/',linkedService().projectName,'/',linkedService().branch,'/',linkedService().folderPath,'/',linkedService().fileName)}"
		},
		"azcurateddatalakego2d3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azcurateddatalakego2d3.dfs.core.windows.net"
		},
		"azkeyvaultgo2d3_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://azkeyvaultgo2d3.vault.azure.net/"
		},
		"azrawdatalakego2d3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azrawdatalakego2d3.dfs.core.windows.net"
		},
		"azsynapsewksgo2d3-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azwksdatalakego2d3.dfs.core.windows.net"
		},
		"azwksdatalakego2d3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azwksdatalakego2d3.dfs.core.windows.net"
		},
		"githubsynaoseretail_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "x"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Copy CSV data from GitHub')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.github.com/repos/jchinchillaMSFT/ww-csu-psk-synapse-retail/contents/Sample/AdventureWorks/",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {
								"User-Agent": "AzureSynapse"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('Web1').output.Response)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "githubFileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "GithubCSVFiles",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@variables('githubFileName')",
													"type": "Expression"
												},
												"folderPath": {
													"value": "@variables('githubSourceFolderPath')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adworksRaw",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@variables('githubFileName')",
													"type": "Expression"
												},
												"folderPath": {
													"value": "@variables('sinkFolderPath')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"githubSourceFolderPath": {
						"type": "String",
						"defaultValue": "Sample/AdventureWorks"
					},
					"githubFileName": {
						"type": "String"
					},
					"sinkFolderPath": {
						"type": "String",
						"defaultValue": "AdventureWorks/CSV-Source"
					}
				},
				"folder": {
					"name": "2. adworks"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/GithubCSVFiles')]",
				"[concat(variables('workspaceId'), '/datasets/adworksRaw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/F0_ChannelType')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ChannelType Transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "adworks_ChannelType",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ChannelTypeSource": {},
									"ChannelType": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T04:54:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/adworks_ChannelType')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/F0_ChannelType_Territory_Channel')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "L0_ChannelType_Territory",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L0_ChannelType_Territory",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L1_Channel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L0_ChannelType_Territory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L1_Channel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:44Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/L0_ChannelType_Territory')]",
				"[concat(variables('workspaceId'), '/pipelines/L1_Channel')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/F0_Country')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "adworks_Country",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "adworks_Country",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CountrySource": {},
									"Country": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T04:55:13Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/adworks_Country')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/F0_Location')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "adworks_Location",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "adworks_Location",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"LocationCSV": {
										"fileName": {
											"value": "@variables('fileName')",
											"type": "Expression"
										},
										"folderPath": {
											"value": "@variables('folderPath')",
											"type": "Expression"
										}
									},
									"Location": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"fileName": {
						"type": "String"
					},
					"folderPath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T04:46:38Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/adworks_Location')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/F1_Country_Country2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "L0_Country",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L0_Country",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L1_Country1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L0_Country",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L1_Country2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:48Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/L0_Country')]",
				"[concat(variables('workspaceId'), '/pipelines/L1_Country2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/F3_Item_ProductCategoryDim_Product_TransactionLineItem')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "L0_Item_ProductCategoryDim",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L0_Item_ProductCategoryDim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L1_Product",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L0_Item_ProductCategoryDim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L1_Product",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L2_TransactionLineItem",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L1_Product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L2_TransactionLineItem",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:57Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/L0_Item_ProductCategoryDim')]",
				"[concat(variables('workspaceId'), '/pipelines/L1_Product')]",
				"[concat(variables('workspaceId'), '/pipelines/L2_TransactionLineItem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/F4_Location_Location1_Customer_Transaction')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "L0_Location",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L0_Location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L1_Location1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L0_Location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L1_Location2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L2_Customer",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L1_Location1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L2_Customer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L3_Transaction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L2_Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L3_Transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:52Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/L0_Location')]",
				"[concat(variables('workspaceId'), '/pipelines/L1_Location2')]",
				"[concat(variables('workspaceId'), '/pipelines/L2_Customer')]",
				"[concat(variables('workspaceId'), '/pipelines/L3_Transaction')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L0_ChannelType_Territory')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ChannelTypeTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ChannelType_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"ResellerDeltaSource": {},
									"TargetChannelType": {},
									"ChannelTypeSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "TerritoryTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ChannelTypeTransform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Territory_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"SalesTerritoryDeltaSource": {},
									"TerritorySink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:44:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/ChannelType_DataFlow1')]",
				"[concat(variables('workspaceId'), '/dataflows/Territory_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L0_Country')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CountryTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Country_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"CustomerDataDeltaSource": {},
									"TargetCountry": {},
									"CountrySink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:44:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Country_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L0_IndividualCustomer')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "IndividualCustomerTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "IndividualCustomer_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"CustomerDataDeltaSource": {},
									"IndividualCustomerSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:44:28Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/IndividualCustomer_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L0_Item_ProductCategoryDim')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ItemTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Item_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"ProductDataDeltaSource": {},
									"ItemSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ProductCategoryDimTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ProductCategoryDim_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"ProductDataDeltaSource": {},
									"ProductCategorySink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:10Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Item_DataFlow1')]",
				"[concat(variables('workspaceId'), '/dataflows/ProductCategoryDim_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L0_Location')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LocationTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Location_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"CustomerDataDeltaSource": {},
									"TargetCountry": {},
									"TargetLocation": {},
									"LocationSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:44:54Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Location_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L1_Channel')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ChannelTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Channel_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"ResellerDeltaSource": {},
									"SalesSource": {},
									"SalesTerritorySource": {},
									"TargetChannelType": {},
									"ChannelSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:44:34Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Channel_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L1_Country2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Country2Transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Country2_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"ResellerDeltaSource": {},
									"TargetCountry": {},
									"CountrySink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:44:48Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Country2_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L1_Location2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Location2Transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Location2_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"ResellerDeltaSource": {},
									"TargetCountry": {},
									"TargetLocation": {},
									"LocationSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:44:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Location2_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L1_Product')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ProductTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Product_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"ProductDataDeltaSource": {},
									"ProductSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:15Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Product_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L2_Customer')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CustomerTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Customer_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"CustomerDataDeltaSource": {},
									"TargetCountry": {},
									"TargetLocation": {},
									"CustomerSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:01Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Customer_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L2_TransactionLineItem')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "TransactionLineItemTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransactionLineItem_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"SalesDeltaSource": {},
									"SalesOrderSource": {},
									"TransactionLineItemSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:20Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/TransactionLineItem_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/L3_Transaction')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "TransactionTransform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transaction_DataFlow1",
								"type": "DataFlowReference",
								"parameters": {
									"modifiedAfter": "toTimestamp(\"01-01-1900\")",
									"modifiedBefore": "currentTimestamp()"
								},
								"datasetParameters": {
									"SalesOrderSource": {},
									"SalesSource": {},
									"CustomerDataSource": {},
									"ResellerSource": {},
									"ChannelTypeSource": {},
									"TransactionSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T06:45:08Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Transaction_DataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Load CSV data to adworks')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Raw",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@variables('adworksSourceFolderPath')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Load adworks",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Set tableName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "Load_adworks",
											"type": "DataFlowReference",
											"parameters": {
												"tableName": {
													"value": "'@{variables('tableName')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"CSVSource": {
													"fileName": {
														"value": "@item().name",
														"type": "Expression"
													},
													"folderPath": {
														"value": "@variables('adworksSourceFolderPath')",
														"type": "Expression"
													}
												},
												"adworksSink": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								},
								{
									"name": "Set tableName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "tableName",
										"value": {
											"value": "@replace(item().name,'.csv','')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"adworksSourceFolderPath": {
						"type": "String",
						"defaultValue": "AdventureWorks/CSV-Source"
					},
					"tableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "2. adworks"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Raw')]",
				"[concat(variables('workspaceId'), '/dataflows/Load_adworks')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Main Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "adworkstarget Pipelines",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "adworks Pipelines",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adworkstarget Starting Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "adworks Pipelines",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adworks Starting Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1. Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T04:48:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/adworkstarget Starting Pipeline')]",
				"[concat(variables('workspaceId'), '/pipelines/adworks Starting Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworks Starting Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Execute Copy CSV data from Github",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Copy CSV data from GitHub",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Load CSV data to adworks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Copy CSV data from Github",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load CSV data to adworks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"adworksSourceFolderPath": {
						"type": "String",
						"defaultValue": "AdventureWorks/CSV-Source"
					}
				},
				"folder": {
					"name": "2. adworks"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T04:49:18Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Copy CSV data from GitHub')]",
				"[concat(variables('workspaceId'), '/pipelines/Load CSV data to adworks')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworkstarget Starting Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "F0_ChannelType_Territory_Channel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "F0_ChannelType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F0_ChannelType_Territory_Channel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "F1_Country_Country1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "F0_Country",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F1_Country_Country2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "F4_Location_Location1_Customer_Transacti",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "F0_Location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F4_Location_Location1_Customer_Transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "F3_Item_ProductCategoryDim_Product_Trans",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "F4_Location_Location1_Customer_Transacti",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F3_Item_ProductCategoryDim_Product_TransactionLineItem",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "L0_IndividualCustomer",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "L0_IndividualCustomer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "F0_Country",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "F0_ChannelType_Territory_Channel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F0_Country",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "F0_Location",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "F1_Country_Country1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F0_Location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "F0_ChannelType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "L0_IndividualCustomer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F0_ChannelType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3. adworkstarget"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T04:53:12Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/F0_ChannelType_Territory_Channel')]",
				"[concat(variables('workspaceId'), '/pipelines/F1_Country_Country2')]",
				"[concat(variables('workspaceId'), '/pipelines/F4_Location_Location1_Customer_Transaction')]",
				"[concat(variables('workspaceId'), '/pipelines/F3_Item_ProductCategoryDim_Product_TransactionLineItem')]",
				"[concat(variables('workspaceId'), '/pipelines/L0_IndividualCustomer')]",
				"[concat(variables('workspaceId'), '/pipelines/F0_Country')]",
				"[concat(variables('workspaceId'), '/pipelines/F0_Location')]",
				"[concat(variables('workspaceId'), '/pipelines/F0_ChannelType')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GithubCSVFiles')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GithubFiles",
					"type": "LinkedServiceReference",
					"parameters": {
						"githubAccount": "jchinchillaMSFT",
						"projectName": "ww-csu-psk-synapse-retail",
						"branch": "main",
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/GithubFiles')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Raw')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azrawdatalakego2d3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/azrawdatalakego2d3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworksRaw')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azrawdatalakego2d3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "-1",
						"type": "String"
					},
					{
						"name": "[Not Applicable]1",
						"type": "String"
					},
					{
						"name": "[Not Applicable]2",
						"type": "String"
					},
					{
						"name": "[Not Applicable]3",
						"type": "String"
					},
					{
						"name": "[Not Applicable]4",
						"type": "String"
					},
					{
						"name": "[Not Applicable]5",
						"type": "String"
					},
					{
						"name": "[Not Applicable]6",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/azrawdatalakego2d3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLService01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService01_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService01_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "jchinchilla-workspace",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GithubFiles')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"githubAccount": {
						"type": "string"
					},
					"projectName": {
						"type": "string"
					},
					"branch": {
						"type": "string",
						"defaultValue": "main"
					},
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('GithubFiles_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azcurateddatalakego2d3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azcurateddatalakego2d3_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azkeyvaultgo2d3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('azkeyvaultgo2d3_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azrawdatalakego2d3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azrawdatalakego2d3_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsynapsewksgo2d3-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('azsynapsewksgo2d3-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsynapsewksgo2d3-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azsynapsewksgo2d3-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azwksdatalakego2d3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azwksdatalakego2d3_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/e2eanalytics01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('e2eanalytics01_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/githubsynaoseretail')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('githubsynaoseretail_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('githubsynaoseretail_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIlNZTkFQU0VARTQ5QTFEMjItRTczQy00QUE5LUI0ODQtMjExMzZFMDA3NUU3Xzk0MDdmN2U4LTliZDEtNDU0Ny05MjBkLWU3ZjFiZjk1MzUwZiINCn0="
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/powerbiws1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "7e55510c-686d-411d-a508-d7646eee9918",
					"tenantID": "72f988bf-86f1-41af-91ab-2d7cd011db47"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ChannelType_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ResellerDeltaSource"
						},
						{
							"name": "TargetChannelType"
						}
					],
					"sinks": [
						{
							"name": "ChannelTypeSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1ResellerDeltaSource"
						},
						{
							"name": "Reseller"
						},
						{
							"name": "SelectReseller"
						},
						{
							"name": "PreSKSelectChannelType"
						},
						{
							"name": "Deduplicated1PreSKSelectChannelType"
						},
						{
							"name": "SelectDeduplicated1PreSKSelectChannelType"
						},
						{
							"name": "Deduplicated1TargetChannelType"
						},
						{
							"name": "SelectDeduplicated1TargetChannelType"
						},
						{
							"name": "SelectTarSelectDeduplicated1TargetChannelType"
						},
						{
							"name": "JoinSelectTarSelectDeduplicated1TargetChannelType"
						},
						{
							"name": "FilterInsertChannelType"
						},
						{
							"name": "InsertChannelType"
						},
						{
							"name": "SkChannelType"
						},
						{
							"name": "AggregatedSelectTarSelectDeduplicated1TargetChannelType"
						},
						{
							"name": "MaxSelectTarSelectDeduplicated1TargetChannelType"
						},
						{
							"name": "JoinMaxSelectTarSelectDeduplicated1TargetChannelType"
						},
						{
							"name": "DerivedChannelType"
						},
						{
							"name": "PostSkChannelType"
						},
						{
							"name": "FilterUpdateSelectDeduplicated1PreSKSelectChannelType"
						},
						{
							"name": "UpdateSelectDeduplicated1PreSKSelectChannelType"
						},
						{
							"name": "UnionUpdateSelectDeduplicated1PreSKSelectChannelType"
						},
						{
							"name": "SelectTarUnionUpdateSelectDeduplicated1PreSKSelectChannelType"
						},
						{
							"name": "JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectChannelType"
						},
						{
							"name": "FinalChannelType"
						},
						{
							"name": "ChannelType"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tPostalCode as string,\n\t\tCountryRegion as string,\n\t\tStateProvince as string,\n\t\tCity as string,\n\t\tReseller as string,\n\t\tBusinessType as string,\n\t\tResellerId as string,\n\t\tResellerKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Reseller',\n\tmanifestType: 'manifest') ~> ResellerDeltaSource\nsource(output(\n\t\tChannelTypeId as integer,\n\t\tChannelTypeName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'ChannelType',\n\tmanifestType: 'manifest') ~> TargetChannelType\nResellerDeltaSource aggregate(groupBy(ResellerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tReseller = last(Reseller),\n\t\tBusinessType = last(BusinessType),\n\t\tResellerId = last(ResellerId)) ~> Deduplicated1ResellerDeltaSource\nDeduplicated1ResellerDeltaSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tReseller,\n\t\tBusinessType,\n\t\tResellerId,\n\t\tResellerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Reseller\nReseller select(mapColumn(\n\t\tBusinessType\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectReseller\nSelectReseller select(mapColumn(\n\t\tChannelTypeName = BusinessType\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PreSKSelectChannelType\nPreSKSelectChannelType aggregate(groupBy(ChannelTypeName),\n\tCount = count(1)) ~> Deduplicated1PreSKSelectChannelType\nDeduplicated1PreSKSelectChannelType select(mapColumn(\n\t\tChannelTypeName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1PreSKSelectChannelType\nTargetChannelType aggregate(groupBy(ChannelTypeId),\n\tChannelTypeName = last(ChannelTypeName)) ~> Deduplicated1TargetChannelType\nDeduplicated1TargetChannelType select(mapColumn(\n\t\tChannelTypeName,\n\t\tChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1TargetChannelType\nSelectDeduplicated1TargetChannelType select(mapColumn(\n\t\tTarChannelTypeName = ChannelTypeName,\n\t\tTarChannelTypeId = ChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarSelectDeduplicated1TargetChannelType\nSelectDeduplicated1PreSKSelectChannelType, SelectTarSelectDeduplicated1TargetChannelType join(ChannelTypeName === TarChannelTypeName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarSelectDeduplicated1TargetChannelType\nJoinSelectTarSelectDeduplicated1TargetChannelType filter(isNull(TarChannelTypeId)) ~> FilterInsertChannelType\nFilterInsertChannelType select(mapColumn(\n\t\tChannelTypeName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> InsertChannelType\nInsertChannelType keyGenerate(output(Sk_ChannelTypeId as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SkChannelType\nSelectTarSelectDeduplicated1TargetChannelType aggregate(Max_TarChannelTypeId = max(toInteger(TarChannelTypeId)) + 0) ~> AggregatedSelectTarSelectDeduplicated1TargetChannelType\nAggregatedSelectTarSelectDeduplicated1TargetChannelType derive(Max_TarChannelTypeId = iif(isNull(Max_TarChannelTypeId),0,Max_TarChannelTypeId)) ~> MaxSelectTarSelectDeduplicated1TargetChannelType\nSkChannelType, MaxSelectTarSelectDeduplicated1TargetChannelType join(true() === true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinMaxSelectTarSelectDeduplicated1TargetChannelType\nJoinMaxSelectTarSelectDeduplicated1TargetChannelType derive(ChannelTypeId = Sk_ChannelTypeId + Max_TarChannelTypeId) ~> DerivedChannelType\nDerivedChannelType select(mapColumn(\n\t\tChannelTypeName,\n\t\tChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PostSkChannelType\nJoinSelectTarSelectDeduplicated1TargetChannelType filter(!isNull(TarChannelTypeId)) ~> FilterUpdateSelectDeduplicated1PreSKSelectChannelType\nFilterUpdateSelectDeduplicated1PreSKSelectChannelType select(mapColumn(\n\t\tChannelTypeName,\n\t\tChannelTypeId = TarChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UpdateSelectDeduplicated1PreSKSelectChannelType\nPostSkChannelType, UpdateSelectDeduplicated1PreSKSelectChannelType union(byName: true)~> UnionUpdateSelectDeduplicated1PreSKSelectChannelType\nUnionUpdateSelectDeduplicated1PreSKSelectChannelType select(mapColumn(\n\t\tTarChannelTypeName = ChannelTypeName,\n\t\tTarChannelTypeId = ChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarUnionUpdateSelectDeduplicated1PreSKSelectChannelType\nPreSKSelectChannelType, SelectTarUnionUpdateSelectDeduplicated1PreSKSelectChannelType join(ChannelTypeName === TarChannelTypeName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectChannelType\nJoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectChannelType select(mapColumn(\n\t\tChannelTypeName,\n\t\tChannelTypeId = TarChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FinalChannelType\nFinalChannelType aggregate(groupBy(ChannelTypeId),\n\tChannelTypeName = last(ChannelTypeName)) ~> ChannelType\nChannelType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'ChannelType',\n\trecreate:true,\n\tmanifestType: 'manifest') ~> ChannelTypeSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Channel_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ResellerDeltaSource"
						},
						{
							"name": "SalesSource"
						},
						{
							"name": "SalesTerritorySource"
						},
						{
							"name": "TargetChannelType"
						}
					],
					"sinks": [
						{
							"name": "ChannelSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1ResellerDeltaSource"
						},
						{
							"name": "Reseller"
						},
						{
							"name": "Deduplicated1SalesSource"
						},
						{
							"name": "Sales"
						},
						{
							"name": "JoinSales"
						},
						{
							"name": "Deduplicated1SalesTerritorySource"
						},
						{
							"name": "SalesTerritory"
						},
						{
							"name": "JoinSalesTerritory"
						},
						{
							"name": "SelectJoinSalesTerritory"
						},
						{
							"name": "Deduplicated1TargetChannelType"
						},
						{
							"name": "SelectChannelType"
						},
						{
							"name": "JoinForChannelTypeId"
						},
						{
							"name": "SelectForChannelTypeId"
						},
						{
							"name": "Channel"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tPostalCode as string,\n\t\tCountryRegion as string,\n\t\tStateProvince as string,\n\t\tCity as string,\n\t\tReseller as string,\n\t\tBusinessType as string,\n\t\tResellerId as string,\n\t\tResellerKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Reseller',\n\tmanifestType: 'manifest') ~> ResellerDeltaSource\nsource(output(\n\t\tSalesAmount as decimal(18,2),\n\t\tTotalProductCost as decimal(18,2),\n\t\tProductStandardCost as decimal(18,2),\n\t\tUnitPriceDiscountPct as decimal(18,2),\n\t\tExtendedAmount as decimal(18,2),\n\t\tUnitPrice as decimal(18,2),\n\t\tOrderQuantity as integer,\n\t\tSalesTerritoryKey as integer,\n\t\tShipDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tOrderDateKey as integer,\n\t\tProductKey as integer,\n\t\tCustomerKey as integer,\n\t\tResellerKey as integer,\n\t\tSalesOrderLineKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Sales',\n\tmanifestType: 'manifest') ~> SalesSource\nsource(output(\n\t\tSalesTerritoryKey as integer,\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tGroup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'SalesTerritory',\n\tmanifestType: 'manifest') ~> SalesTerritorySource\nsource(output(\n\t\tChannelTypeId as integer,\n\t\tChannelTypeName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'ChannelType',\n\tmanifestType: 'manifest') ~> TargetChannelType\nResellerDeltaSource aggregate(groupBy(ResellerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tReseller = last(Reseller),\n\t\tBusinessType = last(BusinessType),\n\t\tResellerId = last(ResellerId)) ~> Deduplicated1ResellerDeltaSource\nDeduplicated1ResellerDeltaSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tReseller,\n\t\tBusinessType,\n\t\tResellerId,\n\t\tResellerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Reseller\nSalesSource aggregate(groupBy(ProductKey,\n\t\tCustomerKey,\n\t\tResellerKey,\n\t\tSalesOrderLineKey),\n\tSalesAmount = last(SalesAmount),\n\t\tTotalProductCost = last(TotalProductCost),\n\t\tProductStandardCost = last(ProductStandardCost),\n\t\tUnitPriceDiscountPct = last(UnitPriceDiscountPct),\n\t\tExtendedAmount = last(ExtendedAmount),\n\t\tUnitPrice = last(UnitPrice),\n\t\tOrderQuantity = last(OrderQuantity),\n\t\tSalesTerritoryKey = last(SalesTerritoryKey),\n\t\tShipDateKey = last(ShipDateKey),\n\t\tDueDateKey = last(DueDateKey),\n\t\tOrderDateKey = last(OrderDateKey)) ~> Deduplicated1SalesSource\nDeduplicated1SalesSource select(mapColumn(\n\t\tSalesAmount,\n\t\tTotalProductCost,\n\t\tProductStandardCost,\n\t\tUnitPriceDiscountPct,\n\t\tExtendedAmount,\n\t\tUnitPrice,\n\t\tOrderQuantity,\n\t\tSalesTerritoryKey,\n\t\tShipDateKey,\n\t\tDueDateKey,\n\t\tOrderDateKey,\n\t\tProductKey,\n\t\tCustomerKey,\n\t\tResellerKey,\n\t\tSalesOrderLineKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Sales\nReseller, Sales join(Reseller@ResellerKey === Sales@ResellerKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSales\nSalesTerritorySource aggregate(groupBy(SalesTerritoryKey),\n\tGroup = last(Group),\n\t\tCountry = last(Country),\n\t\tRegion = last(Region)) ~> Deduplicated1SalesTerritorySource\nDeduplicated1SalesTerritorySource select(mapColumn(\n\t\tGroup,\n\t\tCountry,\n\t\tRegion,\n\t\tSalesTerritoryKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SalesTerritory\nJoinSales, SalesTerritory join(Sales@SalesTerritoryKey === SalesTerritory@SalesTerritoryKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSalesTerritory\nJoinSalesTerritory select(mapColumn(\n\t\tBusinessTypeAlias = BusinessType,\n\t\tReseller_ResellerKey_Generated = Reseller@ResellerKey,\n\t\tResellerId,\n\t\tReseller,\n\t\tSalesTerritory_SalesTerritoryKey_Generated = SalesTerritory@SalesTerritoryKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectJoinSalesTerritory\nTargetChannelType aggregate(groupBy(ChannelTypeId),\n\tChannelTypeName = last(ChannelTypeName)) ~> Deduplicated1TargetChannelType\nDeduplicated1TargetChannelType select(mapColumn(\n\t\tChannelTypeId,\n\t\tChannelTypeNameAlias = ChannelTypeName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectChannelType\nSelectJoinSalesTerritory, SelectChannelType join(BusinessTypeAlias === ChannelTypeNameAlias,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinForChannelTypeId\nJoinForChannelTypeId select(mapColumn(\n\t\tBusinessTypeAlias,\n\t\tReseller_ResellerKey_Generated,\n\t\tResellerId,\n\t\tReseller,\n\t\tSalesTerritory_SalesTerritoryKey_Generated,\n\t\tChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectForChannelTypeId\nSelectForChannelTypeId select(mapColumn(\n\t\tChannelId = Reseller_ResellerKey_Generated,\n\t\tChannelKey = ResellerId,\n\t\tChannelName = Reseller,\n\t\tTerritoryId = SalesTerritory_SalesTerritoryKey_Generated,\n\t\tChannelTypeId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Channel\nChannel sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Channel',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> ChannelSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Country2_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ResellerDeltaSource"
						},
						{
							"name": "TargetCountry"
						}
					],
					"sinks": [
						{
							"name": "CountrySink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1ResellerDeltaSource"
						},
						{
							"name": "Reseller"
						},
						{
							"name": "SelectReseller"
						},
						{
							"name": "PreSKSelectCountry"
						},
						{
							"name": "Deduplicated1PreSKSelectCountry"
						},
						{
							"name": "SelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "Deduplicated1TargetCountry"
						},
						{
							"name": "SelectDeduplicated1TargetCountry"
						},
						{
							"name": "SelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "JoinSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "FilterInsertCountry"
						},
						{
							"name": "InsertCountry"
						},
						{
							"name": "SkCountry"
						},
						{
							"name": "AggregatedSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "MaxSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "JoinMaxSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "DerivedCountry"
						},
						{
							"name": "PostSkCountry"
						},
						{
							"name": "FilterUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "UpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "UnionUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "SelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "FinalCountry"
						},
						{
							"name": "Country"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tPostalCode as string,\n\t\tCountryRegion as string,\n\t\tStateProvince as string,\n\t\tCity as string,\n\t\tReseller as string,\n\t\tBusinessType as string,\n\t\tResellerId as string,\n\t\tResellerKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Reseller',\n\tmanifestType: 'manifest') ~> ResellerDeltaSource\nsource(output(\n\t\tCountryId as integer,\n\t\tIsoCountryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\tmanifestType: 'manifest') ~> TargetCountry\nResellerDeltaSource aggregate(groupBy(ResellerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tReseller = last(Reseller),\n\t\tBusinessType = last(BusinessType),\n\t\tResellerId = last(ResellerId)) ~> Deduplicated1ResellerDeltaSource\nDeduplicated1ResellerDeltaSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tReseller,\n\t\tBusinessType,\n\t\tResellerId,\n\t\tResellerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Reseller\nReseller select(mapColumn(\n\t\tCountryRegion\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectReseller\nSelectReseller select(mapColumn(\n\t\tIsoCountryName = CountryRegion\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PreSKSelectCountry\nPreSKSelectCountry aggregate(groupBy(IsoCountryName),\n\tCount = count(1)) ~> Deduplicated1PreSKSelectCountry\nDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tIsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1PreSKSelectCountry\nTargetCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Deduplicated1TargetCountry\nDeduplicated1TargetCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1TargetCountry\nSelectDeduplicated1TargetCountry select(mapColumn(\n\t\tTarIsoCountryName = IsoCountryName,\n\t\tTarCountryId = CountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarSelectDeduplicated1TargetCountry\nSelectDeduplicated1PreSKSelectCountry, SelectTarSelectDeduplicated1TargetCountry join(IsoCountryName === TarIsoCountryName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarSelectDeduplicated1TargetCountry\nJoinSelectTarSelectDeduplicated1TargetCountry filter(isNull(TarCountryId)) ~> FilterInsertCountry\nFilterInsertCountry select(mapColumn(\n\t\tIsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> InsertCountry\nInsertCountry keyGenerate(output(Sk_CountryId as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SkCountry\nSelectTarSelectDeduplicated1TargetCountry aggregate(Max_TarCountryId = max(toInteger(TarCountryId)) + 0) ~> AggregatedSelectTarSelectDeduplicated1TargetCountry\nAggregatedSelectTarSelectDeduplicated1TargetCountry derive(Max_TarCountryId = iif(isNull(Max_TarCountryId),0,Max_TarCountryId)) ~> MaxSelectTarSelectDeduplicated1TargetCountry\nSkCountry, MaxSelectTarSelectDeduplicated1TargetCountry join(true() === true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinMaxSelectTarSelectDeduplicated1TargetCountry\nJoinMaxSelectTarSelectDeduplicated1TargetCountry derive(CountryId = Sk_CountryId + Max_TarCountryId) ~> DerivedCountry\nDerivedCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PostSkCountry\nJoinSelectTarSelectDeduplicated1TargetCountry filter(!isNull(TarCountryId)) ~> FilterUpdateSelectDeduplicated1PreSKSelectCountry\nFilterUpdateSelectDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId = TarCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UpdateSelectDeduplicated1PreSKSelectCountry\nPostSkCountry, UpdateSelectDeduplicated1PreSKSelectCountry union(byName: true)~> UnionUpdateSelectDeduplicated1PreSKSelectCountry\nUnionUpdateSelectDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tTarIsoCountryName = IsoCountryName,\n\t\tTarCountryId = CountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry\nPreSKSelectCountry, SelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry join(IsoCountryName === TarIsoCountryName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry\nJoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId = TarCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FinalCountry\nFinalCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Country\nCountry sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\trecreate:true,\n\tmanifestType: 'manifest') ~> CountrySink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Country_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "CustomerDataDeltaSource"
						},
						{
							"name": "TargetCountry"
						}
					],
					"sinks": [
						{
							"name": "CountrySink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1CustomerDataDeltaSource"
						},
						{
							"name": "CustomerData"
						},
						{
							"name": "SelectCustomerData"
						},
						{
							"name": "PreSKSelectCountry"
						},
						{
							"name": "Deduplicated1PreSKSelectCountry"
						},
						{
							"name": "SelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "Deduplicated1TargetCountry"
						},
						{
							"name": "SelectDeduplicated1TargetCountry"
						},
						{
							"name": "SelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "JoinSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "FilterInsertCountry"
						},
						{
							"name": "InsertCountry"
						},
						{
							"name": "SkCountry"
						},
						{
							"name": "AggregatedSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "MaxSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "JoinMaxSelectTarSelectDeduplicated1TargetCountry"
						},
						{
							"name": "DerivedCountry"
						},
						{
							"name": "PostSkCountry"
						},
						{
							"name": "FilterUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "UpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "UnionUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "SelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry"
						},
						{
							"name": "FinalCountry"
						},
						{
							"name": "Country"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tCustomerKey as integer,\n\t\tCustomerId as string,\n\t\tCustomer as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'CustomerData',\n\tmanifestType: 'manifest') ~> CustomerDataDeltaSource\nsource(output(\n\t\tCountryId as integer,\n\t\tIsoCountryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\tmanifestType: 'manifest') ~> TargetCountry\nCustomerDataDeltaSource aggregate(groupBy(CustomerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tCustomer = last(Customer),\n\t\tCustomerId = last(CustomerId)) ~> Deduplicated1CustomerDataDeltaSource\nDeduplicated1CustomerDataDeltaSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tCustomer,\n\t\tCustomerId,\n\t\tCustomerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> CustomerData\nCustomerData select(mapColumn(\n\t\tCountryRegion\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCustomerData\nSelectCustomerData select(mapColumn(\n\t\tIsoCountryName = CountryRegion\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PreSKSelectCountry\nPreSKSelectCountry aggregate(groupBy(IsoCountryName),\n\tCount = count(1)) ~> Deduplicated1PreSKSelectCountry\nDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tIsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1PreSKSelectCountry\nTargetCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Deduplicated1TargetCountry\nDeduplicated1TargetCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1TargetCountry\nSelectDeduplicated1TargetCountry select(mapColumn(\n\t\tTarIsoCountryName = IsoCountryName,\n\t\tTarCountryId = CountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarSelectDeduplicated1TargetCountry\nSelectDeduplicated1PreSKSelectCountry, SelectTarSelectDeduplicated1TargetCountry join(IsoCountryName === TarIsoCountryName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarSelectDeduplicated1TargetCountry\nJoinSelectTarSelectDeduplicated1TargetCountry filter(isNull(TarCountryId)) ~> FilterInsertCountry\nFilterInsertCountry select(mapColumn(\n\t\tIsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> InsertCountry\nInsertCountry keyGenerate(output(Sk_CountryId as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SkCountry\nSelectTarSelectDeduplicated1TargetCountry aggregate(Max_TarCountryId = max(toInteger(TarCountryId)) + 0) ~> AggregatedSelectTarSelectDeduplicated1TargetCountry\nAggregatedSelectTarSelectDeduplicated1TargetCountry derive(Max_TarCountryId = iif(isNull(Max_TarCountryId),0,Max_TarCountryId)) ~> MaxSelectTarSelectDeduplicated1TargetCountry\nSkCountry, MaxSelectTarSelectDeduplicated1TargetCountry join(true() === true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinMaxSelectTarSelectDeduplicated1TargetCountry\nJoinMaxSelectTarSelectDeduplicated1TargetCountry derive(CountryId = Sk_CountryId + Max_TarCountryId) ~> DerivedCountry\nDerivedCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PostSkCountry\nJoinSelectTarSelectDeduplicated1TargetCountry filter(!isNull(TarCountryId)) ~> FilterUpdateSelectDeduplicated1PreSKSelectCountry\nFilterUpdateSelectDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId = TarCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UpdateSelectDeduplicated1PreSKSelectCountry\nPostSkCountry, UpdateSelectDeduplicated1PreSKSelectCountry union(byName: true)~> UnionUpdateSelectDeduplicated1PreSKSelectCountry\nUnionUpdateSelectDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tTarIsoCountryName = IsoCountryName,\n\t\tTarCountryId = CountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry\nPreSKSelectCountry, SelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry join(IsoCountryName === TarIsoCountryName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry\nJoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectCountry select(mapColumn(\n\t\tIsoCountryName,\n\t\tCountryId = TarCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FinalCountry\nFinalCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Country\nCountry sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\trecreate:true,\n\tmanifestType: 'manifest') ~> CountrySink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Customer_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "CustomerDataDeltaSource"
						},
						{
							"name": "TargetCountry"
						},
						{
							"name": "TargetLocation"
						}
					],
					"sinks": [
						{
							"name": "CustomerSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1CustomerDataDeltaSource"
						},
						{
							"name": "Deduplicated1TargetCountry"
						},
						{
							"name": "SelectCountry"
						},
						{
							"name": "JoinForCountryIdLookupFunction"
						},
						{
							"name": "Deduplicated1TargetLocation"
						},
						{
							"name": "SelectLocation"
						},
						{
							"name": "JoinForLocationId"
						},
						{
							"name": "Customer"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tCustomerKey as integer,\n\t\tCustomerId as string,\n\t\tCustomer as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'CustomerData',\n\tmanifestType: 'manifest') ~> CustomerDataDeltaSource\nsource(output(\n\t\tCountryId as integer,\n\t\tIsoCountryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\tmanifestType: 'manifest') ~> TargetCountry\nsource(output(\n\t\tLocationId as integer,\n\t\tLocationCity as string,\n\t\tLocationState as string,\n\t\tCountryId as integer,\n\t\tLocationZip as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Location',\n\tmanifestType: 'manifest') ~> TargetLocation\nCustomerDataDeltaSource aggregate(groupBy(CustomerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tCustomer = last(Customer),\n\t\tCustomerId = last(CustomerId)) ~> Deduplicated1CustomerDataDeltaSource\nTargetCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Deduplicated1TargetCountry\nDeduplicated1TargetCountry select(mapColumn(\n\t\tCountryId,\n\t\tCountryName = IsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCountry\nDeduplicated1CustomerDataDeltaSource, SelectCountry join(CountryRegion == CountryName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinForCountryIdLookupFunction\nTargetLocation aggregate(groupBy(LocationId),\n\tLocationCity = last(LocationCity),\n\t\tCountryId = last(CountryId),\n\t\tLocationZip = last(LocationZip),\n\t\tLocationState = last(LocationState)) ~> Deduplicated1TargetLocation\nDeduplicated1TargetLocation select(mapColumn(\n\t\tLocationId,\n\t\tLocationZip,\n\t\tLocationState,\n\t\tLocationCity,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectLocation\nJoinForCountryIdLookupFunction, SelectLocation join(PostalCode == LocationZip\n\t&& StateProvince == LocationState\n\t&& City == LocationCity\n\t&& SelectCountry@CountryId == SelectLocation@CountryId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinForLocationId\nJoinForLocationId select(mapColumn(\n\t\tLocationId,\n\t\tCustomerId,\n\t\tCustomerKey,\n\t\tCustomer\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Customer\nCustomer sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Customer',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> CustomerSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IndividualCustomer_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "CustomerDataDeltaSource"
						}
					],
					"sinks": [
						{
							"name": "IndividualCustomerSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1CustomerDataDeltaSource"
						},
						{
							"name": "CustomerData"
						},
						{
							"name": "SelectCustomerData"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tCustomerKey as integer,\n\t\tCustomerId as string,\n\t\tCustomer as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'CustomerData',\n\tmanifestType: 'manifest') ~> CustomerDataDeltaSource\nCustomerDataDeltaSource aggregate(groupBy(CustomerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tCustomer = last(Customer),\n\t\tCustomerId = last(CustomerId)) ~> Deduplicated1CustomerDataDeltaSource\nDeduplicated1CustomerDataDeltaSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tCustomer,\n\t\tCustomerId,\n\t\tCustomerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> CustomerData\nCustomerData select(mapColumn(\n\t\tCustomerId,\n\t\tCustomerKey,\n\t\tIndividualCustomerName = Customer\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCustomerData\nSelectCustomerData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'IndividualCustomer',\n\trecreate:true,\n\tmanifestType: 'manifest') ~> IndividualCustomerSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Item_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ProductDataDeltaSource"
						}
					],
					"sinks": [
						{
							"name": "ItemSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1ProductDataDeltaSource"
						},
						{
							"name": "ProductData"
						},
						{
							"name": "SelectProductData"
						},
						{
							"name": "Item"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tCategory as string,\n\t\tSubcategory as string,\n\t\tModel as string,\n\t\tListPrice as decimal(18,2),\n\t\tColor as string,\n\t\tStandardCost as decimal(18,2),\n\t\tProduct as string,\n\t\tSKU as string,\n\t\tProductKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'ProductData',\n\tmanifestType: 'manifest') ~> ProductDataDeltaSource\nProductDataDeltaSource aggregate(groupBy(ProductKey),\n\tCategory = last(Category),\n\t\tSubcategory = last(Subcategory),\n\t\tModel = last(Model),\n\t\tListPrice = last(ListPrice),\n\t\tColor = last(Color),\n\t\tStandardCost = last(StandardCost),\n\t\tProduct = last(Product),\n\t\tSKU = last(SKU)) ~> Deduplicated1ProductDataDeltaSource\nDeduplicated1ProductDataDeltaSource select(mapColumn(\n\t\tCategory,\n\t\tSubcategory,\n\t\tModel,\n\t\tListPrice,\n\t\tColor,\n\t\tStandardCost,\n\t\tProduct,\n\t\tSKU,\n\t\tProductKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ProductData\nProductData select(mapColumn(\n\t\tSKU,\n\t\tStandardCost,\n\t\tListPrice\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectProductData\nSelectProductData select(mapColumn(\n\t\tItemSku = SKU,\n\t\tStandardCost,\n\t\tListPrice\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Item\nItem sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Item',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> ItemSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Load_adworks')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adworksRaw",
								"type": "DatasetReference"
							},
							"name": "CSVSource"
						}
					],
					"sinks": [
						{
							"name": "adworksSink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     tableName as string",
						"}",
						"source(output(",
						"          CountryId as short,",
						"          IsoCountryName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CSVSource",
						"CSVSource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'adworks',",
						"     tableName: ($tableName),",
						"     recreate:true) ~> adworksSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/adworksRaw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Location2_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ResellerDeltaSource"
						},
						{
							"name": "TargetCountry"
						},
						{
							"name": "TargetLocation"
						}
					],
					"sinks": [
						{
							"name": "LocationSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1ResellerDeltaSource"
						},
						{
							"name": "Reseller"
						},
						{
							"name": "SelectReseller"
						},
						{
							"name": "Deduplicated1TargetCountry"
						},
						{
							"name": "SelectCountry"
						},
						{
							"name": "JoinForCountryId"
						},
						{
							"name": "SelectForCountryId"
						},
						{
							"name": "PreSKSelectLocation"
						},
						{
							"name": "Deduplicated1PreSKSelectLocation"
						},
						{
							"name": "SelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "Deduplicated1TargetLocation"
						},
						{
							"name": "SelectDeduplicated1TargetLocation"
						},
						{
							"name": "SelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "JoinSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "FilterInsertLocation"
						},
						{
							"name": "InsertLocation"
						},
						{
							"name": "SkLocation"
						},
						{
							"name": "AggregatedSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "MaxSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "JoinMaxSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "DerivedLocation"
						},
						{
							"name": "PostSkLocation"
						},
						{
							"name": "FilterUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "UpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "UnionUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "SelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "FinalLocation"
						},
						{
							"name": "Location"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tPostalCode as string,\n\t\tCountryRegion as string,\n\t\tStateProvince as string,\n\t\tCity as string,\n\t\tReseller as string,\n\t\tBusinessType as string,\n\t\tResellerId as string,\n\t\tResellerKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Reseller',\n\tmanifestType: 'manifest') ~> ResellerDeltaSource\nsource(output(\n\t\tCountryId as integer,\n\t\tIsoCountryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\tmanifestType: 'manifest') ~> TargetCountry\nsource(output(\n\t\tLocationId as integer,\n\t\tLocationCity as string,\n\t\tLocationState as string,\n\t\tCountryId as integer,\n\t\tLocationZip as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Location',\n\tmanifestType: 'manifest') ~> TargetLocation\nResellerDeltaSource aggregate(groupBy(ResellerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tReseller = last(Reseller),\n\t\tBusinessType = last(BusinessType),\n\t\tResellerId = last(ResellerId)) ~> Deduplicated1ResellerDeltaSource\nDeduplicated1ResellerDeltaSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tReseller,\n\t\tBusinessType,\n\t\tResellerId,\n\t\tResellerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Reseller\nReseller select(mapColumn(\n\t\tCountryRegionAlias = CountryRegion,\n\t\tPostalCode,\n\t\tStateProvince,\n\t\tCity\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectReseller\nTargetCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Deduplicated1TargetCountry\nDeduplicated1TargetCountry select(mapColumn(\n\t\tCountryId,\n\t\tIsoCountryNameAlias = IsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCountry\nSelectReseller, SelectCountry join(CountryRegionAlias === IsoCountryNameAlias,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinForCountryId\nJoinForCountryId select(mapColumn(\n\t\tCountryRegionAlias,\n\t\tPostalCode,\n\t\tStateProvince,\n\t\tCity,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectForCountryId\nSelectForCountryId select(mapColumn(\n\t\tLocationZip = PostalCode,\n\t\tLocationState = StateProvince,\n\t\tLocationCity = City,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PreSKSelectLocation\nPreSKSelectLocation aggregate(groupBy(LocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip),\n\tCount = count(1)) ~> Deduplicated1PreSKSelectLocation\nDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1PreSKSelectLocation\nTargetLocation aggregate(groupBy(LocationId),\n\tLocationZip = last(LocationZip),\n\t\tLocationState = last(LocationState),\n\t\tLocationCity = last(LocationCity),\n\t\tCountryId = last(CountryId)) ~> Deduplicated1TargetLocation\nDeduplicated1TargetLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip,\n\t\tLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1TargetLocation\nSelectDeduplicated1TargetLocation select(mapColumn(\n\t\tTarLocationCity = LocationCity,\n\t\tTarLocationState = LocationState,\n\t\tTarCountryId = CountryId,\n\t\tTarLocationZip = LocationZip,\n\t\tTarLocationId = LocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarSelectDeduplicated1TargetLocation\nSelectDeduplicated1PreSKSelectLocation, SelectTarSelectDeduplicated1TargetLocation join(LocationCity === TarLocationCity\n\t&& LocationState === TarLocationState\n\t&& CountryId === TarCountryId\n\t&& LocationZip === TarLocationZip,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarSelectDeduplicated1TargetLocation\nJoinSelectTarSelectDeduplicated1TargetLocation filter(isNull(TarLocationId)) ~> FilterInsertLocation\nFilterInsertLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> InsertLocation\nInsertLocation keyGenerate(output(Sk_LocationId as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SkLocation\nSelectTarSelectDeduplicated1TargetLocation aggregate(Max_TarLocationId = max(toInteger(TarLocationId)) + 0) ~> AggregatedSelectTarSelectDeduplicated1TargetLocation\nAggregatedSelectTarSelectDeduplicated1TargetLocation derive(Max_TarLocationId = iif(isNull(Max_TarLocationId),0,Max_TarLocationId)) ~> MaxSelectTarSelectDeduplicated1TargetLocation\nSkLocation, MaxSelectTarSelectDeduplicated1TargetLocation join(true() === true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinMaxSelectTarSelectDeduplicated1TargetLocation\nJoinMaxSelectTarSelectDeduplicated1TargetLocation derive(LocationId = Sk_LocationId + Max_TarLocationId) ~> DerivedLocation\nDerivedLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip,\n\t\tLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PostSkLocation\nJoinSelectTarSelectDeduplicated1TargetLocation filter(!isNull(TarLocationId)) ~> FilterUpdateSelectDeduplicated1PreSKSelectLocation\nFilterUpdateSelectDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip,\n\t\tLocationId = TarLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UpdateSelectDeduplicated1PreSKSelectLocation\nPostSkLocation, UpdateSelectDeduplicated1PreSKSelectLocation union(byName: true)~> UnionUpdateSelectDeduplicated1PreSKSelectLocation\nUnionUpdateSelectDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tTarLocationCity = LocationCity,\n\t\tTarLocationState = LocationState,\n\t\tTarCountryId = CountryId,\n\t\tTarLocationZip = LocationZip,\n\t\tTarLocationId = LocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation\nPreSKSelectLocation, SelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation join(LocationCity === TarLocationCity\n\t&& LocationState === TarLocationState\n\t&& CountryId === TarCountryId\n\t&& LocationZip === TarLocationZip,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation\nJoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tLocationZip,\n\t\tLocationState,\n\t\tLocationCity,\n\t\tCountryId,\n\t\tLocationId = TarLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FinalLocation\nFinalLocation aggregate(groupBy(LocationId),\n\tLocationZip = last(LocationZip),\n\t\tLocationState = last(LocationState),\n\t\tLocationCity = last(LocationCity),\n\t\tCountryId = last(CountryId)) ~> Location\nLocation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Location',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> LocationSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Location_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "CustomerDataDeltaSource"
						},
						{
							"name": "TargetCountry"
						},
						{
							"name": "TargetLocation"
						}
					],
					"sinks": [
						{
							"name": "LocationSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1CustomerDataDeltaSource"
						},
						{
							"name": "CustomerData"
						},
						{
							"name": "SelectCustomerData"
						},
						{
							"name": "Deduplicated1TargetCountry"
						},
						{
							"name": "SelectCountry"
						},
						{
							"name": "JoinForCountryId"
						},
						{
							"name": "SelectForCountryId"
						},
						{
							"name": "PreSKSelectLocation"
						},
						{
							"name": "Deduplicated1PreSKSelectLocation"
						},
						{
							"name": "SelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "Deduplicated1TargetLocation"
						},
						{
							"name": "SelectDeduplicated1TargetLocation"
						},
						{
							"name": "SelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "JoinSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "FilterInsertLocation"
						},
						{
							"name": "InsertLocation"
						},
						{
							"name": "SkLocation"
						},
						{
							"name": "AggregatedSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "MaxSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "JoinMaxSelectTarSelectDeduplicated1TargetLocation"
						},
						{
							"name": "DerivedLocation"
						},
						{
							"name": "PostSkLocation"
						},
						{
							"name": "FilterUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "UpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "UnionUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "SelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation"
						},
						{
							"name": "FinalLocation"
						},
						{
							"name": "Location"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tCustomerKey as integer,\n\t\tCustomerId as string,\n\t\tCustomer as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'CustomerData',\n\tmanifestType: 'manifest') ~> CustomerDataDeltaSource\nsource(output(\n\t\tCountryId as integer,\n\t\tIsoCountryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Country',\n\tmanifestType: 'manifest') ~> TargetCountry\nsource(output(\n\t\tLocationId as integer,\n\t\tLocationCity as string,\n\t\tLocationState as string,\n\t\tCountryId as integer,\n\t\tLocationZip as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Location',\n\tmanifestType: 'manifest') ~> TargetLocation\nCustomerDataDeltaSource aggregate(groupBy(CustomerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tCustomer = last(Customer),\n\t\tCustomerId = last(CustomerId)) ~> Deduplicated1CustomerDataDeltaSource\nDeduplicated1CustomerDataDeltaSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tCustomer,\n\t\tCustomerId,\n\t\tCustomerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> CustomerData\nCustomerData select(mapColumn(\n\t\tCountryRegionAlias = CountryRegion,\n\t\tPostalCode,\n\t\tStateProvince,\n\t\tCity\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCustomerData\nTargetCountry aggregate(groupBy(CountryId),\n\tIsoCountryName = last(IsoCountryName)) ~> Deduplicated1TargetCountry\nDeduplicated1TargetCountry select(mapColumn(\n\t\tCountryId,\n\t\tIsoCountryNameAlias = IsoCountryName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCountry\nSelectCustomerData, SelectCountry join(CountryRegionAlias === IsoCountryNameAlias,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinForCountryId\nJoinForCountryId select(mapColumn(\n\t\tCountryRegionAlias,\n\t\tPostalCode,\n\t\tStateProvince,\n\t\tCity,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectForCountryId\nSelectForCountryId select(mapColumn(\n\t\tLocationZip = PostalCode,\n\t\tLocationState = StateProvince,\n\t\tLocationCity = City,\n\t\tCountryId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PreSKSelectLocation\nPreSKSelectLocation aggregate(groupBy(LocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip),\n\tCount = count(1)) ~> Deduplicated1PreSKSelectLocation\nDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1PreSKSelectLocation\nTargetLocation aggregate(groupBy(LocationId),\n\tLocationZip = last(LocationZip),\n\t\tLocationState = last(LocationState),\n\t\tLocationCity = last(LocationCity),\n\t\tCountryId = last(CountryId)) ~> Deduplicated1TargetLocation\nDeduplicated1TargetLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip,\n\t\tLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDeduplicated1TargetLocation\nSelectDeduplicated1TargetLocation select(mapColumn(\n\t\tTarLocationCity = LocationCity,\n\t\tTarLocationState = LocationState,\n\t\tTarCountryId = CountryId,\n\t\tTarLocationZip = LocationZip,\n\t\tTarLocationId = LocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarSelectDeduplicated1TargetLocation\nSelectDeduplicated1PreSKSelectLocation, SelectTarSelectDeduplicated1TargetLocation join(LocationCity === TarLocationCity\n\t&& LocationState === TarLocationState\n\t&& CountryId === TarCountryId\n\t&& LocationZip === TarLocationZip,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarSelectDeduplicated1TargetLocation\nJoinSelectTarSelectDeduplicated1TargetLocation filter(isNull(TarLocationId)) ~> FilterInsertLocation\nFilterInsertLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> InsertLocation\nInsertLocation keyGenerate(output(Sk_LocationId as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SkLocation\nSelectTarSelectDeduplicated1TargetLocation aggregate(Max_TarLocationId = max(toInteger(TarLocationId)) + 0) ~> AggregatedSelectTarSelectDeduplicated1TargetLocation\nAggregatedSelectTarSelectDeduplicated1TargetLocation derive(Max_TarLocationId = iif(isNull(Max_TarLocationId),0,Max_TarLocationId)) ~> MaxSelectTarSelectDeduplicated1TargetLocation\nSkLocation, MaxSelectTarSelectDeduplicated1TargetLocation join(true() === true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinMaxSelectTarSelectDeduplicated1TargetLocation\nJoinMaxSelectTarSelectDeduplicated1TargetLocation derive(LocationId = Sk_LocationId + Max_TarLocationId) ~> DerivedLocation\nDerivedLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip,\n\t\tLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> PostSkLocation\nJoinSelectTarSelectDeduplicated1TargetLocation filter(!isNull(TarLocationId)) ~> FilterUpdateSelectDeduplicated1PreSKSelectLocation\nFilterUpdateSelectDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tLocationCity,\n\t\tLocationState,\n\t\tCountryId,\n\t\tLocationZip,\n\t\tLocationId = TarLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UpdateSelectDeduplicated1PreSKSelectLocation\nPostSkLocation, UpdateSelectDeduplicated1PreSKSelectLocation union(byName: true)~> UnionUpdateSelectDeduplicated1PreSKSelectLocation\nUnionUpdateSelectDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tTarLocationCity = LocationCity,\n\t\tTarLocationState = LocationState,\n\t\tTarCountryId = CountryId,\n\t\tTarLocationZip = LocationZip,\n\t\tTarLocationId = LocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation\nPreSKSelectLocation, SelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation join(LocationCity === TarLocationCity\n\t&& LocationState === TarLocationState\n\t&& CountryId === TarCountryId\n\t&& LocationZip === TarLocationZip,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation\nJoinSelectTarUnionUpdateSelectDeduplicated1PreSKSelectLocation select(mapColumn(\n\t\tLocationZip,\n\t\tLocationState,\n\t\tLocationCity,\n\t\tCountryId,\n\t\tLocationId = TarLocationId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FinalLocation\nFinalLocation aggregate(groupBy(LocationId),\n\tLocationZip = last(LocationZip),\n\t\tLocationState = last(LocationState),\n\t\tLocationCity = last(LocationCity),\n\t\tCountryId = last(CountryId)) ~> Location\nLocation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Location',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> LocationSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ProductCategoryDim_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ProductDataDeltaSource"
						}
					],
					"sinks": [
						{
							"name": "ProductCategorySink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1ProductDataDeltaSource"
						},
						{
							"name": "ProductData"
						},
						{
							"name": "SelectProductData"
						},
						{
							"name": "ProductCategory"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tCategory as string,\n\t\tSubcategory as string,\n\t\tModel as string,\n\t\tListPrice as decimal(18,2),\n\t\tColor as string,\n\t\tStandardCost as decimal(18,2),\n\t\tProduct as string,\n\t\tSKU as string,\n\t\tProductKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'ProductData',\n\tmanifestType: 'manifest') ~> ProductDataDeltaSource\nProductDataDeltaSource aggregate(groupBy(ProductKey),\n\tCategory = last(Category),\n\t\tSubcategory = last(Subcategory),\n\t\tModel = last(Model),\n\t\tListPrice = last(ListPrice),\n\t\tColor = last(Color),\n\t\tStandardCost = last(StandardCost),\n\t\tProduct = last(Product),\n\t\tSKU = last(SKU)) ~> Deduplicated1ProductDataDeltaSource\nDeduplicated1ProductDataDeltaSource select(mapColumn(\n\t\tCategory,\n\t\tSubcategory,\n\t\tModel,\n\t\tListPrice,\n\t\tColor,\n\t\tStandardCost,\n\t\tProduct,\n\t\tSKU,\n\t\tProductKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ProductData\nProductData select(mapColumn(\n\t\tProductKey,\n\t\tModel,\n\t\tSubcategory,\n\t\tCategory\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectProductData\nSelectProductData select(mapColumn(\n\t\tProductId = ProductKey,\n\t\tModel,\n\t\tSubCategory = Subcategory,\n\t\tCategory\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ProductCategory\nProductCategory sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'ProductCategory',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> ProductCategorySink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Product_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ProductDataDeltaSource"
						}
					],
					"sinks": [
						{
							"name": "ProductSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1ProductDataDeltaSource"
						},
						{
							"name": "ProductData"
						},
						{
							"name": "SelectProductData"
						},
						{
							"name": "Product"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tCategory as string,\n\t\tSubcategory as string,\n\t\tModel as string,\n\t\tListPrice as decimal(18,2),\n\t\tColor as string,\n\t\tStandardCost as decimal(18,2),\n\t\tProduct as string,\n\t\tSKU as string,\n\t\tProductKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'ProductData',\n\tmanifestType: 'manifest') ~> ProductDataDeltaSource\nProductDataDeltaSource aggregate(groupBy(ProductKey),\n\tCategory = last(Category),\n\t\tSubcategory = last(Subcategory),\n\t\tModel = last(Model),\n\t\tListPrice = last(ListPrice),\n\t\tColor = last(Color),\n\t\tStandardCost = last(StandardCost),\n\t\tProduct = last(Product),\n\t\tSKU = last(SKU)) ~> Deduplicated1ProductDataDeltaSource\nDeduplicated1ProductDataDeltaSource select(mapColumn(\n\t\tCategory,\n\t\tSubcategory,\n\t\tModel,\n\t\tListPrice,\n\t\tColor,\n\t\tStandardCost,\n\t\tProduct,\n\t\tSKU,\n\t\tProductKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ProductData\nProductData select(mapColumn(\n\t\tProductKey,\n\t\tSKU,\n\t\tProduct,\n\t\tColor\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectProductData\nSelectProductData select(mapColumn(\n\t\tProductId = ProductKey,\n\t\tItemSku = SKU,\n\t\tProductName = Product,\n\t\tProductColor = Color\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Product\nProduct sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Product',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> ProductSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Territory_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "SalesTerritoryDeltaSource"
						}
					],
					"sinks": [
						{
							"name": "TerritorySink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1SalesTerritoryDeltaSource"
						},
						{
							"name": "SalesTerritory"
						},
						{
							"name": "SelectSalesTerritory"
						},
						{
							"name": "Territory"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tSalesTerritoryKey as integer,\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tGroup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'SalesTerritory',\n\tmanifestType: 'manifest') ~> SalesTerritoryDeltaSource\nSalesTerritoryDeltaSource aggregate(groupBy(SalesTerritoryKey),\n\tGroup = last(Group),\n\t\tCountry = last(Country),\n\t\tRegion = last(Region)) ~> Deduplicated1SalesTerritoryDeltaSource\nDeduplicated1SalesTerritoryDeltaSource select(mapColumn(\n\t\tGroup,\n\t\tCountry,\n\t\tRegion,\n\t\tSalesTerritoryKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SalesTerritory\nSalesTerritory select(mapColumn(\n\t\tGroup,\n\t\tCountry,\n\t\tRegion,\n\t\tSalesTerritoryKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectSalesTerritory\nSelectSalesTerritory select(mapColumn(\n\t\tGroup,\n\t\tCountry,\n\t\tRegion,\n\t\tTerritoryId = SalesTerritoryKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Territory\nTerritory sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Territory',\n\trecreate:true,\n\tmanifestType: 'manifest') ~> TerritorySink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TransactionLineItem_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "SalesDeltaSource"
						},
						{
							"name": "SalesOrderSource"
						}
					],
					"sinks": [
						{
							"name": "TransactionLineItemSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1SalesDeltaSource"
						},
						{
							"name": "Sales"
						},
						{
							"name": "Deduplicated1SalesOrderSource"
						},
						{
							"name": "SalesOrder"
						},
						{
							"name": "JoinSalesOrder"
						},
						{
							"name": "SelectJoinSalesOrder"
						},
						{
							"name": "TransactionLineItem"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tSalesAmount as decimal(18,2),\n\t\tTotalProductCost as decimal(18,2),\n\t\tProductStandardCost as decimal(18,2),\n\t\tUnitPriceDiscountPct as decimal(18,2),\n\t\tExtendedAmount as decimal(18,2),\n\t\tUnitPrice as decimal(18,2),\n\t\tOrderQuantity as integer,\n\t\tSalesTerritoryKey as integer,\n\t\tShipDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tOrderDateKey as integer,\n\t\tProductKey as integer,\n\t\tCustomerKey as integer,\n\t\tResellerKey as integer,\n\t\tSalesOrderLineKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Sales',\n\tmanifestType: 'manifest') ~> SalesDeltaSource\nsource(output(\n\t\tSalesOrderLine as string,\n\t\tSalesOrder as string,\n\t\tSalesOrderLineKey as integer,\n\t\tChannel as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'SalesOrder',\n\tmanifestType: 'manifest') ~> SalesOrderSource\nSalesDeltaSource aggregate(groupBy(ProductKey,\n\t\tCustomerKey,\n\t\tResellerKey,\n\t\tSalesOrderLineKey),\n\tSalesAmount = last(SalesAmount),\n\t\tTotalProductCost = last(TotalProductCost),\n\t\tProductStandardCost = last(ProductStandardCost),\n\t\tUnitPriceDiscountPct = last(UnitPriceDiscountPct),\n\t\tExtendedAmount = last(ExtendedAmount),\n\t\tUnitPrice = last(UnitPrice),\n\t\tOrderQuantity = last(OrderQuantity),\n\t\tSalesTerritoryKey = last(SalesTerritoryKey),\n\t\tShipDateKey = last(ShipDateKey),\n\t\tDueDateKey = last(DueDateKey),\n\t\tOrderDateKey = last(OrderDateKey)) ~> Deduplicated1SalesDeltaSource\nDeduplicated1SalesDeltaSource select(mapColumn(\n\t\tSalesAmount,\n\t\tTotalProductCost,\n\t\tProductStandardCost,\n\t\tUnitPriceDiscountPct,\n\t\tExtendedAmount,\n\t\tUnitPrice,\n\t\tOrderQuantity,\n\t\tSalesTerritoryKey,\n\t\tShipDateKey,\n\t\tDueDateKey,\n\t\tOrderDateKey,\n\t\tProductKey,\n\t\tCustomerKey,\n\t\tResellerKey,\n\t\tSalesOrderLineKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Sales\nSalesOrderSource aggregate(groupBy(SalesOrderLineKey),\n\tSalesOrderLine = last(SalesOrderLine),\n\t\tSalesOrder = last(SalesOrder),\n\t\tChannel = last(Channel)) ~> Deduplicated1SalesOrderSource\nDeduplicated1SalesOrderSource select(mapColumn(\n\t\tSalesOrderLine,\n\t\tSalesOrder,\n\t\tSalesOrderLineKey,\n\t\tChannel\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SalesOrder\nSales, SalesOrder join(Sales@SalesOrderLineKey === SalesOrder@SalesOrderLineKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSalesOrder\nJoinSalesOrder select(mapColumn(\n\t\tShipDateKey,\n\t\tDueDateKey,\n\t\tOrderDateKey,\n\t\tSalesOrder,\n\t\tSales_SalesOrderLineKey_Generated = Sales@SalesOrderLineKey,\n\t\tProductKey,\n\t\tOrderQuantity,\n\t\tUnitPrice,\n\t\tTotalProductCost,\n\t\tProductStandardCost,\n\t\tSalesAmount,\n\t\tUnitPriceDiscountPct\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectJoinSalesOrder\nSelectJoinSalesOrder select(mapColumn(\n\t\tShipDateKey,\n\t\tDueDateKey,\n\t\tOrderDateKey,\n\t\tTransactionId = SalesOrder,\n\t\tTransactionLineItemId = Sales_SalesOrderLineKey_Generated,\n\t\tProductId = ProductKey,\n\t\tQuantity = OrderQuantity,\n\t\tProductListPriceAmount = UnitPrice,\n\t\tTransactionProductPriceAmount = TotalProductCost,\n\t\tTotalTransactionLineItemAmount = ProductStandardCost,\n\t\tTotalTransactionSalesPriceAmount = SalesAmount,\n\t\tProductPriceAdjustmentPercentage = UnitPriceDiscountPct\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> TransactionLineItem\nTransactionLineItem sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'TransactionLineItem',\n\trecreate:true,\n\tpartitionBy('hash', 1),\n\tmanifestType: 'manifest') ~> TransactionLineItemSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Transaction_DataFlow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "SalesOrderSource"
						},
						{
							"name": "SalesSource"
						},
						{
							"name": "CustomerDataSource"
						},
						{
							"name": "ResellerSource"
						},
						{
							"name": "ChannelTypeSource"
						}
					],
					"sinks": [
						{
							"name": "TransactionSink"
						}
					],
					"transformations": [
						{
							"name": "Deduplicated1SalesOrderDeltaSource"
						},
						{
							"name": "SalesOrder"
						},
						{
							"name": "Deduplicated1SalesSource"
						},
						{
							"name": "Sales"
						},
						{
							"name": "JoinSales"
						},
						{
							"name": "Deduplicated1CustomerDataSource"
						},
						{
							"name": "CustomerData"
						},
						{
							"name": "JoinCustomerData"
						},
						{
							"name": "Deduplicated1ResellerSource"
						},
						{
							"name": "Reseller"
						},
						{
							"name": "JoinReseller"
						},
						{
							"name": "SelectJoinReseller"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "JoinChannelType"
						}
					],
					"script": "parameters{\n\tmodifiedAfter as timestamp (toTimestamp(\"01-01-1900\")),\n\tmodifiedBefore as timestamp (currentTimestamp())\n}\nsource(output(\n\t\tSalesOrderLine as string,\n\t\tSalesOrder as string,\n\t\tSalesOrderLineKey as integer,\n\t\tChannel as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'SalesOrder',\n\tmanifestType: 'manifest') ~> SalesOrderSource\nsource(output(\n\t\tSalesAmount as decimal(18,2),\n\t\tTotalProductCost as decimal(18,2),\n\t\tProductStandardCost as decimal(18,2),\n\t\tUnitPriceDiscountPct as decimal(18,2),\n\t\tExtendedAmount as decimal(18,2),\n\t\tUnitPrice as decimal(18,2),\n\t\tOrderQuantity as integer,\n\t\tSalesTerritoryKey as integer,\n\t\tShipDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tOrderDateKey as integer,\n\t\tProductKey as integer,\n\t\tCustomerKey as integer,\n\t\tResellerKey as integer,\n\t\tSalesOrderLineKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Sales',\n\tmanifestType: 'manifest') ~> SalesSource\nsource(output(\n\t\tCustomerKey as integer,\n\t\tCustomerId as string,\n\t\tCustomer as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'CustomerData',\n\tmanifestType: 'manifest') ~> CustomerDataSource\nsource(output(\n\t\tPostalCode as string,\n\t\tCountryRegion as string,\n\t\tStateProvince as string,\n\t\tCity as string,\n\t\tReseller as string,\n\t\tBusinessType as string,\n\t\tResellerId as string,\n\t\tResellerKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworks',\n\ttableName: 'Reseller',\n\tmanifestType: 'manifest') ~> ResellerSource\nsource(output(\n\t\tChannelTypeId as short,\n\t\tChannelTypeName as string,\n\t\tChannelTypeKey as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'ChannelType') ~> ChannelTypeSource\nSalesOrderSource aggregate(groupBy(SalesOrderLineKey),\n\tSalesOrderLine = last(SalesOrderLine),\n\t\tSalesOrder = last(SalesOrder),\n\t\tChannel = last(Channel)) ~> Deduplicated1SalesOrderDeltaSource\nDeduplicated1SalesOrderDeltaSource select(mapColumn(\n\t\tSalesOrderLine,\n\t\tSalesOrder,\n\t\tSalesOrderLineKey,\n\t\tChannel\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SalesOrder\nSalesSource aggregate(groupBy(ProductKey,\n\t\tCustomerKey,\n\t\tResellerKey,\n\t\tSalesOrderLineKey),\n\tSalesAmount = last(SalesAmount),\n\t\tTotalProductCost = last(TotalProductCost),\n\t\tProductStandardCost = last(ProductStandardCost),\n\t\tUnitPriceDiscountPct = last(UnitPriceDiscountPct),\n\t\tExtendedAmount = last(ExtendedAmount),\n\t\tUnitPrice = last(UnitPrice),\n\t\tOrderQuantity = last(OrderQuantity),\n\t\tSalesTerritoryKey = last(SalesTerritoryKey),\n\t\tShipDateKey = last(ShipDateKey),\n\t\tDueDateKey = last(DueDateKey),\n\t\tOrderDateKey = last(OrderDateKey)) ~> Deduplicated1SalesSource\nDeduplicated1SalesSource select(mapColumn(\n\t\tSalesAmount,\n\t\tTotalProductCost,\n\t\tProductStandardCost,\n\t\tUnitPriceDiscountPct,\n\t\tExtendedAmount,\n\t\tUnitPrice,\n\t\tOrderQuantity,\n\t\tSalesTerritoryKey,\n\t\tShipDateKey,\n\t\tDueDateKey,\n\t\tOrderDateKey,\n\t\tProductKey,\n\t\tCustomerKey,\n\t\tResellerKey,\n\t\tSalesOrderLineKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Sales\nSalesOrder, Sales join(SalesOrder@SalesOrderLineKey == Sales@SalesOrderLineKey,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSales\nCustomerDataSource aggregate(groupBy(CustomerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tCustomer = last(Customer),\n\t\tCustomerId = last(CustomerId)) ~> Deduplicated1CustomerDataSource\nDeduplicated1CustomerDataSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tCustomer,\n\t\tCustomerId,\n\t\tCustomerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> CustomerData\nJoinSales, CustomerData join(Sales@CustomerKey == CustomerData@CustomerKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCustomerData\nResellerSource aggregate(groupBy(ResellerKey),\n\tPostalCode = last(PostalCode),\n\t\tCountryRegion = last(CountryRegion),\n\t\tStateProvince = last(StateProvince),\n\t\tCity = last(City),\n\t\tReseller = last(Reseller),\n\t\tBusinessType = last(BusinessType),\n\t\tResellerId = last(ResellerId)) ~> Deduplicated1ResellerSource\nDeduplicated1ResellerSource select(mapColumn(\n\t\tPostalCode,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity,\n\t\tReseller,\n\t\tBusinessType,\n\t\tResellerId,\n\t\tResellerKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Reseller\nJoinCustomerData, Reseller join(Sales@ResellerKey == Reseller@ResellerKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinReseller\nJoinChannelType select(mapColumn(\n\t\tSalesOrder,\n\t\tSalesAmount,\n\t\tCustomerKey = CustomerData@CustomerKey,\n\t\tResellerKey = Sales@ResellerKey,\n\t\tChannelTypeKey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectJoinReseller\nSelectJoinReseller aggregate(groupBy(SalesOrder,\n\t\tChannelTypeKey,\n\t\tCustomerKey,\n\t\tResellerKey),\n\tSalesAmount = sum(SalesAmount)) ~> aggregate1\nJoinReseller, ChannelTypeSource join(Channel == ChannelTypeName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinChannelType\naggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'adworkstarget',\n\ttableName: 'Transaction',\n\trecreate:true,\n\tmanifestType: 'manifest') ~> TransactionSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworks_ChannelType')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ChannelTypeSource"
						}
					],
					"sinks": [
						{
							"name": "ChannelType"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKey"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CountryId as short,",
						"          IsoCountryName as string,",
						"          SalesOrderLine as string,",
						"          SalesOrder as string,",
						"          SalesOrderLineKey as string,",
						"          Channel as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'adworks',",
						"     tableName: 'SalesOrder') ~> ChannelTypeSource",
						"select1 keyGenerate(output(ChannelTypeKey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> SurrogateKey",
						"ChannelTypeSource aggregate(groupBy(Channel),",
						"     firstValue = first(Channel)) ~> aggregate1",
						"aggregate1 select(mapColumn(",
						"          Channel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"SurrogateKey sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'adworkstarget',",
						"     tableName: 'ChannelType',",
						"     recreate:true,",
						"     mapColumn(",
						"          Channel,",
						"          ChannelTypeKey",
						"     )) ~> ChannelType"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworks_Country')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "CountrySource"
						}
					],
					"sinks": [
						{
							"name": "Country"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CountryId as short,",
						"          IsoCountryName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'adworks',",
						"     tableName: 'Country') ~> CountrySource",
						"CountrySource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'adworkstarget',",
						"     tableName: 'Country',",
						"     recreate:true) ~> Country"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworks_Location')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adworksRaw",
								"type": "DatasetReference"
							},
							"name": "LocationCSV"
						}
					],
					"sinks": [
						{
							"name": "Location"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          {-1} as string,",
						"          {[Not Applicable]1} as string,",
						"          {[Not Applicable]2} as string,",
						"          {[Not Applicable]3} as string,",
						"          {[Not Applicable]4} as string,",
						"          {[Not Applicable]5} as string,",
						"          {[Not Applicable]6} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LocationCSV",
						"LocationCSV sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'adworks',",
						"     tableName: 'Location',",
						"     recreate:true) ~> Location"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/adworksRaw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Customer Orders')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT   \ncus.CustomerTypeId\n,cus.CustomerId\n,ord.[OrderId]\n,ord.[OrderEnteredByEmployeeId]\n,ord.[OrderReceivedTimestamp]\n,ord.[OrderTotalAmount]\n\n FROM [RetailTemplateDB].[dbo].[Order] ord\n INNER JOIN [RetailTemplateDB].[dbo].[Customer] cus\n ON ord.CustomerId = cus.CustomerId\n ORDER BY cus.CustomerId, ord.[OrderReceivedTimestamp]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "RetailTemplateDB",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT count(distinct [CustomerKey])\n FROM [adworkstarget].[dbo].[Customer]\n\n SELECT count(distinct [CustomerKey])\n FROM [adworkstarget].[dbo].[IndividualCustomer]\n\nSELECT count(distinct [CustomerKey])\n FROM [adworkstarget].[dbo].[Transaction]\n\n\nSELECT count(distinct [ResellerKey])\n FROM [adworkstarget].[dbo].[Transaction]\n\n\n select \n t.[TerritoryId],\n c.[CountryId],\n c.[Country]\n t.[Group],\n t.[Region] \n from [adworkstarget].[dbo].[Country] as c\n inner join [adworkstarget].[dbo].[Territory] as t\n on c.IsoCountryName = t.Country\n\n select * from [adworkstarget].[dbo].[Territory]\n\n select * from [adworkstarget].[dbo].[Location]\n\n select * from [adworkstarget].[dbo].[ChannelType]\n\n\n create view vTerritory\n AS\n select \n t.[TerritoryId],\n c.[CountryId],\n t.[Country],\n t.[Group],\n t.[Region] \n from [adworkstarget].[dbo].[Country] as c\n inner join [adworkstarget].[dbo].[Territory] as t\n on c.IsoCountryName = t.Country\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "adworkstarget",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [SalesOrder]\n,[Channel]\n,f.[CustomerKey]\n,[ResellerKey]\n,[ResellerId]\n,[Reseller]\n,[SalesAmount] \n FROM [adworkstarget].[dbo].[Transaction] as f\n left join [adworkstarget].[dbo].[Customer] as c\n on f.CustomerKey = c.CustomerKey\n where c.CustomerKey is null\n and f.CustomerKey is not null",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "adworkstarget",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 5')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "adworkstarget"
				},
				"content": {
					"query": "CREATE TABLE IndividualCustomer\n(\nCustomerId [integer], \nIndividualCustomerName [string]\n)\n\nCREATE TABLE Customer\n(\n[CustomerId] [integer], \n[CustomerKey] [string], \n[LocationId] [integer]\n)\n\nCREATE TABLE ProductDimCategory\n(\n[ProductId] [integer], \n[Model] [string], \n[Category] [string], \n[Subcategory] [string]    \n)\n\n\nCREATE TABLE Item\n\n(\n\n    \n)\n\n\nCREATE TABLE\n(\n\n    \n)\n\nCREATE TABLE\n(\n\n    \n)\n\nCREATE TABLE\n(\n\n    \n)\n\nCREATE TABLE\n(\n\n    \n)",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "adworkstarget",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Select Customers')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT [CustomerId]\n,[CustomerEstablishedDate]\n,[CustomerTypeId]\n,[PartyId]\n FROM [RetailTemplateDB].[dbo].[Customer]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "RetailTemplateDB",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworks Row Counts')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT 'ChannelType' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[ChannelType]\nUNION ALL\n SELECT 'Country' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[Country]\nUNION ALL\n SELECT 'CustomerData' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[CustomerData]\nUNION ALL\n SELECT 'Date' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[Date]\nUNION ALL\n SELECT 'ProductData' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[ProductData]\nUNION ALL\n SELECT 'Reseller' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[Reseller]\nUNION ALL\n SELECT 'Sales' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[Sales]\n UNION ALL\n SELECT 'SalesOrder' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[SalesOrder]\nUNION ALL\n SELECT 'SalesTerritory' as [TableName], count(*) as [RowCount]\n FROM [adworks].[dbo].[SalesTerritory]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "adworks",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworkstarget RowCounts')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT 'ChannelType' as [TableName], count(*) as [RowCount]\n FROM [adworkstarget].[dbo].[ChannelType]\nUNION ALL\n SELECT 'Country' as [TableName], count(*) as [RowCount]\n FROM [adworkstarget].[dbo].[Country]\nUNION ALL\n SELECT 'Customer' as [TableName], count(*) as [RowCount]\n FROM [adworkstarget].[dbo].[Customer]\nUNION ALL\n SELECT 'IndividualCustomer' as [TableName], count(*) as [RowCount]\n FROM [adworkstarget].[dbo].[IndividualCustomer]\nUNION ALL\n SELECT 'Location' as [TableName], count(*) as [RowCount]\n FROM [adworkstarget].[dbo].[Location]\nUNION ALL\n SELECT 'Territory' as [TableName], count(*) as [RowCount]\n FROM [adworkstarget].[dbo].[Territory]\nUNION ALL\n SELECT 'Transaction' as [TableName], count(*) as [RowCount]\n FROM [adworkstarget].[dbo].[Transaction]\n ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "adworkstarget",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Retail - Product recommendations from Lake DB')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Retail Recommendation"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SampleSpark",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1",
						"spark.autotune.trackingId": "411e5478-2508-4ce9-ab05-ff29ba7fbdf1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/18fe7d2e-5a63-474d-b00b-7dc28b16f41a/resourceGroups/E2E-Analytics-Synapse-Core/providers/Microsoft.Synapse/workspaces/azsynapsewksgo2d3/bigDataPools/SampleSpark",
						"name": "SampleSpark",
						"type": "Spark",
						"endpoint": "https://azsynapsewksgo2d3.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SampleSpark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 8,
						"memory": 56,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Retail Recommendation Accelerator Quickstart: Model Training\r\n",
							"\r\n",
							"\r\n",
							"This notebook uses data from a database modeled based on a Retail Database Template. It trains a LightGBM machine learning model for product recommendation. The tables and columns used in this Notebook are only a minimum set and the solution needs to be customized to your own needs, by adding additional columns and features."
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import logging\r\n",
							"logging.getLogger(\"py4j\").setLevel(logging.ERROR)\r\n",
							"\r\n",
							"import pandas as pd\r\n",
							"import seaborn as sns\r\n",
							"from matplotlib import pyplot as plt\r\n",
							"\r\n",
							"from pyspark.version import __version__ as pyspark_version\r\n",
							"import pyspark.sql.functions as F\r\n",
							"\r\n",
							"import mmlspark\r\n",
							"from mmlspark.train import ComputeModelStatistics\r\n",
							"from mmlspark.lightgbm import LightGBMClassifier\r\n",
							"from pyspark.ml.feature import VectorAssembler\r\n",
							"\r\n",
							"pd.set_option('display.max_columns', 50)\r\n",
							"\r\n",
							"print(f\"PySpark version: {pyspark_version}\")\r\n",
							"print(f\"MMLSpark version: {mmlspark.core.__spark_package_version__}\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Parameters\r\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# #This solution uses selected tables from your Retail Database Template. \r\n",
							"# Make sure you update the names if you have used custom table names. You will also need to customize the columns to use and ideally add more columns. \r\n",
							"# This AI solution will use a minimum number of tables and columns to provide a baseline for further customization\r\n",
							"TRANSACTION_LINE_TABLE = \"RetailTemplateDB.TransactionLineItem\"\r\n",
							"RETAIL_PRODUCT_TABLE = \"RetailTemplateDB.RetailProduct\"\r\n",
							"CUSTOMER_TABLE = \"RetailTemplateDB.Customer\""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# Data parameters\r\n",
							"LABEL_COL = \"Rating\"\r\n",
							"FEATURE_COL = \"features\"\r\n",
							"RATIO = 0.8\r\n",
							"SEED = 42\r\n",
							"\r\n",
							"# Model parameters\r\n",
							"OBJECTIVE = \"binary\"\r\n",
							"BOOSTING = \"gbdt\"\r\n",
							"NUM_LEAVES = 32\r\n",
							"NUM_ITERATIONS = 100\r\n",
							"LEARNING_RATE = 0.1\r\n",
							"FEATURE_FRACTION = 0.8\r\n",
							"EARLY_STOPPING_ROUND = 10\r\n",
							"MODEL_NAME = \"lgb-quickstart\"\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Read the data from Spark table"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"def read_from_synms(storage_name, **kwargs):\r\n",
							"    \"\"\"Read a PySpark dataframe from SynMS\r\n",
							"    \r\n",
							"    Args: \r\n",
							"        storage_name (str): Name of the storage table\r\n",
							"\r\n",
							"    Returns:\r\n",
							"        spark.DataFrame: Dataset\r\n",
							"    \"\"\"\r\n",
							"    query = \"SELECT * FROM \" + storage_name\r\n",
							"    return spark.sql(query)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"transaction_line_df = read_from_synms(TRANSACTION_LINE_TABLE)\r\n",
							"print(\"Transaction Line Data Schema: \")\r\n",
							"transaction_line_df.printSchema()\r\n",
							"\r\n",
							"retail_product_df = read_from_synms(RETAIL_PRODUCT_TABLE)\r\n",
							"print(\"Retail Product Data Schema: \")\r\n",
							"retail_product_df.printSchema()\r\n",
							"\r\n",
							"customer_df = read_from_synms(CUSTOMER_TABLE)\r\n",
							"print(\"Customer Data Schema: \")\r\n",
							"customer_df.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"transaction_line_df = transaction_line_df.drop(\"ItemSku\",\"UniversalProductCode\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Join dataframes"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# After reading each table into a dataframe in a previous step, we will now join the dataframes\r\n",
							"raw_data = transaction_line_df.join(F.broadcast(retail_product_df), \"ProductId\").na.drop()\r\n",
							"raw_data = raw_data.join(F.broadcast(customer_df), \"CustomerId\").na.drop()\r\n",
							"raw_data = raw_data.drop(\"TransactionCompletedTimestamp\", \"TransactionLineItemId\", \"TransactionId\")\r\n",
							"\r\n",
							"print(\"Schema: \")\r\n",
							"raw_data.printSchema()\r\n",
							"\r\n",
							"df = raw_data.toPandas()\r\n",
							"print(\"Shape: \", df.shape)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Data visualization"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.describe()\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# calculate the correlation matrix\r\n",
							"corr = df.corr()\r\n",
							"\r\n",
							"# plot the correlation heatmap\r\n",
							"fig, ax = plt.subplots(figsize=(10,10))         # Sample figsize in inches\r\n",
							"\r\n",
							"sns.heatmap(corr, \r\n",
							"            xticklabels=corr.columns, \r\n",
							"            yticklabels=corr.columns, \r\n",
							"            cmap='RdBu', \r\n",
							"            vmin=-1, \r\n",
							"            vmax=1, \r\n",
							"            ax=ax, \r\n",
							"            annot=True,\r\n",
							"            fmt='.2f', \r\n",
							"            annot_kws={'size': 10})\r\n",
							"plt.show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"#scatterplot\r\n",
							"sns.set()\r\n",
							"sns.pairplot(df, height=2.5)\r\n",
							"plt.show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Split the data into train, test\r\n",
							"\r\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"raw_train, raw_test = raw_data.randomSplit([RATIO, 1 - RATIO], seed=SEED)\n",
							"print(\"Train: (rows, columns) = {}\".format((raw_train.count(), len(raw_train.columns))))\n",
							"print(\"Test: (rows, columns) = {}\".format((raw_test.count(), len(raw_test.columns))))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Feature engineering \n",
							"Transform the original data feature columns into feature vectors"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"columns = raw_data.columns[3:] # change this to your corresponding column names\n",
							"featurizer = VectorAssembler(inputCols=columns, outputCol=FEATURE_COL)\n",
							"train = featurizer.transform(raw_train)[LABEL_COL, FEATURE_COL]\n",
							"test = featurizer.transform(raw_test)[LABEL_COL, FEATURE_COL]"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"# Check if data is unbalanced\n",
							"display(train.groupBy(LABEL_COL).count())\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Model Training\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lgbm = LightGBMClassifier(\n",
							"    labelCol=LABEL_COL,\n",
							"    featuresCol=FEATURE_COL,\n",
							"    objective=OBJECTIVE,\n",
							"    isUnbalance=False,\n",
							"    boostingType=BOOSTING,\n",
							"    boostFromAverage=True,\n",
							"    baggingSeed=SEED,\n",
							"    numLeaves=NUM_LEAVES,\n",
							"    numIterations=NUM_ITERATIONS,\n",
							"    learningRate=LEARNING_RATE,\n",
							"    featureFraction=FEATURE_FRACTION,\n",
							"    earlyStoppingRound=EARLY_STOPPING_ROUND\n",
							")\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"model = lgbm.fit(train)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Feature Importances"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"feature_importances = model.getFeatureImportances()\n",
							"fi = pd.Series(feature_importances,index = columns)\n",
							"fi = fi.sort_values(ascending = True)\n",
							"f_index = fi.index\n",
							"f_values = fi.values\n",
							" \n",
							"# print feature importances \n",
							"print ('f_index:',f_index)\n",
							"print ('f_values:',f_values)\n",
							"\n",
							"# plot\n",
							"x_index = list(range(len(fi)))\n",
							"x_index = [x/len(fi) for x in x_index]\n",
							"plt.rcParams['figure.figsize'] = (10,10)\n",
							"plt.barh(x_index,f_values,height = 0.028 ,align=\"center\",color = 'tan',tick_label=f_index)\n",
							"plt.xlabel('importances')\n",
							"plt.ylabel('features')\n",
							"plt.show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Model Prediction"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"predictions = model.transform(test)\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"display(predictions.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Evaluation"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"evaluator = (\n",
							"    ComputeModelStatistics()\n",
							"    .setScoredLabelsCol(\"prediction\")\n",
							"    .setLabelCol(LABEL_COL)\n",
							"    .setEvaluationMetric(\"classification\")\n",
							")\n",
							"\n",
							"metrics = evaluator.transform(predictions)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"display(metrics)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Save the model\r\n",
							"\r\n",
							"Save the model to linked ADLS"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import os\r\n",
							"\r\n",
							"foldername = '/azsynapsewksgo2d3/'\r\n",
							"\r\n",
							"print(MODEL_NAME)\r\n",
							"model_path = os.path.join(foldername,'models/fromLakeDB/',MODEL_NAME)\r\n",
							"\r\n",
							"(model\r\n",
							" .write()\r\n",
							" .overwrite()\r\n",
							" .save(model_path)\r\n",
							" )\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Retail - Product recommendations from Sample CSV')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Retail Recommendation"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SampleSpark",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "a5b5f90c-cb72-42cf-b37d-79863ad84fd8"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"abbf25c9-bbe7-4440-befc-8b3fb3cb8290": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "84fa61f6",
												"1": "84fdf5e6",
												"2": "1",
												"3": "1007.3703074960509",
												"4": "100.96380068432816",
												"5": "1504.0231375425865",
												"6": "0",
												"7": "1",
												"8": "1",
												"9": "99995.89371017777",
												"10": "199993.30455927135"
											},
											{
												"0": "84fa61f7",
												"1": "84fdf5e7",
												"2": "1",
												"3": "1009.0165993860892",
												"4": "96.59174824100965",
												"5": "1518.7985456646848",
												"6": "1",
												"7": "1",
												"8": "1",
												"9": "100003.62001368884",
												"10": "199996.44033653763"
											},
											{
												"0": "84fa61f8",
												"1": "84fdf5e8",
												"2": "1",
												"3": "1017.6356795795646",
												"4": "101.38067630056376",
												"5": "1501.3119027109806",
												"6": "1",
												"7": "1",
												"8": "1",
												"9": "99994.04629461098",
												"10": "199989.20031100875"
											},
											{
												"0": "84fa61f9",
												"1": "84fdf5e9",
												"2": "1",
												"3": "1016.6712169423425",
												"4": "79.58174744809645",
												"5": "1508.114820588185",
												"6": "1",
												"7": "1",
												"8": "1",
												"9": "99997.76828826875",
												"10": "199992.02201807586"
											},
											{
												"0": "84fa61fa",
												"1": "84fdf5ea",
												"2": "0",
												"3": "1013.7909772121608",
												"4": "91.33996840809115",
												"5": "1517.5457928925623",
												"6": "0",
												"7": "1",
												"8": "1",
												"9": "100005.97362876785",
												"10": "199996.4210598991"
											},
											{
												"0": "84fa61fb",
												"1": "84fdf5eb",
												"2": "0",
												"3": "1006.5798773466613",
												"4": "115.14108135868779",
												"5": "1502.5461750505765",
												"6": "1",
												"7": "1",
												"8": "0",
												"9": "100009.80125926025",
												"10": "199993.94838620344"
											},
											{
												"0": "84fa61fc",
												"1": "84fdf5ec",
												"2": "1",
												"3": "1000.5136432788325",
												"4": "80.51395571255301",
												"5": "1497.9178336575956",
												"6": "1",
												"7": "1",
												"8": "1",
												"9": "99998.92190675237",
												"10": "200000.39192579014"
											},
											{
												"0": "84fa61fd",
												"1": "84fdf5ed",
												"2": "0",
												"3": "1003.758183775668",
												"4": "105.46639996026579",
												"5": "1519.8563854945417",
												"6": "0",
												"7": "1",
												"8": "0",
												"9": "100002.68122153166",
												"10": "199995.81658039338"
											},
											{
												"0": "84fa61fe",
												"1": "84fdf5ee",
												"2": "1",
												"3": "1010.8742438074745",
												"4": "82.881543368899",
												"5": "1496.1631885981394",
												"6": "1",
												"7": "1",
												"8": "1",
												"9": "99996.8829138568",
												"10": "199993.9386832266"
											},
											{
												"0": "84fa61ff",
												"1": "84fdf5ef",
												"2": "1",
												"3": "1006.5953469343162",
												"4": "117.9262499309015",
												"5": "1490.3738639911314",
												"6": "0",
												"7": "1",
												"8": "1",
												"9": "99995.42810358423",
												"10": "199990.92090442116"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "CustomerId",
												"type": "string"
											},
											{
												"key": "1",
												"name": "ProductId",
												"type": "string"
											},
											{
												"key": "2",
												"name": "Rating",
												"type": "int"
											},
											{
												"key": "3",
												"name": "Cost",
												"type": "double"
											},
											{
												"key": "4",
												"name": "Size",
												"type": "double"
											},
											{
												"key": "5",
												"name": "Price",
												"type": "double"
											},
											{
												"key": "6",
												"name": "PrimaryBrandId",
												"type": "int"
											},
											{
												"key": "7",
												"name": "GenderId",
												"type": "int"
											},
											{
												"key": "8",
												"name": "MaritalStatus",
												"type": "int"
											},
											{
												"key": "9",
												"name": "LowerIncomeBound",
												"type": "double"
											},
											{
												"key": "10",
												"name": "UpperIncomeBound",
												"type": "double"
											}
										],
										"truncated": false
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"2"
											],
											"isStacked": false
										}
									}
								}
							},
							"b93fd97e-ce39-4751-ae88-31b9c32b5df5": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "1",
												"1": "2021"
											},
											{
												"0": "0",
												"1": "2021"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Rating",
												"type": "int"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										],
										"truncated": false
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"1"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"b7815e4c-5e90-4741-b699-6442a18ccf63": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1013.1693458073678,
														81.48396248120595,
														1510.8065660915163,
														0,
														1,
														1,
														99993.97956663521,
														199995.70871892222
													]
												},
												"2": {
													"type": 1,
													"values": [
														-6.364184072986553,
														6.364184072986553
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.0017191853435571947,
														0.9982808146564428
													]
												},
												"4": "1.0"
											},
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1006.572581053828,
														96.89892809136968,
														1512.9349488618368,
														0,
														1,
														1,
														99999.66735298479,
														199992.23736098956
													]
												},
												"2": {
													"type": 1,
													"values": [
														-2.7822262284724566,
														2.7822262284724566
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.058292228173575045,
														0.941707771826425
													]
												},
												"4": "1.0"
											},
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1019.0877455784694,
														87.55956439146641,
														1512.7248840200587,
														1,
														1,
														1,
														100001.98976262085,
														199988.69290662097
													]
												},
												"2": {
													"type": 1,
													"values": [
														-2.224423774389368,
														2.224423774389368
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.09757856596859005,
														0.90242143403141
													]
												},
												"4": "1.0"
											},
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1011.4020471519617,
														95.88854759865906,
														1516.9994677197067,
														0,
														1,
														1,
														99992.29215023812,
														199992.53579323663
													]
												},
												"2": {
													"type": 1,
													"values": [
														-7.560978415083746,
														7.560978415083746
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.0005200952211268373,
														0.9994799047788732
													]
												},
												"4": "1.0"
											},
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1013.2124357520984,
														98.04187478550648,
														1507.695687496717,
														0,
														0,
														1,
														99993.47759114974,
														199994.30247329685
													]
												},
												"2": {
													"type": 1,
													"values": [
														-6.145069551959311,
														6.145069551959311
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.002139439749379135,
														0.9978605602506209
													]
												},
												"4": "1.0"
											},
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1008.4329658579697,
														91.21030848978025,
														1501.8971381852189,
														1,
														1,
														1,
														99994.71856935644,
														199999.71482615347
													]
												},
												"2": {
													"type": 1,
													"values": [
														-5.32153801315326,
														5.32153801315326
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.004861484896355184,
														0.9951385151036448
													]
												},
												"4": "1.0"
											},
											{
												"0": "0",
												"1": {
													"type": 1,
													"values": [
														1014.5020575176037,
														95.23975845909365,
														1519.5559004004217,
														0,
														1,
														0,
														100010.21601772199,
														199987.49531176878
													]
												},
												"2": {
													"type": 1,
													"values": [
														8.697291434037677,
														-8.697291434037677
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.9998329902656491,
														0.00016700973435093905
													]
												},
												"4": "0.0"
											},
											{
												"0": "0",
												"1": {
													"type": 1,
													"values": [
														1009.4020560701326,
														102.1023996553157,
														1507.9379387060353,
														0,
														1,
														0,
														100002.78159339169,
														199995.17197619507
													]
												},
												"2": {
													"type": 1,
													"values": [
														2.6905695752210304,
														-2.6905695752210304
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.9364678774194245,
														0.06353212258057547
													]
												},
												"4": "0.0"
											},
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1015.7743107044632,
														94.54243601228647,
														1510.225206452774,
														0,
														0,
														0,
														99994.06289895604,
														199993.8310820084
													]
												},
												"2": {
													"type": 1,
													"values": [
														-4.083268940585532,
														4.083268940585532
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.016572993556286497,
														0.9834270064437135
													]
												},
												"4": "1.0"
											},
											{
												"0": "1",
												"1": {
													"type": 1,
													"values": [
														1010.5804746871684,
														102.5344682637609,
														1508.3690153477446,
														0,
														1,
														1,
														99990.7784189871,
														199990.50782652057
													]
												},
												"2": {
													"type": 1,
													"values": [
														-7.42813493916687,
														7.42813493916687
													]
												},
												"3": {
													"type": 1,
													"values": [
														0.0005939418984050038,
														0.999406058101595
													]
												},
												"4": "1.0"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Rating",
												"type": "int"
											},
											{
												"key": "1",
												"name": "features",
												"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
											},
											{
												"key": "2",
												"name": "rawPrediction",
												"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
											},
											{
												"key": "3",
												"name": "probability",
												"type": "org.apache.spark.ml.linalg.VectorUDT@3bfc3ba7"
											},
											{
												"key": "4",
												"name": "prediction",
												"type": "double"
											}
										],
										"truncated": false
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"4"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"cc6faad9-73f7-4d45-8535-5cfedf620474": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Classification",
												"1": {
													"numCols": 2,
													"isTransposed": false,
													"values": [
														448,
														77,
														31,
														402
													],
													"type": 1,
													"numRows": 2
												},
												"2": "0.8872651356993737",
												"3": "0.9284064665127021",
												"4": "0.8392484342379958",
												"5": "0.8872651356993737"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "evaluation_type",
												"type": "string"
											},
											{
												"key": "1",
												"name": "confusion_matrix",
												"type": "org.apache.spark.ml.linalg.MatrixUDT@e59e0c69"
											},
											{
												"key": "2",
												"name": "accuracy",
												"type": "double"
											},
											{
												"key": "3",
												"name": "precision",
												"type": "double"
											},
											{
												"key": "4",
												"name": "recall",
												"type": "double"
											},
											{
												"key": "5",
												"name": "AUC",
												"type": "double"
											}
										],
										"truncated": false
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"2"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/18fe7d2e-5a63-474d-b00b-7dc28b16f41a/resourceGroups/E2E-Analytics-Synapse-Core/providers/Microsoft.Synapse/workspaces/azsynapsewksgo2d3/bigDataPools/SampleSpark",
						"name": "SampleSpark",
						"type": "Spark",
						"endpoint": "https://azsynapsewksgo2d3.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SampleSpark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 8,
						"memory": 56
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Retail Recommendation Accelerator Quickstart: Model Training\r\n",
							"\r\n",
							"\r\n",
							"This notebook uses sample data to train a LightGBM model for retail product recommendation. The data is randomly generated."
						],
						"attachments": null
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Library imports"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import logging\r\n",
							"logging.getLogger(\"py4j\").setLevel(logging.ERROR)\r\n",
							"\r\n",
							"import pandas as pd\r\n",
							"import seaborn as sns\r\n",
							"from matplotlib import pyplot as plt\r\n",
							"\r\n",
							"from pyspark.version import __version__ as pyspark_version\r\n",
							"\r\n",
							"import mmlspark\r\n",
							"from mmlspark.train import ComputeModelStatistics\r\n",
							"from mmlspark.lightgbm import LightGBMClassifier\r\n",
							"from pyspark.ml.feature import VectorAssembler\r\n",
							"\r\n",
							"pd.set_option('display.max_columns', 50)\r\n",
							"\r\n",
							"print(f\"PySpark version: {pyspark_version}\")\r\n",
							"print(f\"MMLSpark version: {mmlspark.core.__spark_package_version__}\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Read the data from Blob"
						],
						"attachments": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"Note: If you're using a Managed VNet enabled workspace, please download the dataset from the \n",
							"[url](https://synapsemlpublic.blob.core.windows.net/files/PersonalizedData.csv) and then upload it to your own storage account in order to access it."
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#Blob URI in linked RAW ADLSv2\r\n",
							"storageaccount = \"azrawdatalakego2d3\"\r\n",
							"filesystem = \"raw\"\r\n",
							"filename= \"PersonalizedData.csv\"\r\n",
							"uri = \"abfss://\" + filesystem + \"@\" + storageaccount + \".dfs.core.windows.net\" + \"/\" + filename\r\n",
							"print(uri)\r\n",
							"\r\n",
							"# Read and display schema of file from RAW ADLSv2\r\n",
							"raw_data = spark.read.csv(uri, header=True, inferSchema=True)\r\n",
							"print(\"Schema: \")\r\n",
							"raw_data.printSchema()\r\n",
							"\r\n",
							"df = raw_data.toPandas()\r\n",
							"print(\"Shape: \", df.shape)\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Parameters"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# Data parameters\r\n",
							"LABEL_COL = \"Rating\"\r\n",
							"FEATURE_COL = \"features\"\r\n",
							"RATIO = 0.8\r\n",
							"SEED = 42\r\n",
							"\r\n",
							"# Model parameters\r\n",
							"OBJECTIVE = \"binary\"\r\n",
							"BOOSTING = \"gbdt\"\r\n",
							"NUM_LEAVES = 32\r\n",
							"NUM_ITERATIONS = 100\r\n",
							"LEARNING_RATE = 0.1\r\n",
							"FEATURE_FRACTION = 0.8\r\n",
							"EARLY_STOPPING_ROUND = 10\r\n",
							"MODEL_NAME = \"lgb-quickstart\"\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"display(df.iloc[:10, :])"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Data visualization"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.describe()\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# calculate the correlation matrix\r\n",
							"corr = df.corr()\r\n",
							"\r\n",
							"# plot the correlation heatmap\r\n",
							"fig, ax = plt.subplots(figsize=(10,10))         # Sample figsize in inches\r\n",
							"\r\n",
							"sns.heatmap(corr, \r\n",
							"            xticklabels=corr.columns, \r\n",
							"            yticklabels=corr.columns, \r\n",
							"            cmap='RdBu', \r\n",
							"            vmin=-1, \r\n",
							"            vmax=1, \r\n",
							"            ax=ax, \r\n",
							"            annot=True,\r\n",
							"            fmt='.2f', \r\n",
							"            annot_kws={'size': 10})\r\n",
							"plt.show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"#scatterplot\r\n",
							"sns.set()\r\n",
							"sns.pairplot(df, height=2.5)\r\n",
							"plt.show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Split the data into train, test\r\n",
							"\r\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"raw_train, raw_test = raw_data.randomSplit([RATIO, 1 - RATIO], seed=SEED)\n",
							"print(\"Train: (rows, columns) = {}\".format((raw_train.count(), len(raw_train.columns))))\n",
							"print(\"Test: (rows, columns) = {}\".format((raw_test.count(), len(raw_test.columns))))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Feature engineering \n",
							"Transform the original data feature columns into feature vectors"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"columns = raw_data.columns[3:]\n",
							"featurizer = VectorAssembler(inputCols=columns, outputCol=FEATURE_COL)\n",
							"train = featurizer.transform(raw_train)[LABEL_COL, FEATURE_COL]\n",
							"test = featurizer.transform(raw_test)[LABEL_COL, FEATURE_COL]"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"# Check if data is unbalanced\n",
							"display(train.groupBy(LABEL_COL).count())\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Model Training\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lgbm = LightGBMClassifier(\n",
							"    labelCol=LABEL_COL,\n",
							"    featuresCol=FEATURE_COL,\n",
							"    objective=OBJECTIVE,\n",
							"    isUnbalance=False,\n",
							"    boostingType=BOOSTING,\n",
							"    boostFromAverage=True,\n",
							"    baggingSeed=SEED,\n",
							"    numLeaves=NUM_LEAVES,\n",
							"    numIterations=NUM_ITERATIONS,\n",
							"    learningRate=LEARNING_RATE,\n",
							"    featureFraction=FEATURE_FRACTION,\n",
							"    earlyStoppingRound=EARLY_STOPPING_ROUND\n",
							")\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"model = lgbm.fit(train)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Feature Importances"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"feature_importances = model.getFeatureImportances()\n",
							"fi = pd.Series(feature_importances,index = columns)\n",
							"fi = fi.sort_values(ascending = True)\n",
							"f_index = fi.index\n",
							"f_values = fi.values\n",
							" \n",
							"# print feature importances \n",
							"print ('f_index:',f_index)\n",
							"print ('f_values:',f_values)\n",
							"\n",
							"# plot\n",
							"x_index = list(range(len(fi)))\n",
							"x_index = [x/len(fi) for x in x_index]\n",
							"plt.rcParams['figure.figsize'] = (10,10)\n",
							"plt.barh(x_index,f_values,height = 0.028 ,align=\"center\",color = 'tan',tick_label=f_index)\n",
							"plt.xlabel('importances')\n",
							"plt.ylabel('features')\n",
							"plt.show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Model Prediction"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"predictions = model.transform(test)\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"display(predictions.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Evaluation"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"evaluator = (\n",
							"    ComputeModelStatistics()\n",
							"    .setScoredLabelsCol(\"prediction\")\n",
							"    .setLabelCol(LABEL_COL)\n",
							"    .setEvaluationMetric(\"classification\")\n",
							")\n",
							"\n",
							"metrics = evaluator.transform(predictions)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(metrics)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Save the model\r\n",
							"\r\n",
							"Save the model to linked ADLS"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import os\r\n",
							"\r\n",
							"foldername = '/azsynapsewksgo2d3/'\r\n",
							"\r\n",
							"print(MODEL_NAME)\r\n",
							"model_path = os.path.join(foldername,'models/fromSampleCSVData/',MODEL_NAME)\r\n",
							"\r\n",
							"(model\r\n",
							" .write()\r\n",
							" .overwrite()\r\n",
							" .save(model_path)\r\n",
							" )\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 19
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RetailTemplateDB')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "RetailTemplateDB",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true,
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Retail\",\"Version\":\"0.1.0\"}}}"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Channel",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "A channel is a means by which products or services are sold and/or distributed.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelId"
										}
									},
									{
										"Name": "ChannelName",
										"Description": "The name of the associated Channel.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelName"
										}
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "LocationId"
										}
									},
									{
										"Name": "ChannelLogo",
										"Description": "A design, symbol or series of words that identifies the channel.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelLogo"
										}
									},
									{
										"Name": "TelephoneNumber",
										"Description": "The channel telephone number.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "TelephoneNumber"
										}
									},
									{
										"Name": "FaxNumber",
										"Description": "The channel fax number.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "FaxNumber"
										}
									},
									{
										"Name": "EmailAddress",
										"Description": "The channel email address.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "EmailAddress"
										}
									},
									{
										"Name": "ChannelCommencementDate",
										"Description": "The date that the channel commenced operations.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelCommencementDate"
										}
									},
									{
										"Name": "ChannelCloseDate",
										"Description": "The date that the channel was permanently closed.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelCloseDate"
										}
									},
									{
										"Name": "ChannelCategoryId",
										"Description": "The unique identifier of a Channel Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelCategoryId"
										}
									},
									{
										"Name": "ChannelTypeId",
										"Description": "The unique identifier of a Channel Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelTypeId"
										}
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "PartyId"
										}
									},
									{
										"Name": "DunsNumber",
										"Description": "The DUNS number is a nine-digit number issued by Dun & Bradstreet and assigned to each business location in the D&B database having a unique, separate, and distinct operation to businesses for the purpose of identifying them. The number as issued is random and the digits apparently have no significance as to their issuance.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 9,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunsNumber"
										}
									},
									{
										"Name": "DunBradstreetSingleLocationSubsidiary",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetSingleLocationSubsidiary"
										}
									},
									{
										"Name": "DunBradstreetHeadquarters",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetHeadquarters"
										}
									},
									{
										"Name": "DunBradstreetBranch",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetBranch"
										}
									},
									{
										"Name": "DunBradstreetDivision",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetDivision"
										}
									},
									{
										"Name": "DunBradstreetSubsidiary",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetSubsidiary"
										}
									},
									{
										"Name": "DunBradstreetParent",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetParent"
										}
									},
									{
										"Name": "DunBradstreetUltimate",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetUltimate"
										}
									},
									{
										"Name": "DunBradstreetGlobalUltimate",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetGlobalUltimate"
										}
									},
									{
										"Name": "SicIndustryCode",
										"Description": "The unique identifier of the SIC Industry.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 4,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "SicIndustryCode"
										}
									},
									{
										"Name": "NaicsNationalIndustryCode",
										"Description": "The unique identifier of a NAICS National Industry Code.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 6,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "NaicsNationalIndustryCode"
										}
									},
									{
										"Name": "AnzsicClassCode",
										"Description": "The unique identifier of an ANZSIC Class.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 4,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "AnzsicClassCode"
										}
									},
									{
										"Name": "TerritoryId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "TerritoryId"
										}
									},
									{
										"Name": "AreaId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "AreaId"
										}
									},
									{
										"Name": "RegionId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "RegionId"
										}
									},
									{
										"Name": "DistrictId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DistrictId"
										}
									},
									{
										"Name": "BrandId",
										"Description": "The unique identifier of a Brand.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "BrandId"
										}
									},
									{
										"Name": "FranchiseeId",
										"Description": "The unique identifier of a Franchisee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "FranchiseeId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Channel",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Channel",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ChannelId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelId\"},\"ChannelName\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelName\"},\"LocationId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"LocationId\"},\"ChannelLogo\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelLogo\"},\"TelephoneNumber\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TelephoneNumber\"},\"FaxNumber\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FaxNumber\"},\"EmailAddress\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"EmailAddress\"},\"ChannelCommencementDate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCommencementDate\"},\"ChannelCloseDate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCloseDate\"},\"ChannelCategoryId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCategoryId\"},\"ChannelTypeId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelTypeId\"},\"PartyId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"PartyId\"},\"DunsNumber\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunsNumber\"},\"DunBradstreetSingleLocationSubsidiary\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSingleLocationSubsidiary\"},\"DunBradstreetHeadquarters\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetHeadquarters\"},\"DunBradstreetBranch\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetBranch\"},\"DunBradstreetDivision\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetDivision\"},\"DunBradstreetSubsidiary\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSubsidiary\"},\"DunBradstreetParent\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetParent\"},\"DunBradstreetUltimate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetUltimate\"},\"DunBradstreetGlobalUltimate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetGlobalUltimate\"},\"SicIndustryCode\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"SicIndustryCode\"},\"NaicsNationalIndustryCode\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"NaicsNationalIndustryCode\"},\"AnzsicClassCode\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AnzsicClassCode\"},\"TerritoryId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TerritoryId\"},\"AreaId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AreaId\"},\"RegionId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"RegionId\"},\"DistrictId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DistrictId\"},\"BrandId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"BrandId\"},\"FranchiseeId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FranchiseeId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Channel\",\"path\":\"Channel.cdm.json/Channel\"},\"description\":\"A channel is a means by which products or services are sold and/or distributed.\",\"primaryKey\":[\"ChannelId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":false,\"name\":\"ChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the associated Channel.\",\"isNullable\":true,\"name\":\"ChannelName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelLogo\"},\"dataType\":\"binary\",\"description\":\"A design, symbol or series of words that identifies the channel.\",\"isNullable\":true,\"name\":\"ChannelLogo\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TelephoneNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The channel telephone number.\",\"isNullable\":true,\"scale\":0,\"name\":\"TelephoneNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FaxNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The channel fax number.\",\"isNullable\":true,\"scale\":0,\"name\":\"FaxNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"EmailAddress\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The channel email address.\",\"isNullable\":true,\"name\":\"EmailAddress\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCommencementDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the channel commenced operations.\",\"isNullable\":true,\"name\":\"ChannelCommencementDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCloseDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the channel was permanently closed.\",\"isNullable\":true,\"name\":\"ChannelCloseDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel Category.\",\"isNullable\":true,\"name\":\"ChannelCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel Type.\",\"isNullable\":true,\"name\":\"ChannelTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunsNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":9,\"description\":\"The DUNS number is a nine-digit number issued by Dun & Bradstreet and assigned to each business location in the D&B database having a unique, separate, and distinct operation to businesses for the purpose of identifying them. The number as issued is random and the digits apparently have no significance as to their issuance.\",\"isNullable\":true,\"scale\":0,\"name\":\"DunsNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSingleLocationSubsidiary\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetSingleLocationSubsidiary\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetHeadquarters\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetHeadquarters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetBranch\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetBranch\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetDivision\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetDivision\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSubsidiary\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetSubsidiary\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetParent\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetParent\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetUltimate\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetUltimate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetGlobalUltimate\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetGlobalUltimate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"SicIndustryCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":4,\"description\":\"The unique identifier of the SIC Industry.\",\"isNullable\":true,\"scale\":0,\"name\":\"SicIndustryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"NaicsNationalIndustryCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":6,\"description\":\"The unique identifier of a NAICS National Industry Code.\",\"isNullable\":true,\"scale\":0,\"name\":\"NaicsNationalIndustryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AnzsicClassCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":4,\"description\":\"The unique identifier of an ANZSIC Class.\",\"isNullable\":true,\"scale\":0,\"name\":\"AnzsicClassCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TerritoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"TerritoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AreaId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"AreaId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"RegionId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"RegionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DistrictId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"DistrictId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"BrandId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Brand.\",\"isNullable\":true,\"name\":\"BrandId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FranchiseeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Franchisee.\",\"isNullable\":true,\"name\":\"FranchiseeId\"}]}}}",
								"Description": "A channel is a means by which products or services are sold and/or distributed.",
								"DisplayFolderInfo": "{\"name\":\"Channel\",\"colorCode\":\"#001D3F\"}",
								"PrimaryKeys": "ChannelId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ChannelType",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "A categorization of channels based upon function performed, common characteristics, legal definition etc.\n\nEx:\n\nAGENCY \nA business that acts as an agent for a producer of goods or services devoted to developing and placing advertising in order to further the acceptance of a product, service or idea.\n\nAn advertising company represents other companies by providing advertising related services such as planning, creating, buying and tracking an advertisement on behalf of their client.\n\nAGENT \nThe channel is which products are sold or distributed to customers by Agents.\n \nBROKER \nAn individual or business who represents manufacturer products in a market area on a commission basis. Most represent multiple, non-competing lines.\n\nCATALOG SHOWROOM RETAILER \nA retailer that combines a store showroom with an adjacent warehouse to display merchandise; typically specializes in hard goods such as housewares.\n \nCERTIFIED FINANCIAL PLANNER (CFP)\nA person who has passed the examinations of the Certified Financial Planners for abilities in the areas of banking, estate, insurance, investment and tax affairs.\n\nCLOSE-OUT STORE \nA retailer offering low-priced merchandise obtained through liquidations\n\nCHARTERED FINANCIAL ANALYST (CFA)\nAn individual who has passed tests in economics, accounting, security analysis, and money management, administered by the Institute of Chartered Financial Analysts.\n\nCHARTERED FINANCIAL CONSULTANT (ChFC)\nAn individual who has completed a program of economics, taxes, insurance, and investing.\n \nCONSIGNOR \nA situation in which vendors guarantee the sale of merchandise consigned to a retailer and agree to remove the merchandise if it does not sell.\n\nA method of selling products in which an intermediary or agent sells goods and the title is held by the seller or manufacturer.\n\nExamples of consignment relationships are:\n- Between a retailer and a wholesaler\n- Between a manufacturer and a wholesaler\n \nCONSULTANT \nThe channel is which products are sold or distributed to customers by consultants.  \n\nA sales technique in which the seller acts as a consultant to the customer.\n \nCONVENIENCE STORE  \nStores between 3,000 and 8,000 square feet in size providing a limited assortment of merchandise at a convenient location and time (e.g., 7-Eleven).\n\nCOOPERATIVE \nThe channel is which products are sold or distributed to customers by a wholly-owned cooperative, which is an association or group of high-volume retailers who establish a warehouse and share in the costs and profits.\n \nCOOPERATIVE WHOLESALER \nAn organization owned by independent retailers that buys products and provides services for those retailers. The fact that the purchasing/distribution center is owned by the retailers differentiates the cooperative wholesaler from the voluntary.\n \nDEPARTMENT STORE \nVery large stores carrying a wide variety and deep assortment while offering considerable customer services. Stores are organized into separate departments for displaying merchandise (e.g., Dillard's or Saks Fifth Avenue). However, the variety of departments is lessening in recent years, and these stores tend to focus on apparel today.\n\nDIRECT MAIL CATALOG RETAILER \nA retailer offering merchandise and/or services through catalogs mailed directly to customers.\n \nDISCOUNT STORE \nA general merchandise retailer offering a wide variety of merchandise, limited service and low prices (e.g., Target or Kmart).\n \nDISTRIBUTOR \nA buying, warehousing and distributing organization that delivers merchandise to in their own trucks or vehicles.\n\nDIRECT \nThe sales of product directly by the company or one of its business units.\n \nDIVERTER \nA company who buys products from a manufacturer, has it in his warehouse, and sells it to wholesalers, retailers, etc. \n\nThe purchase from the manufacturer is usually at below usual price due to overstocking, closeout, overabundance of deal-priced merchandise, etc., so that the diverter can sell to distributors below the manufacturer's normal price.\n \nDROP SHIPPER \nThe channel is which products are sold or distributed to customers by the \"Drop Shipper\" Sales Channel in which the Products are sold to Customers by a Drop Shipper.\n \nEDUCATION COLLEGE \nThe sale or distribution of products via educational college organizations.\n \nEDUCATION K-12 \nThe sale or distribution of products via educational K-12 organizations.\n \nEDUCATION PROFESSIONAL \nThe sale or distribution of products via professional educational organizations.\n \nFACTORY OUTLET STORE \nOff-price retail stores owned by manufacturers.\n \nFEDERAL GOVERNMENT \nThe sale or distribution of products via federal government organizations.\n\nFINANCIAL PLANNER\nA professional who analyzes personal financial circumstances and prepares a program to meet financial needs and objectives.\n\nA professional adviser offering financial counsel for a fee or commission.\n\nSome financial advisors sell products or advise in specific areas of expertise such as investing, estate planning, taxes or insurance.\n \nFRANCHISE \nA form of business organization in which a firm which already has a successful product or service (the franchisor) enters into a continuing contractual relationship with other businesses (franchisees) operating under the franchisor's trade name and usually with the franchisor's guidance, in exchange for a fee. \n\nHYPERMARKET \nA very large retail store which offers low prices and combines a discount store and a superstore food retailer in one warehouse-like building (e.g., a Wal-Mart Supercenter). These stores may be as large as 200,000 square feet. \n \nIMPORT EXPORT AGENT \nThe channel is which products are sold or distributed to customers by an Import/Export Agent.  \n\nImport agents act as a merchant agent or broker in the domestic market by buying and selling merchandise with foreign firms.\n\nINDEPENDENT AGENT \nAn agent operating as an independent contract under the independent agency system.\n\nINDEPENDENT RETAILER \nA merchant whose main business is selling directly to the ultimate consumer. \n\nAn \"independent\" retailer is one who is not corporately affiliated or franchised with his distributor.\n \nINTERNAL DIRECT \nThe channel is which products are sold or distributed to customers through internal corporate channels by the product manufacturer.\n\nAn example of this distribution channel is sale of products internally by the manufacturer to employees.\n \nINTERNET SELLER \nA Channel that who business is to sell products via the internet.\n \nKIOSK \nA small leased area, booth or cart inside a store or mall.\n\nLEASED DEPARTMENT \nA department in a retail store operated by an outside party.  The outside party either pays fixed rent or a percentage of sales to the retailer for the space\n \nMANUFACTURER \nA channel type in which it is the product manufacturer that sells or distributes directly to the end-customer.\n\nEx:\nApple Computer selling directly to customers vs. Apple Computer selling via educational entities or other third parties.\n \nMANUFACTURERS REPRESENTATIVE\nA person or firm that represents and sells one or more manufacturers' products on a regional basis, to a variety of distributors and retail outlets on a commission basis.\n \nMERCHANT BROKER \nMerchant brokers are wholesale businesses that buy and sell products in the domestic market on a brokerage basis without taking title to the goods.\n\nThey are paid a commission and never physically handle the actual products.\n \nMILITARY EXCHANGE \nThe channel is which products are sold or distributed to customers via the PX system.\n \nMUNICIPAL GOVERNMENT \nThe sale or distribution of products via municipal government organizations.\n\nON-LINE BANKING\nThe online www site that offers on-line banking services.\n \nORIGINAL EQUIPMENT MAKER \nThe channel is which products are sold or distributed to customers directly from the manufacturer to the customer.\n\nEx:\nApple Computer selling directly to customers vs. Apple Computer selling via educational entities or other third parties.\n\nPERSONAL PRODUCING GENERAL AGENCY \nA method of marketing insurance products in which personal producing general agents (PPGA's) are compensated for business they personally sell and business sold by agents with whom they subcontract.\n\nSubcontracted agents are considered employees of the PPGA and not the insurer.\n\nPHONE BANKING\nThe telephone number that offers banking services.\n \nRESELLER \nThe channel is which products are sold or distributed to customers by resellers, which is a business or individual who purchases goods to resell at a profit without taking title to those goods.\n\nSALES REPRESENTATIVE\nThe individual employed to represent a business and to sell its merchandise.\n\nSOLICITOR \nAn individual appointed and authorized by an agent to solicit and receive applications as their representative. Solicitors are not usually given the power to bind coverage but are normally required to be licensed.\n \nSPECIALTY DEPARTMENT STORE \nA store with a department store format that focuses on apparel and soft home goods (e.g., Neiman Marcus).\n \nSPECIALTY RETAILER \nA retailer specializing in one category of merchandising, frequently fashion-related.\n \nSTATE GOVERNMENT \nThe sale or distribution of products via state government organizations.\n \nSTOREFRONT \nA Storefront used to solicit products or services. Storefronts are often associated with banks and major department stores.\n\nSUPERSTORE \nA large supermarket or specialty store, usually between 20,000 and 100,000 square feet.\n\nTELEMARKETING \nThe channel in which products, goods or services are sold directly via telephone solicitation.\n\nUNIQUE APPLICATION RESELLER (UAR) \nThe channel is which products are sold or distributed to customers by a UAR, which is an organization that takes the basic product, customizes or adds value to the product in some way and sells that product to a market niche.\n \nVALUE-ADDED RESELLER (VAR) \nThe channel is which products are sold or distributed to customers by a Value Added Retailer who takes the basic product, customizes or adds functionality to the product and sells it to mass markets.\n \nVENDOR MACHINE \nA method of selling by way of using a machine.\n \nVOLUNTARY WHOLESALER \nA distributor company that owns its own distribution center and distributes goods and services to independent retailers and/or corporately owned stores. \n\nThis differs from a cooperative in that the stores have no vested financial interest in the voluntary distribution center.\n \nWAREHOUSE CLUB \nA retail store that sells a limited assortment of general merchandise to customers who are members of the club. Memberships are generally fee-based, margins are small and there is little customer service provided to the members.\n \nWAREHOUSE STORE \nA discount retailer offering merchandise in a no-frills environment",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ChannelTypeId",
										"Description": "The unique identifier of a Channel Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ChannelType.cdm.json/ChannelType",
											"Name": "ChannelTypeId"
										}
									},
									{
										"Name": "ChannelTypeName",
										"Description": "The name of a Channel Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ChannelType.cdm.json/ChannelType",
											"Name": "ChannelTypeName"
										}
									},
									{
										"Name": "ChannelTypeDescription",
										"Description": "The description of a Channel Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ChannelType.cdm.json/ChannelType",
											"Name": "ChannelTypeDescription"
										}
									},
									{
										"Name": "ChannelClassificationId",
										"Description": "The unique identifier of a Channel Classification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ChannelType.cdm.json/ChannelType",
											"Name": "ChannelClassificationId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/ChannelType",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/ChannelType",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ChannelTypeId\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelTypeId\"},\"ChannelTypeName\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelTypeName\"},\"ChannelTypeDescription\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelTypeDescription\"},\"ChannelClassificationId\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelClassificationId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ChannelType\",\"path\":\"ChannelType.cdm.json/ChannelType\"},\"description\":\"A categorization of channels based upon function performed, common characteristics, legal definition etc.\\n\\nEx:\\n\\nAGENCY \\nA business that acts as an agent for a producer of goods or services devoted to developing and placing advertising in order to further the acceptance of a product, service or idea.\\n\\nAn advertising company represents other companies by providing advertising related services such as planning, creating, buying and tracking an advertisement on behalf of their client.\\n\\nAGENT \\nThe channel is which products are sold or distributed to customers by Agents.\\n \\nBROKER \\nAn individual or business who represents manufacturer products in a market area on a commission basis. Most represent multiple, non-competing lines.\\n\\nCATALOG SHOWROOM RETAILER \\nA retailer that combines a store showroom with an adjacent warehouse to display merchandise; typically specializes in hard goods such as housewares.\\n \\nCERTIFIED FINANCIAL PLANNER (CFP)\\nA person who has passed the examinations of the Certified Financial Planners for abilities in the areas of banking, estate, insurance, investment and tax affairs.\\n\\nCLOSE-OUT STORE \\nA retailer offering low-priced merchandise obtained through liquidations\\n\\nCHARTERED FINANCIAL ANALYST (CFA)\\nAn individual who has passed tests in economics, accounting, security analysis, and money management, administered by the Institute of Chartered Financial Analysts.\\n\\nCHARTERED FINANCIAL CONSULTANT (ChFC)\\nAn individual who has completed a program of economics, taxes, insurance, and investing.\\n \\nCONSIGNOR \\nA situation in which vendors guarantee the sale of merchandise consigned to a retailer and agree to remove the merchandise if it does not sell.\\n\\nA method of selling products in which an intermediary or agent sells goods and the title is held by the seller or manufacturer.\\n\\nExamples of consignment relationships are:\\n- Between a retailer and a wholesaler\\n- Between a manufacturer and a wholesaler\\n \\nCONSULTANT \\nThe channel is which products are sold or distributed to customers by consultants.  \\n\\nA sales technique in which the seller acts as a consultant to the customer.\\n \\nCONVENIENCE STORE  \\nStores between 3,000 and 8,000 square feet in size providing a limited assortment of merchandise at a convenient location and time (e.g., 7-Eleven).\\n\\nCOOPERATIVE \\nThe channel is which products are sold or distributed to customers by a wholly-owned cooperative, which is an association or group of high-volume retailers who establish a warehouse and share in the costs and profits.\\n \\nCOOPERATIVE WHOLESALER \\nAn organization owned by independent retailers that buys products and provides services for those retailers. The fact that the purchasing/distribution center is owned by the retailers differentiates the cooperative wholesaler from the voluntary.\\n \\nDEPARTMENT STORE \\nVery large stores carrying a wide variety and deep assortment while offering considerable customer services. Stores are organized into separate departments for displaying merchandise (e.g., Dillard's or Saks Fifth Avenue). However, the variety of departments is lessening in recent years, and these stores tend to focus on apparel today.\\n\\nDIRECT MAIL CATALOG RETAILER \\nA retailer offering merchandise and/or services through catalogs mailed directly to customers.\\n \\nDISCOUNT STORE \\nA general merchandise retailer offering a wide variety of merchandise, limited service and low prices (e.g., Target or Kmart).\\n \\nDISTRIBUTOR \\nA buying, warehousing and distributing organization that delivers merchandise to in their own trucks or vehicles.\\n\\nDIRECT \\nThe sales of product directly by the company or one of its business units.\\n \\nDIVERTER \\nA company who buys products from a manufacturer, has it in his warehouse, and sells it to wholesalers, retailers, etc. \\n\\nThe purchase from the manufacturer is usually at below usual price due to overstocking, closeout, overabundance of deal-priced merchandise, etc., so that the diverter can sell to distributors below the manufacturer's normal price.\\n \\nDROP SHIPPER \\nThe channel is which products are sold or distributed to customers by the \\\"Drop Shipper\\\" Sales Channel in which the Products are sold to Customers by a Drop Shipper.\\n \\nEDUCATION COLLEGE \\nThe sale or distribution of products via educational college organizations.\\n \\nEDUCATION K-12 \\nThe sale or distribution of products via educational K-12 organizations.\\n \\nEDUCATION PROFESSIONAL \\nThe sale or distribution of products via professional educational organizations.\\n \\nFACTORY OUTLET STORE \\nOff-price retail stores owned by manufacturers.\\n \\nFEDERAL GOVERNMENT \\nThe sale or distribution of products via federal government organizations.\\n\\nFINANCIAL PLANNER\\nA professional who analyzes personal financial circumstances and prepares a program to meet financial needs and objectives.\\n\\nA professional adviser offering financial counsel for a fee or commission.\\n\\nSome financial advisors sell products or advise in specific areas of expertise such as investing, estate planning, taxes or insurance.\\n \\nFRANCHISE \\nA form of business organization in which a firm which already has a successful product or service (the franchisor) enters into a continuing contractual relationship with other businesses (franchisees) operating under the franchisor's trade name and usually with the franchisor's guidance, in exchange for a fee. \\n\\nHYPERMARKET \\nA very large retail store which offers low prices and combines a discount store and a superstore food retailer in one warehouse-like building (e.g., a Wal-Mart Supercenter). These stores may be as large as 200,000 square feet. \\n \\nIMPORT EXPORT AGENT \\nThe channel is which products are sold or distributed to customers by an Import/Export Agent.  \\n\\nImport agents act as a merchant agent or broker in the domestic market by buying and selling merchandise with foreign firms.\\n\\nINDEPENDENT AGENT \\nAn agent operating as an independent contract under the independent agency system.\\n\\nINDEPENDENT RETAILER \\nA merchant whose main business is selling directly to the ultimate consumer. \\n\\nAn \\\"independent\\\" retailer is one who is not corporately affiliated or franchised with his distributor.\\n \\nINTERNAL DIRECT \\nThe channel is which products are sold or distributed to customers through internal corporate channels by the product manufacturer.\\n\\nAn example of this distribution channel is sale of products internally by the manufacturer to employees.\\n \\nINTERNET SELLER \\nA Channel that who business is to sell products via the internet.\\n \\nKIOSK \\nA small leased area, booth or cart inside a store or mall.\\n\\nLEASED DEPARTMENT \\nA department in a retail store operated by an outside party.  The outside party either pays fixed rent or a percentage of sales to the retailer for the space\\n \\nMANUFACTURER \\nA channel type in which it is the product manufacturer that sells or distributes directly to the end-customer.\\n\\nEx:\\nApple Computer selling directly to customers vs. Apple Computer selling via educational entities or other third parties.\\n \\nMANUFACTURERS REPRESENTATIVE\\nA person or firm that represents and sells one or more manufacturers' products on a regional basis, to a variety of distributors and retail outlets on a commission basis.\\n \\nMERCHANT BROKER \\nMerchant brokers are wholesale businesses that buy and sell products in the domestic market on a brokerage basis without taking title to the goods.\\n\\nThey are paid a commission and never physically handle the actual products.\\n \\nMILITARY EXCHANGE \\nThe channel is which products are sold or distributed to customers via the PX system.\\n \\nMUNICIPAL GOVERNMENT \\nThe sale or distribution of products via municipal government organizations.\\n\\nON-LINE BANKING\\nThe online www site that offers on-line banking services.\\n \\nORIGINAL EQUIPMENT MAKER \\nThe channel is which products are sold or distributed to customers directly from the manufacturer to the customer.\\n\\nEx:\\nApple Computer selling directly to customers vs. Apple Computer selling via educational entities or other third parties.\\n\\nPERSONAL PRODUCING GENERAL AGENCY \\nA method of marketing insurance products in which personal producing general agents (PPGA's) are compensated for business they personally sell and business sold by agents with whom they subcontract.\\n\\nSubcontracted agents are considered employees of the PPGA and not the insurer.\\n\\nPHONE BANKING\\nThe telephone number that offers banking services.\\n \\nRESELLER \\nThe channel is which products are sold or distributed to customers by resellers, which is a business or individual who purchases goods to resell at a profit without taking title to those goods.\\n\\nSALES REPRESENTATIVE\\nThe individual employed to represent a business and to sell its merchandise.\\n\\nSOLICITOR \\nAn individual appointed and authorized by an agent to solicit and receive applications as their representative. Solicitors are not usually given the power to bind coverage but are normally required to be licensed.\\n \\nSPECIALTY DEPARTMENT STORE \\nA store with a department store format that focuses on apparel and soft home goods (e.g., Neiman Marcus).\\n \\nSPECIALTY RETAILER \\nA retailer specializing in one category of merchandising, frequently fashion-related.\\n \\nSTATE GOVERNMENT \\nThe sale or distribution of products via state government organizations.\\n \\nSTOREFRONT \\nA Storefront used to solicit products or services. Storefronts are often associated with banks and major department stores.\\n\\nSUPERSTORE \\nA large supermarket or specialty store, usually between 20,000 and 100,000 square feet.\\n\\nTELEMARKETING \\nThe channel in which products, goods or services are sold directly via telephone solicitation.\\n\\nUNIQUE APPLICATION RESELLER (UAR) \\nThe channel is which products are sold or distributed to customers by a UAR, which is an organization that takes the basic product, customizes or adds value to the product in some way and sells that product to a market niche.\\n \\nVALUE-ADDED RESELLER (VAR) \\nThe channel is which products are sold or distributed to customers by a Value Added Retailer who takes the basic product, customizes or adds functionality to the product and sells it to mass markets.\\n \\nVENDOR MACHINE \\nA method of selling by way of using a machine.\\n \\nVOLUNTARY WHOLESALER \\nA distributor company that owns its own distribution center and distributes goods and services to independent retailers and/or corporately owned stores. \\n\\nThis differs from a cooperative in that the stores have no vested financial interest in the voluntary distribution center.\\n \\nWAREHOUSE CLUB \\nA retail store that sells a limited assortment of general merchandise to customers who are members of the club. Memberships are generally fee-based, margins are small and there is little customer service provided to the members.\\n \\nWAREHOUSE STORE \\nA discount retailer offering merchandise in a no-frills environment\",\"primaryKey\":[\"ChannelTypeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel Type.\",\"isNullable\":false,\"name\":\"ChannelTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelTypeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Channel Type.\",\"isNullable\":true,\"name\":\"ChannelTypeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelTypeDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Channel Type.\",\"isNullable\":true,\"name\":\"ChannelTypeDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ChannelType.cdm.json/ChannelType\",\"name\":\"ChannelClassificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel Classification.\",\"isNullable\":true,\"name\":\"ChannelClassificationId\"}]}}}",
								"Description": "A categorization of channels based upon function performed, common characteristics, legal definition etc.\n\nEx:\n\nAGENCY \nA business that acts as an agent for a producer of goods or services devoted to developing and placing advertising in order to further the acceptance of a product, service or idea.\n\nAn advertising company represents other companies by providing advertising related services such as planning, creating, buying and tracking an advertisement on behalf of their client.\n\nAGENT \nThe channel is which products are sold or distributed to customers by Agents.\n \nBROKER \nAn individual or business who represents manufacturer products in a market area on a commission basis. Most represent multiple, non-competing lines.\n\nCATALOG SHOWROOM RETAILER \nA retailer that combines a store showroom with an adjacent warehouse to display merchandise; typically specializes in hard goods such as housewares.\n \nCERTIFIED FINANCIAL PLANNER (CFP)\nA person who has passed the examinations of the Certified Financial Planners for abilities in the areas of banking, estate, insurance, investment and tax affairs.\n\nCLOSE-OUT STORE \nA retailer offering low-priced merchandise obtained through liquidations\n\nCHARTERED FINANCIAL ANALYST (CFA)\nAn individual who has passed tests in economics, accounting, security analysis, and money management, administered by the Institute of Chartered Financial Analysts.\n\nCHARTERED FINANCIAL CONSULTANT (ChFC)\nAn individual who has completed a program of economics, taxes, insurance, and investing.\n \nCONSIGNOR \nA situation in which vendors guarantee the sale of merchandise consigned to a retailer and agree to remove the merchandise if it does not sell.\n\nA method of selling products in which an intermediary or agent sells goods and the title is held by the seller or manufacturer.\n\nExamples of consignment relationships are:\n- Between a retailer and a wholesaler\n- Between a manufacturer and a wholesaler\n \nCONSULTANT \nThe channel is which products are sold or distributed to customers by consultants.  \n\nA sales technique in which the seller acts as a consultant to the customer.\n \nCONVENIENCE STORE  \nStores between 3,000 and 8,000 square feet in size providing a limited assortment of merchandise at a convenient location and time (e.g., 7-Eleven).\n\nCOOPERATIVE \nThe channel is which products are sold or distributed to customers by a wholly-owned cooperative, which is an association or group of high-volume retailers who establish a warehouse and share in the costs and profits.\n \nCOOPERATIVE WHOLESALER \nAn organization owned by independent retailers that buys products and provides services for those retailers. The fact that the purchasing/distribution center is owned by the retailers differentiates the cooperative wholesaler from the voluntary.\n \nDEPARTMENT STORE \nVery large stores carrying a wide variety and deep assortment while offering considerable customer services. Stores are organized into separate departments for displaying merchandise (e.g., Dillard's or Saks Fifth Avenue). However, the variety of departments is lessening in recent years, and these stores tend to focus on apparel today.\n\nDIRECT MAIL CATALOG RETAILER \nA retailer offering merchandise and/or services through catalogs mailed directly to customers.\n \nDISCOUNT STORE \nA general merchandise retailer offering a wide variety of merchandise, limited service and low prices (e.g., Target or Kmart).\n \nDISTRIBUTOR \nA buying, warehousing and distributing organization that delivers merchandise to in their own trucks or vehicles.\n\nDIRECT \nThe sales of product directly by the company or one of its business units.\n \nDIVERTER \nA company who buys products from a manufacturer, has it in his warehouse, and sells it to wholesalers, retailers, etc. \n\nThe purchase from the manufacturer is usually at below usual price due to overstocking, closeout, overabundance of deal-priced merchandise, etc., so that the diverter can sell to distributors below the manufacturer's normal price.\n \nDROP SHIPPER \nThe channel is which products are sold or distributed to customers by the \"Drop Shipper\" Sales Channel in which the Products are sold to Customers by a Drop Shipper.\n \nEDUCATION COLLEGE \nThe sale or distribution of products via educational college organizations.\n \nEDUCATION K-12 \nThe sale or distribution of products via educational K-12 organizations.\n \nEDUCATION PROFESSIONAL \nThe sale or distribution of products via professional educational organizations.\n \nFACTORY OUTLET STORE \nOff-price retail stores owned by manufacturers.\n \nFEDERAL GOVERNMENT \nThe sale or distribution of products via federal government organizations.\n\nFINANCIAL PLANNER\nA professional who analyzes personal financial circumstances and prepares a program to meet financial needs and objectives.\n\nA professional adviser offering financial counsel for a fee or commission.\n\nSome financial advisors sell products or advise in specific areas of expertise such as investing, estate planning, taxes or insurance.\n \nFRANCHISE \nA form of business organization in which a firm which already has a successful product or service (the franchisor) enters into a continuing contractual relationship with other businesses (franchisees) operating under the franchisor's trade name and usually with the franchisor's guidance, in exchange for a fee. \n\nHYPERMARKET \nA very large retail store which offers low prices and combines a discount store and a superstore food retailer in one warehouse-like building (e.g., a Wal-Mart Supercenter). These stores may be as large as 200,000 square feet. \n \nIMPORT EXPORT AGENT \nThe channel is which products are sold or distributed to customers by an Import/Export Agent.  \n\nImport agents act as a merchant agent or broker in the domestic market by buying and selling merchandise with foreign firms.\n\nINDEPENDENT AGENT \nAn agent operating as an independent contract under the independent agency system.\n\nINDEPENDENT RETAILER \nA merchant whose main business is selling directly to the ultimate consumer. \n\nAn \"independent\" retailer is one who is not corporately affiliated or franchised with his distributor.\n \nINTERNAL DIRECT \nThe channel is which products are sold or distributed to customers through internal corporate channels by the product manufacturer.\n\nAn example of this distribution channel is sale of products internally by the manufacturer to employees.\n \nINTERNET SELLER \nA Channel that who business is to sell products via the internet.\n \nKIOSK \nA small leased area, booth or cart inside a store or mall.\n\nLEASED DEPARTMENT \nA department in a retail store operated by an outside party.  The outside party either pays fixed rent or a percentage of sales to the retailer for the space\n \nMANUFACTURER \nA channel type in which it is the product manufacturer that sells or distributes directly to the end-customer.\n\nEx:\nApple Computer selling directly to customers vs. Apple Computer selling via educational entities or other third parties.\n \nMANUFACTURERS REPRESENTATIVE\nA person or firm that represents and sells one or more manufacturers' products on a regional basis, to a variety of distributors and retail outlets on a commission basis.\n \nMERCHANT BROKER \nMerchant brokers are wholesale businesses that buy and sell products in the domestic market on a brokerage basis without taking title to the goods.\n\nThey are paid a commission and never physically handle the actual products.\n \nMILITARY EXCHANGE \nThe channel is which products are sold or distributed to customers via the PX system.\n \nMUNICIPAL GOVERNMENT \nThe sale or distribution of products via municipal government organizations.\n\nON-LINE BANKING\nThe online www site that offers on-line banking services.\n \nORIGINAL EQUIPMENT MAKER \nThe channel is which products are sold or distributed to customers directly from the manufacturer to the customer.\n\nEx:\nApple Computer selling directly to customers vs. Apple Computer selling via educational entities or other third parties.\n\nPERSONAL PRODUCING GENERAL AGENCY \nA method of marketing insurance products in which personal producing general agents (PPGA's) are compensated for business they personally sell and business sold by agents with whom they subcontract.\n\nSubcontracted agents are considered employees of the PPGA and not the insurer.\n\nPHONE BANKING\nThe telephone number that offers banking services.\n \nRESELLER \nThe channel is which products are sold or distributed to customers by resellers, which is a business or individual who purchases goods to resell at a profit without taking title to those goods.\n\nSALES REPRESENTATIVE\nThe individual employed to represent a business and to sell its merchandise.\n\nSOLICITOR \nAn individual appointed and authorized by an agent to solicit and receive applications as their representative. Solicitors are not usually given the power to bind coverage but are normally required to be licensed.\n \nSPECIALTY DEPARTMENT STORE \nA store with a department store format that focuses on apparel and soft home goods (e.g., Neiman Marcus).\n \nSPECIALTY RETAILER \nA retailer specializing in one category of merchandising, frequently fashion-related.\n \nSTATE GOVERNMENT \nThe sale or distribution of products via state government organizations.\n \nSTOREFRONT \nA Storefront used to solicit products or services. Storefronts are often associated with banks and major department stores.\n\nSUPERSTORE \nA large supermarket or specialty store, usually between 20,000 and 100,000 square feet.\n\nTELEMARKETING \nThe channel in which products, goods or services are sold directly via telephone solicitation.\n\nUNIQUE APPLICATION RESELLER (UAR) \nThe channel is which products are sold or distributed to customers by a UAR, which is an organization that takes the basic product, customizes or adds value to the product in some way and sells that product to a market niche.\n \nVALUE-ADDED RESELLER (VAR) \nThe channel is which products are sold or distributed to customers by a Value Added Retailer who takes the basic product, customizes or adds functionality to the product and sells it to mass markets.\n \nVENDOR MACHINE \nA method of selling by way of using a machine.\n \nVOLUNTARY WHOLESALER \nA distributor company that owns its own distribution center and distributes goods and services to independent retailers and/or corporately owned stores. \n\nThis differs from a cooperative in that the stores have no vested financial interest in the voluntary distribution center.\n \nWAREHOUSE CLUB \nA retail store that sells a limited assortment of general merchandise to customers who are members of the club. Memberships are generally fee-based, margins are small and there is little customer service provided to the members.\n \nWAREHOUSE STORE \nA discount retailer offering merchandise in a no-frills environment",
								"DisplayFolderInfo": "{\"name\":\"Channel\",\"colorCode\":\"#001D3F\"}",
								"PrimaryKeys": "ChannelTypeId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Country",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "The Country definition is based upon ISO 3166 Country Codes:\n\nEach country or territory has three codes:\n-  a two letter code \n-  a three letter code \n-  a three digit code\n\nThe numeric code identifies a physical territory, and the letters a country name. Thus when Germany reunified, it kept DE/DEU but changed from 280 to 276, while when Southern Rhodesia was renamed Zimbabwe it stayed 716 but changed from RH/RHO to ZW/ZWE.\n\nCodes withdrawn from use may not be reused for five years. The two letter codes AA, QM to QZ, XA to XZ, and ZZ, all three letter codes beginning with those pairs, and numeric codes beginning 9, are available for individual use and will not be allocated to countries. The codes OO, OOO, and 000 are designated for use as \"escape codes\" to indicate that additional codes are being used.\n\nThe term \"country\" is perhaps a little misleading: not all the \"countries\" in ISO 3166 are actually independent.   Many of them are geographically separate territories that are legally portions or dependencies of other countries. Nonetheless the term \"country\" is used throughout. Where the code for a country includes territory also included in another code, a code for the exclusive part can be formed by replacing the second and third letters by X. \n\nISO 3166 was first issued in 1974, and the three digit numbers were mostly added in 1981.\n\nChanges to ISO 3166 are managed by the ISO 3166 Maintenance Agency (ISO3166/MA).\n\nExamples of ISO 3166 codes:\n\nCA CAN 124 Canada\nUS USA 840 United States of America",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "CountryId",
										"Description": "The unique identifier of the Country.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Country.cdm.json/Country",
											"Name": "CountryId"
										}
									},
									{
										"Name": "IsoCountryName",
										"Description": "The ISO country name.\n\nCountry               A 2     A 3     Number\n----------------------------------------------------------------------\nAALAND ISLANDS     AX      ALA     248\nAFGHANISTAN         AF      AFG     004\nALBANIA          AL      ALB     008\n\nThe term \"country\" is perhaps a little misleading: not all the \"countries\" in ISO 3166 are actually independent. \n\nMany of them are geographically separate territories that are legally portions or dependencies of other countries. Nonetheless the term \"country\" is used throughout. \n\nWhere the code for a country includes territory also included in another code, a code for the exclusive part can be formed by replacing the second and third letters by X.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Country.cdm.json/Country",
											"Name": "IsoCountryName"
										}
									},
									{
										"Name": "Iso2LetterCountryCode",
										"Description": "The ISO 2 letter code identifying a country (A 2).\n\nCountry               A 2     A 3     Number\n----------------------------------------------------------------------\nAALAND ISLANDS     AX      ALA     248\nAFGHANISTAN         AF      AFG     004\nALBANIA          AL      ALB     008",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Country.cdm.json/Country",
											"Name": "Iso2LetterCountryCode"
										}
									},
									{
										"Name": "Iso3LetterCountryCode",
										"Description": "The 3 letter country code (A 3).\n\nCountry               A 2     A 3     Number\n----------------------------------------------------------------------\nAALAND ISLANDS     AX      ALA     248\nAFGHANISTAN         AF      AFG     004\nALBANIA          AL      ALB     008\n\nThus when Germany reunified, it kept DE/DEU but changed from 280 to 276, while when Southern Rhodesia was renamed Zimbabwe it stayed 716 but changed from RH/RHO to ZW/ZWE.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 3,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Country.cdm.json/Country",
											"Name": "Iso3LetterCountryCode"
										}
									},
									{
										"Name": "Iso3DigitCountryCode",
										"Description": "The numeric code identifies a physical territory, and the letters a country name. \n\nThus when Germany reunified, it kept DE/DEU but changed from 280 to 276, while when Southern Rhodesia was renamed Zimbabwe it stayed 716 but changed from RH/RHO to ZW/ZWE.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 3,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Country.cdm.json/Country",
											"Name": "Iso3DigitCountryCode"
										}
									},
									{
										"Name": "CapitalOrMajorCityName",
										"Description": "The name of the capital or major city associated with the country",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Country.cdm.json/Country",
											"Name": "CapitalOrMajorCityName"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Country",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Country",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"CountryId\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"CountryId\"},\"IsoCountryName\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"IsoCountryName\"},\"Iso2LetterCountryCode\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"Iso2LetterCountryCode\"},\"Iso3LetterCountryCode\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"Iso3LetterCountryCode\"},\"Iso3DigitCountryCode\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"Iso3DigitCountryCode\"},\"CapitalOrMajorCityName\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"CapitalOrMajorCityName\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Country\",\"path\":\"Country.cdm.json/Country\"},\"description\":\"The Country definition is based upon ISO 3166 Country Codes:\\n\\nEach country or territory has three codes:\\n-  a two letter code \\n-  a three letter code \\n-  a three digit code\\n\\nThe numeric code identifies a physical territory, and the letters a country name. Thus when Germany reunified, it kept DE/DEU but changed from 280 to 276, while when Southern Rhodesia was renamed Zimbabwe it stayed 716 but changed from RH/RHO to ZW/ZWE.\\n\\nCodes withdrawn from use may not be reused for five years. The two letter codes AA, QM to QZ, XA to XZ, and ZZ, all three letter codes beginning with those pairs, and numeric codes beginning 9, are available for individual use and will not be allocated to countries. The codes OO, OOO, and 000 are designated for use as \\\"escape codes\\\" to indicate that additional codes are being used.\\n\\nThe term \\\"country\\\" is perhaps a little misleading: not all the \\\"countries\\\" in ISO 3166 are actually independent.   Many of them are geographically separate territories that are legally portions or dependencies of other countries. Nonetheless the term \\\"country\\\" is used throughout. Where the code for a country includes territory also included in another code, a code for the exclusive part can be formed by replacing the second and third letters by X. \\n\\nISO 3166 was first issued in 1974, and the three digit numbers were mostly added in 1981.\\n\\nChanges to ISO 3166 are managed by the ISO 3166 Maintenance Agency (ISO3166/MA).\\n\\nExamples of ISO 3166 codes:\\n\\nCA CAN 124 Canada\\nUS USA 840 United States of America\",\"primaryKey\":[\"CountryId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"CountryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Country.\",\"isNullable\":false,\"name\":\"CountryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"IsoCountryName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The ISO country name.\\n\\nCountry               A 2     A 3     Number\\n----------------------------------------------------------------------\\nAALAND ISLANDS     AX      ALA     248\\nAFGHANISTAN         AF      AFG     004\\nALBANIA          AL      ALB     008\\n\\nThe term \\\"country\\\" is perhaps a little misleading: not all the \\\"countries\\\" in ISO 3166 are actually independent. \\n\\nMany of them are geographically separate territories that are legally portions or dependencies of other countries. Nonetheless the term \\\"country\\\" is used throughout. \\n\\nWhere the code for a country includes territory also included in another code, a code for the exclusive part can be formed by replacing the second and third letters by X.\",\"isNullable\":true,\"name\":\"IsoCountryName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"Iso2LetterCountryCode\"},\"dataType\":\"string\",\"dataTypeLength\":2,\"description\":\"The ISO 2 letter code identifying a country (A 2).\\n\\nCountry               A 2     A 3     Number\\n----------------------------------------------------------------------\\nAALAND ISLANDS     AX      ALA     248\\nAFGHANISTAN         AF      AFG     004\\nALBANIA          AL      ALB     008\",\"isNullable\":true,\"name\":\"Iso2LetterCountryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"Iso3LetterCountryCode\"},\"dataType\":\"string\",\"dataTypeLength\":3,\"description\":\"The 3 letter country code (A 3).\\n\\nCountry               A 2     A 3     Number\\n----------------------------------------------------------------------\\nAALAND ISLANDS     AX      ALA     248\\nAFGHANISTAN         AF      AFG     004\\nALBANIA          AL      ALB     008\\n\\nThus when Germany reunified, it kept DE/DEU but changed from 280 to 276, while when Southern Rhodesia was renamed Zimbabwe it stayed 716 but changed from RH/RHO to ZW/ZWE.\",\"isNullable\":true,\"name\":\"Iso3LetterCountryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"Iso3DigitCountryCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":3,\"description\":\"The numeric code identifies a physical territory, and the letters a country name. \\n\\nThus when Germany reunified, it kept DE/DEU but changed from 280 to 276, while when Southern Rhodesia was renamed Zimbabwe it stayed 716 but changed from RH/RHO to ZW/ZWE.\",\"isNullable\":true,\"scale\":0,\"name\":\"Iso3DigitCountryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Country.cdm.json/Country\",\"name\":\"CapitalOrMajorCityName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the capital or major city associated with the country\",\"isNullable\":true,\"name\":\"CapitalOrMajorCityName\"}]}}}",
								"Description": "The Country definition is based upon ISO 3166 Country Codes:\n\nEach country or territory has three codes:\n-  a two letter code \n-  a three letter code \n-  a three digit code\n\nThe numeric code identifies a physical territory, and the letters a country name. Thus when Germany reunified, it kept DE/DEU but changed from 280 to 276, while when Southern Rhodesia was renamed Zimbabwe it stayed 716 but changed from RH/RHO to ZW/ZWE.\n\nCodes withdrawn from use may not be reused for five years. The two letter codes AA, QM to QZ, XA to XZ, and ZZ, all three letter codes beginning with those pairs, and numeric codes beginning 9, are available for individual use and will not be allocated to countries. The codes OO, OOO, and 000 are designated for use as \"escape codes\" to indicate that additional codes are being used.\n\nThe term \"country\" is perhaps a little misleading: not all the \"countries\" in ISO 3166 are actually independent.   Many of them are geographically separate territories that are legally portions or dependencies of other countries. Nonetheless the term \"country\" is used throughout. Where the code for a country includes territory also included in another code, a code for the exclusive part can be formed by replacing the second and third letters by X. \n\nISO 3166 was first issued in 1974, and the three digit numbers were mostly added in 1981.\n\nChanges to ISO 3166 are managed by the ISO 3166 Maintenance Agency (ISO3166/MA).\n\nExamples of ISO 3166 codes:\n\nCA CAN 124 Canada\nUS USA 840 United States of America",
								"DisplayFolderInfo": "{\"name\":\"Geography\",\"colorCode\":\"#8170C2\"}",
								"PrimaryKeys": "CountryId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "IndividualCustomer",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "An 'individual customer' is one of the two types of customers upon which the Microsoft data models focus.      'Legal entity customer' is the other.\n\nThe definition of 'customer' is of critical importance for every organization.    \n\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\n\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  \n\nAn artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\n\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings ('individual customers') and legal entities ('legal entity customers')>    \n\nIndividual customers are human beings, male and female individuals, of various ages, sex, demographics and a variety of similar dimensions that describe and define those who purchase products, good and services.    \n\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\n\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\n\nOf course, that is just the start of identifying, defining and understanding each corresponding type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.    Microsoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\n\n-  INDIVIDUAL CUSTOMER Business Area Model\n-  LEGAL ENTITY CUSTOMER Business Area Model\n\nNote:\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\n\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \n\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \n\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \n\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\n\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "CustomerId"
										}
									},
									{
										"Name": "IndividualCustomerName",
										"Description": "The name of the Individual Customer.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "IndividualCustomerName"
										}
									},
									{
										"Name": "DateOfBirth",
										"Description": "The date of birth of the individual customer.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "DateOfBirth"
										}
									},
									{
										"Name": "DateOfDeath",
										"Description": "The date of death of the individual customer.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "DateOfDeath"
										}
									},
									{
										"Name": "SexId",
										"Description": "The unique identifier of a Sex.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "SexId"
										}
									},
									{
										"Name": "GenderId",
										"Description": "The unique identifier of a Gender.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "GenderId"
										}
									},
									{
										"Name": "EthnicCategoryId",
										"Description": "The unique identifier of an Ethnic Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "EthnicCategoryId"
										}
									},
									{
										"Name": "RacialCategoryId",
										"Description": "The unique identifier of a Racial Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "IndividualCustomer.cdm.json/IndividualCustomer",
											"Name": "RacialCategoryId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/IndividualCustomer",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/IndividualCustomer",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"CustomerId\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"CustomerId\"},\"IndividualCustomerName\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"IndividualCustomerName\"},\"DateOfBirth\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"DateOfBirth\"},\"DateOfDeath\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"DateOfDeath\"},\"SexId\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"SexId\"},\"GenderId\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"GenderId\"},\"EthnicCategoryId\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"EthnicCategoryId\"},\"RacialCategoryId\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"RacialCategoryId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"IndividualCustomer\",\"path\":\"IndividualCustomer.cdm.json/IndividualCustomer\"},\"description\":\"An 'individual customer' is one of the two types of customers upon which the Microsoft data models focus.      'Legal entity customer' is the other.\\n\\nThe definition of 'customer' is of critical importance for every organization.    \\n\\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\\n\\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  \\n\\nAn artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\\n\\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings ('individual customers') and legal entities ('legal entity customers')>    \\n\\nIndividual customers are human beings, male and female individuals, of various ages, sex, demographics and a variety of similar dimensions that describe and define those who purchase products, good and services.    \\n\\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\\n\\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\\n\\nOf course, that is just the start of identifying, defining and understanding each corresponding type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.    Microsoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\\n\\n-  INDIVIDUAL CUSTOMER Business Area Model\\n-  LEGAL ENTITY CUSTOMER Business Area Model\\n\\nNote:\\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\\n\\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \\n\\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \\n\\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \\n\\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\\n\\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.\",\"primaryKey\":[\"CustomerId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":false,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"IndividualCustomerName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Individual Customer.\",\"isNullable\":true,\"name\":\"IndividualCustomerName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"DateOfBirth\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of birth of the individual customer.\",\"isNullable\":true,\"name\":\"DateOfBirth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"DateOfDeath\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of death of the individual customer.\",\"isNullable\":true,\"name\":\"DateOfDeath\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"SexId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Sex.\",\"isNullable\":true,\"name\":\"SexId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"GenderId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Gender.\",\"isNullable\":true,\"name\":\"GenderId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"EthnicCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Ethnic Category.\",\"isNullable\":true,\"name\":\"EthnicCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"IndividualCustomer.cdm.json/IndividualCustomer\",\"name\":\"RacialCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Racial Category.\",\"isNullable\":true,\"name\":\"RacialCategoryId\"}]}}}",
								"Description": "An 'individual customer' is one of the two types of customers upon which the Microsoft data models focus.      'Legal entity customer' is the other.\n\nThe definition of 'customer' is of critical importance for every organization.    \n\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\n\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  \n\nAn artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\n\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings ('individual customers') and legal entities ('legal entity customers')>    \n\nIndividual customers are human beings, male and female individuals, of various ages, sex, demographics and a variety of similar dimensions that describe and define those who purchase products, good and services.    \n\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\n\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\n\nOf course, that is just the start of identifying, defining and understanding each corresponding type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.    Microsoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\n\n-  INDIVIDUAL CUSTOMER Business Area Model\n-  LEGAL ENTITY CUSTOMER Business Area Model\n\nNote:\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\n\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \n\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \n\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \n\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\n\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.",
								"DisplayFolderInfo": "{\"name\":\"Customer\",\"colorCode\":\"#E3008C\"}",
								"PrimaryKeys": "CustomerId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Item",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "Something that is inventoried.\n\nA SKU, Stock keeping unit, refers to a specific item in a specific unit of measure.  \n\nFor example, if you distributed a specific chemical in both gallon containers and barrels then you would maintain the inventory as two SKUs even though they are both the same specific chemical.\n\nItems are classified as follows:\n\n- Tool\n- Product\n- Raw Material\n- Kit\n- Replacement Part\n- Unit\n- Miscellaneous Item",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ItemSku",
										"Description": "The Stock Keeping Unit identifier, which is typically used for inventory-related activities.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 20,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemSku"
										}
									},
									{
										"Name": "ItemName",
										"Description": "The name of the Item.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemName"
										}
									},
									{
										"Name": "ItemDescription",
										"Description": "The description of the Item.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemDescription"
										}
									},
									{
										"Name": "InformationLabelText",
										"Description": "The label text that identifies the care, use, preparation and handling of the product.\n\nExamples:\n\n- \"Keep out of direct sunlight…\"\n- \"Keep out of reach of children…\"",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "InformationLabelText"
										}
									},
									{
										"Name": "DescriptiveLabelText",
										"Description": "The label text that describes significant characteristics and benefits.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "DescriptiveLabelText"
										}
									},
									{
										"Name": "WarningInformationText",
										"Description": "The text of the warning label, if any, appearing upon the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WarningInformationText"
										}
									},
									{
										"Name": "GradeLabelText",
										"Description": "The label text that identifies product quality with letters, number or conditions.\n\nExamples:\n\n-  Grade A\n-  Prime\n-  #1",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "GradeLabelText"
										}
									},
									{
										"Name": "UniversalProductCode",
										"Description": "A system that identifies products by type and by manufacturer.  \n\nA UPC consists of twelve (12) digits.  Six (6) indicate the Manufacturer and six (6) digits describe the product.\n\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \n\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 12,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "UniversalProductCode"
										}
									},
									{
										"Name": "EuropeanArticleNumber",
										"Description": "A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\n\naka International Article Number (abbreviation of EAN retained)",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EuropeanArticleNumber"
										}
									},
									{
										"Name": "GlobalTradeItemNumber",
										"Description": "The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "GlobalTradeItemNumber"
										}
									},
									{
										"Name": "ItemElectronicProductCode",
										"Description": "EPC is the RFID version of the UPC barcode. \nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemElectronicProductCode"
										}
									},
									{
										"Name": "ComponentPartIdentifier",
										"Description": "The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 30,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ComponentPartIdentifier"
										}
									},
									{
										"Name": "PluCode",
										"Description": "PLU Codes are typically assigned to fresh produce but can also be assigned to other items as well.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 5,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "PluCode"
										}
									},
									{
										"Name": "EngineeringReferenceNumber",
										"Description": "The number used by manufacturing or engineering when referencing the Product.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EngineeringReferenceNumber"
										}
									},
									{
										"Name": "CopyrightNumber",
										"Description": "The number of the copyright granted.\n\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 18,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CopyrightNumber"
										}
									},
									{
										"Name": "UlControlNumber",
										"Description": "Any unit that connects to a source greater than 30 volts rms must be certified by Underwriter's Laboratories (UL) if it will be sold in the United States.\n\nThe UL control number identifies the manufacturer and certification classification.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 4,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "UlControlNumber"
										}
									},
									{
										"Name": "UlFileNumber",
										"Description": "The UL file number indicates where report files can be found at Underwriters Laboratories.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 7,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "UlFileNumber"
										}
									},
									{
										"Name": "ItemNote",
										"Description": "A note, comment or additional information regarding the item.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemNote"
										}
									},
									{
										"Name": "ProductId",
										"Description": "The unique identifier of a Product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ProductId"
										}
									},
									{
										"Name": "AssetIndicator",
										"Description": "Indicates whether the item becomes an asset once the item is put into service.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "AssetIndicator"
										}
									},
									{
										"Name": "ItemLength",
										"Description": "The standard item length.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemLength"
										}
									},
									{
										"Name": "ItemWidth",
										"Description": "The standard item width.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemWidth"
										}
									},
									{
										"Name": "ItemHeight",
										"Description": "The standard item height.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemHeight"
										}
									},
									{
										"Name": "LwhUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "LwhUomId"
										}
									},
									{
										"Name": "ItemVolume",
										"Description": "The standard item volume.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemVolume"
										}
									},
									{
										"Name": "ItemVolumeUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemVolumeUomId"
										}
									},
									{
										"Name": "ItemWeight",
										"Description": "The standard item weight.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemWeight"
										}
									},
									{
										"Name": "WeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WeightUomId"
										}
									},
									{
										"Name": "ShelfLifeDays",
										"Description": "The amount of time that a product can be stored before it can no longer be safely consumed or sold.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ShelfLifeDays"
										}
									},
									{
										"Name": "MinimumStorageTemperature",
										"Description": "The minimum temperature at which the item may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageTemperature"
										}
									},
									{
										"Name": "MinimumStorageTemperatureUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageTemperatureUomId"
										}
									},
									{
										"Name": "MaximumStorageTemperature",
										"Description": "The maximum temperature at which the item may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageTemperature"
										}
									},
									{
										"Name": "MaximumStorageTemperatureUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageTemperatureUomId"
										}
									},
									{
										"Name": "MinimumStorageHumidity",
										"Description": "The minimum storage humidity that the item may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageHumidity"
										}
									},
									{
										"Name": "MinimumStorageHumidityUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageHumidityUomId"
										}
									},
									{
										"Name": "MaximumStorageHumidity",
										"Description": "The maximum storage humidity that the item may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageHumidity"
										}
									},
									{
										"Name": "MaximumStorageHumidityUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageHumidityUomId"
										}
									},
									{
										"Name": "StandardQuantityUnitOfMeasureId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardQuantityUnitOfMeasureId"
										}
									},
									{
										"Name": "StandardCost",
										"Description": "The estimated or calculated cost to manufacture or produce the Product. Often used for calculating the value of the Item for inventory purposes.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardCost"
										}
									},
									{
										"Name": "ListPrice",
										"Description": "The standard retail price of the Product before the application of any discount.\n\nThis is the price that normally appears in catalogs, on purchase orders and invoices.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ListPrice"
										}
									},
									{
										"Name": "StandardWholesalePrice",
										"Description": "The standard, or default, price charged wholesalers for the Product.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardWholesalePrice"
										}
									},
									{
										"Name": "TargetReturnPrice",
										"Description": "A price established as part of a strategy to yield a specific return on investment.\n\nTarget-Return Price = (unit cost) + ((desired return)*(invested capital))/unit sales\n\nThe Target-Return Price ignores competitor's pricing and price elasticity.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "TargetReturnPrice"
										}
									},
									{
										"Name": "MarginAmount",
										"Description": "The difference between the price of a product and the cost to produce it.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MarginAmount"
										}
									},
									{
										"Name": "VerbalBidsRequiredForMinimumAmountRange",
										"Description": "A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "VerbalBidsRequiredForMinimumAmountRange"
										}
									},
									{
										"Name": "VerbalBidsRequiredForMaximumAmountRange",
										"Description": "A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "VerbalBidsRequiredForMaximumAmountRange"
										}
									},
									{
										"Name": "WrittenBidsRequiredForMinimumAmountRange",
										"Description": "A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WrittenBidsRequiredForMinimumAmountRange"
										}
									},
									{
										"Name": "WrittenBidsRequiredForMaximumAmountRange",
										"Description": "A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WrittenBidsRequiredForMaximumAmountRange"
										}
									},
									{
										"Name": "CompetitiveBidsRequiredForMinimumAmountRange",
										"Description": "A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CompetitiveBidsRequiredForMinimumAmountRange"
										}
									},
									{
										"Name": "CompetitiveBidsRequiredForMaximumAmountRange",
										"Description": "A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CompetitiveBidsRequiredForMaximumAmountRange"
										}
									},
									{
										"Name": "LotSizeQuantity",
										"Description": "The quantity of Item to be purchased or manufactured.  \n\nThe objective is to spread setup and ordering costs over a large number of pieces (Items) to reduce unit costs.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "LotSizeQuantity"
										}
									},
									{
										"Name": "MinimumOrderQuantity",
										"Description": "The smallest order quantity which, in principle, is allowed.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumOrderQuantity"
										}
									},
									{
										"Name": "MinimumStockQuantity",
										"Description": "A control limit within a stock control system which could indicate the point at which an order should be placed, or indicate if stocks are too low, for a specific item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStockQuantity"
										}
									},
									{
										"Name": "ActiveItemInventoryPeriodNumberOfDays",
										"Description": "The number of days that the organization defines as the 'active item period'.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ActiveItemInventoryPeriodNumberOfDays"
										}
									},
									{
										"Name": "PutAwayRulesStatement",
										"Description": "The internal rules and procedures for positioning stock in a warehouse or store after goods inward processing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "PutAwayRulesStatement"
										}
									},
									{
										"Name": "EurobrandIndicator",
										"Description": "Indicates that the Product carries a brand name that is marketed similarly throughout Europe.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EurobrandIndicator"
										}
									},
									{
										"Name": "StoreMixedIndicator",
										"Description": "Determines whether or not the Item may be stored in a location that already contains other Items.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StoreMixedIndicator"
										}
									},
									{
										"Name": "StoreToExistingItemIndicator",
										"Description": "Determines whether or not the Item may be stored in a location that already contains a different lot of the same item.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StoreToExistingItemIndicator"
										}
									},
									{
										"Name": "StoreToExistingLotIndicator",
										"Description": "Determines whether or not an Item may be stored in a location that already contains the same lot of the same Item.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StoreToExistingLotIndicator"
										}
									},
									{
										"Name": "SoleSourceItemIndicator",
										"Description": "Indicates that the Item is purchased from just one vendor.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SoleSourceItemIndicator"
										}
									},
									{
										"Name": "SoleSourceSupplierName",
										"Description": "The single vendor from whom the Item is purchased.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SoleSourceSupplierName"
										}
									},
									{
										"Name": "LifedItemIndicator",
										"Description": "A consumable or repairable product for which the manufacturer has specified a finite life in either some form of time period or in a number of cycles or activities.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "LifedItemIndicator"
										}
									},
									{
										"Name": "InStockOutOfStockIndicator",
										"Description": "The condition existing when a supply requisition cannot be filled from stock. Stock-out Rate-The number of stock-outs per hundred line items picked.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "InStockOutOfStockIndicator"
										}
									},
									{
										"Name": "HazardousMaterialIndicator",
										"Description": "Any substance that has been determined by the Occupational Safety and Health Administration (OSHA) as having the potential to cause a physical or health hazard. This is based on its potential for burning, exploding, or otherwise causing an injury to workers or the likelihood that exposure will result in acute or chronic health effects among employees",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "HazardousMaterialIndicator"
										}
									},
									{
										"Name": "ActiveInventoryItemIndicator",
										"Description": "Any item or element of inventory which has been used or sold within a given period.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ActiveInventoryItemIndicator"
										}
									},
									{
										"Name": "EligibleForExportIndicator",
										"Description": "Indicates that the Product is eligible for export to foreign countries without restriction.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EligibleForExportIndicator"
										}
									},
									{
										"Name": "CoManagedInventoryItemIndicator",
										"Description": "A support arrangement similar to Vendor Managed Inventory but where replacement orders for the vendor-owned stock are agreed by the user prior to delivery",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CoManagedInventoryItemIndicator"
										}
									},
									{
										"Name": "RotableItemIndicator",
										"Description": "An repairable inventory item that can be repeatedly restored to a fully serviceable condition and re-used over the normal life cycle of the parent equipment to which it is related. Such items have a repair lead time as well as a procurement lead time and normally have a serial number that is retained throughout the rotable life regardless of the extent of replacement of its component parts.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "RotableItemIndicator"
										}
									},
									{
										"Name": "ConsignmentItemIndicator",
										"Description": "Consignments can be used to keep track of inventory that you don't own, but at the time you sell it, you must pay for it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ConsignmentItemIndicator"
										}
									},
									{
										"Name": "SerializedItemIndicator",
										"Description": "Indicates that the Item is serialized.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SerializedItemIndicator"
										}
									},
									{
										"Name": "TrackSerialNumberIndicator",
										"Description": "Indicates that the Item must be tracked by Serial Number.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "TrackSerialNumberIndicator"
										}
									},
									{
										"Name": "RepairableItemIndicator",
										"Description": "An inventory item that is not normally consumed in use but one which will be repaired and re-used as part of the normal stock policy for that item. Such items have a repair lead-time as well as a procurement lead-time.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "RepairableItemIndicator"
										}
									},
									{
										"Name": "RepairPeriod",
										"Description": "The total out of service time, including transit time, from when a repairable component becomes unfit for use until the time it is returned to stock and is available for further use.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 3,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "RepairPeriod"
										}
									},
									{
										"Name": "ManufacturerId",
										"Description": "The unique identifier of a Manufacturer.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ManufacturerId"
										}
									},
									{
										"Name": "ItemIdentificationMethodId",
										"Description": "The unique identifier of the Item Identification Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemIdentificationMethodId"
										}
									},
									{
										"Name": "CommodityTypeId",
										"Description": "The unique identifier of a Commodity Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CommodityTypeId"
										}
									},
									{
										"Name": "ItemSafetyClassificationId",
										"Description": "The unique identifier of an Item Safety Classification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemSafetyClassificationId"
										}
									},
									{
										"Name": "StandardStorageUnitTypeId",
										"Description": "The unique identifier of the Standard Storage Unit Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardStorageUnitTypeId"
										}
									},
									{
										"Name": "SecurityLevelId",
										"Description": "The unique identifier of the Item Security Level.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SecurityLevelId"
										}
									},
									{
										"Name": "VendorId",
										"Description": "The unique identifier of a Vendor.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "VendorId"
										}
									},
									{
										"Name": "FamilyGroupId",
										"Description": "The unique identifier of a Family Group.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "FamilyGroupId"
										}
									},
									{
										"Name": "HazardSeverityCategoryId",
										"Description": "The unique identifier of a Hazard Severity Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "HazardSeverityCategoryId"
										}
									},
									{
										"Name": "DepreciationMethodId",
										"Description": "The unique identifier of the Depreciation Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "DepreciationMethodId"
										}
									},
									{
										"Name": "ItemTypeId",
										"Description": "The unique identifier of an Item Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemTypeId"
										}
									},
									{
										"Name": "BarCodeId",
										"Description": "The unique identifier of a Bar Code.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "BarCodeId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Item",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Item",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ItemSku\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSku\"},\"ItemName\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemName\"},\"ItemDescription\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemDescription\"},\"InformationLabelText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InformationLabelText\"},\"DescriptiveLabelText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DescriptiveLabelText\"},\"WarningInformationText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WarningInformationText\"},\"GradeLabelText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GradeLabelText\"},\"UniversalProductCode\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UniversalProductCode\"},\"EuropeanArticleNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EuropeanArticleNumber\"},\"GlobalTradeItemNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GlobalTradeItemNumber\"},\"ItemElectronicProductCode\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemElectronicProductCode\"},\"ComponentPartIdentifier\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ComponentPartIdentifier\"},\"PluCode\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PluCode\"},\"EngineeringReferenceNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EngineeringReferenceNumber\"},\"CopyrightNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CopyrightNumber\"},\"UlControlNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlControlNumber\"},\"UlFileNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlFileNumber\"},\"ItemNote\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemNote\"},\"ProductId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ProductId\"},\"AssetIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"AssetIndicator\"},\"ItemLength\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemLength\"},\"ItemWidth\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWidth\"},\"ItemHeight\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemHeight\"},\"LwhUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LwhUomId\"},\"ItemVolume\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolume\"},\"ItemVolumeUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolumeUomId\"},\"ItemWeight\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWeight\"},\"WeightUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WeightUomId\"},\"ShelfLifeDays\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ShelfLifeDays\"},\"MinimumStorageTemperature\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperature\"},\"MinimumStorageTemperatureUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperatureUomId\"},\"MaximumStorageTemperature\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperature\"},\"MaximumStorageTemperatureUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperatureUomId\"},\"MinimumStorageHumidity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidity\"},\"MinimumStorageHumidityUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidityUomId\"},\"MaximumStorageHumidity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidity\"},\"MaximumStorageHumidityUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidityUomId\"},\"StandardQuantityUnitOfMeasureId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardQuantityUnitOfMeasureId\"},\"StandardCost\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardCost\"},\"ListPrice\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ListPrice\"},\"StandardWholesalePrice\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardWholesalePrice\"},\"TargetReturnPrice\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TargetReturnPrice\"},\"MarginAmount\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MarginAmount\"},\"VerbalBidsRequiredForMinimumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMinimumAmountRange\"},\"VerbalBidsRequiredForMaximumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMaximumAmountRange\"},\"WrittenBidsRequiredForMinimumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMinimumAmountRange\"},\"WrittenBidsRequiredForMaximumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMaximumAmountRange\"},\"CompetitiveBidsRequiredForMinimumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMinimumAmountRange\"},\"CompetitiveBidsRequiredForMaximumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMaximumAmountRange\"},\"LotSizeQuantity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LotSizeQuantity\"},\"MinimumOrderQuantity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumOrderQuantity\"},\"MinimumStockQuantity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStockQuantity\"},\"ActiveItemInventoryPeriodNumberOfDays\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveItemInventoryPeriodNumberOfDays\"},\"PutAwayRulesStatement\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PutAwayRulesStatement\"},\"EurobrandIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EurobrandIndicator\"},\"StoreMixedIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreMixedIndicator\"},\"StoreToExistingItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingItemIndicator\"},\"StoreToExistingLotIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingLotIndicator\"},\"SoleSourceItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceItemIndicator\"},\"SoleSourceSupplierName\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceSupplierName\"},\"LifedItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LifedItemIndicator\"},\"InStockOutOfStockIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InStockOutOfStockIndicator\"},\"HazardousMaterialIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardousMaterialIndicator\"},\"ActiveInventoryItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveInventoryItemIndicator\"},\"EligibleForExportIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EligibleForExportIndicator\"},\"CoManagedInventoryItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CoManagedInventoryItemIndicator\"},\"RotableItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RotableItemIndicator\"},\"ConsignmentItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ConsignmentItemIndicator\"},\"SerializedItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SerializedItemIndicator\"},\"TrackSerialNumberIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TrackSerialNumberIndicator\"},\"RepairableItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairableItemIndicator\"},\"RepairPeriod\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairPeriod\"},\"ManufacturerId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ManufacturerId\"},\"ItemIdentificationMethodId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemIdentificationMethodId\"},\"CommodityTypeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CommodityTypeId\"},\"ItemSafetyClassificationId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSafetyClassificationId\"},\"StandardStorageUnitTypeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardStorageUnitTypeId\"},\"SecurityLevelId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SecurityLevelId\"},\"VendorId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VendorId\"},\"FamilyGroupId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"FamilyGroupId\"},\"HazardSeverityCategoryId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardSeverityCategoryId\"},\"DepreciationMethodId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DepreciationMethodId\"},\"ItemTypeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemTypeId\"},\"BarCodeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"BarCodeId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Item\",\"path\":\"Item.cdm.json/Item\"},\"description\":\"Something that is inventoried.\\n\\nA SKU, Stock keeping unit, refers to a specific item in a specific unit of measure.  \\n\\nFor example, if you distributed a specific chemical in both gallon containers and barrels then you would maintain the inventory as two SKUs even though they are both the same specific chemical.\\n\\nItems are classified as follows:\\n\\n- Tool\\n- Product\\n- Raw Material\\n- Kit\\n- Replacement Part\\n- Unit\\n- Miscellaneous Item\",\"primaryKey\":[\"ItemSku\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSku\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The Stock Keeping Unit identifier, which is typically used for inventory-related activities.\",\"isNullable\":false,\"name\":\"ItemSku\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Item.\",\"isNullable\":true,\"name\":\"ItemName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the Item.\",\"isNullable\":true,\"name\":\"ItemDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InformationLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies the care, use, preparation and handling of the product.\\n\\nExamples:\\n\\n- \\\"Keep out of direct sunlight…\\\"\\n- \\\"Keep out of reach of children…\\\"\",\"isNullable\":true,\"name\":\"InformationLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DescriptiveLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that describes significant characteristics and benefits.\",\"isNullable\":true,\"name\":\"DescriptiveLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WarningInformationText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The text of the warning label, if any, appearing upon the product.\",\"isNullable\":true,\"name\":\"WarningInformationText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GradeLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies product quality with letters, number or conditions.\\n\\nExamples:\\n\\n-  Grade A\\n-  Prime\\n-  #1\",\"isNullable\":true,\"name\":\"GradeLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UniversalProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":12,\"description\":\"A system that identifies products by type and by manufacturer.  \\n\\nA UPC consists of twelve (12) digits.  Six (6) indicate the Manufacturer and six (6) digits describe the product.\\n\\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \\n\\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.\",\"isNullable\":true,\"scale\":0,\"name\":\"UniversalProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EuropeanArticleNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\\n\\naka International Article Number (abbreviation of EAN retained)\",\"isNullable\":true,\"scale\":0,\"name\":\"EuropeanArticleNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GlobalTradeItemNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalTradeItemNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemElectronicProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"EPC is the RFID version of the UPC barcode. \\nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \\nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \\nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.\",\"isNullable\":true,\"scale\":0,\"name\":\"ItemElectronicProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ComponentPartIdentifier\"},\"dataType\":\"string\",\"dataTypeLength\":30,\"description\":\"The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.\",\"isNullable\":true,\"name\":\"ComponentPartIdentifier\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PluCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":5,\"description\":\"PLU Codes are typically assigned to fresh produce but can also be assigned to other items as well.\",\"isNullable\":true,\"scale\":0,\"name\":\"PluCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EngineeringReferenceNumber\"},\"dataType\":\"integer\",\"description\":\"The number used by manufacturing or engineering when referencing the Product.\",\"isNullable\":true,\"name\":\"EngineeringReferenceNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CopyrightNumber\"},\"dataType\":\"string\",\"dataTypeLength\":18,\"description\":\"The number of the copyright granted.\\n\\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.\",\"isNullable\":true,\"name\":\"CopyrightNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlControlNumber\"},\"dataType\":\"string\",\"dataTypeLength\":4,\"description\":\"Any unit that connects to a source greater than 30 volts rms must be certified by Underwriter's Laboratories (UL) if it will be sold in the United States.\\n\\nThe UL control number identifies the manufacturer and certification classification.\",\"isNullable\":true,\"name\":\"UlControlNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlFileNumber\"},\"dataType\":\"string\",\"dataTypeLength\":7,\"description\":\"The UL file number indicates where report files can be found at Underwriters Laboratories.\",\"isNullable\":true,\"name\":\"UlFileNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the item.\",\"isNullable\":true,\"name\":\"ItemNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Product.\",\"isNullable\":true,\"name\":\"ProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"AssetIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the item becomes an asset once the item is put into service.\",\"isNullable\":true,\"name\":\"AssetIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemLength\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item length.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemLength\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWidth\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item width.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemWidth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemHeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item height.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemHeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LwhUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"LwhUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolume\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item volume.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemVolume\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolumeUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ItemVolumeUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item weight.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"WeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ShelfLifeDays\"},\"dataType\":\"integer\",\"description\":\"The amount of time that a product can be stored before it can no longer be safely consumed or sold.\",\"isNullable\":true,\"name\":\"ShelfLifeDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum temperature at which the item may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperatureUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MinimumStorageTemperatureUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum temperature at which the item may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperatureUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MaximumStorageTemperatureUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum storage humidity that the item may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidityUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MinimumStorageHumidityUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum storage humidity that the item may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidityUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MaximumStorageHumidityUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardQuantityUnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"StandardQuantityUnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardCost\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The estimated or calculated cost to manufacture or produce the Product. Often used for calculating the value of the Item for inventory purposes.\",\"isNullable\":true,\"scale\":2,\"name\":\"StandardCost\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ListPrice\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard retail price of the Product before the application of any discount.\\n\\nThis is the price that normally appears in catalogs, on purchase orders and invoices.\",\"isNullable\":true,\"scale\":2,\"name\":\"ListPrice\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardWholesalePrice\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard, or default, price charged wholesalers for the Product.\",\"isNullable\":true,\"scale\":2,\"name\":\"StandardWholesalePrice\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TargetReturnPrice\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A price established as part of a strategy to yield a specific return on investment.\\n\\nTarget-Return Price = (unit cost) + ((desired return)*(invested capital))/unit sales\\n\\nThe Target-Return Price ignores competitor's pricing and price elasticity.\",\"isNullable\":true,\"scale\":2,\"name\":\"TargetReturnPrice\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MarginAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The difference between the price of a product and the cost to produce it.\",\"isNullable\":true,\"scale\":2,\"name\":\"MarginAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMinimumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"VerbalBidsRequiredForMinimumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMaximumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"VerbalBidsRequiredForMaximumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMinimumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"WrittenBidsRequiredForMinimumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMaximumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"WrittenBidsRequiredForMaximumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMinimumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"CompetitiveBidsRequiredForMinimumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMaximumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"CompetitiveBidsRequiredForMaximumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LotSizeQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The quantity of Item to be purchased or manufactured.  \\n\\nThe objective is to spread setup and ordering costs over a large number of pieces (Items) to reduce unit costs.\",\"isNullable\":true,\"scale\":2,\"name\":\"LotSizeQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumOrderQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The smallest order quantity which, in principle, is allowed.\",\"isNullable\":true,\"scale\":2,\"name\":\"MinimumOrderQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStockQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A control limit within a stock control system which could indicate the point at which an order should be placed, or indicate if stocks are too low, for a specific item.\",\"isNullable\":true,\"scale\":2,\"name\":\"MinimumStockQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveItemInventoryPeriodNumberOfDays\"},\"dataType\":\"integer\",\"description\":\"The number of days that the organization defines as the 'active item period'.\",\"isNullable\":true,\"name\":\"ActiveItemInventoryPeriodNumberOfDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PutAwayRulesStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The internal rules and procedures for positioning stock in a warehouse or store after goods inward processing.\",\"isNullable\":true,\"name\":\"PutAwayRulesStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EurobrandIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Product carries a brand name that is marketed similarly throughout Europe.\",\"isNullable\":true,\"name\":\"EurobrandIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreMixedIndicator\"},\"dataType\":\"boolean\",\"description\":\"Determines whether or not the Item may be stored in a location that already contains other Items.\",\"isNullable\":true,\"name\":\"StoreMixedIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Determines whether or not the Item may be stored in a location that already contains a different lot of the same item.\",\"isNullable\":true,\"name\":\"StoreToExistingItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingLotIndicator\"},\"dataType\":\"boolean\",\"description\":\"Determines whether or not an Item may be stored in a location that already contains the same lot of the same Item.\",\"isNullable\":true,\"name\":\"StoreToExistingLotIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Item is purchased from just one vendor.\",\"isNullable\":true,\"name\":\"SoleSourceItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceSupplierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The single vendor from whom the Item is purchased.\",\"isNullable\":true,\"name\":\"SoleSourceSupplierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LifedItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"A consumable or repairable product for which the manufacturer has specified a finite life in either some form of time period or in a number of cycles or activities.\",\"isNullable\":true,\"name\":\"LifedItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InStockOutOfStockIndicator\"},\"dataType\":\"boolean\",\"description\":\"The condition existing when a supply requisition cannot be filled from stock. Stock-out Rate-The number of stock-outs per hundred line items picked.\",\"isNullable\":true,\"name\":\"InStockOutOfStockIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardousMaterialIndicator\"},\"dataType\":\"boolean\",\"description\":\"Any substance that has been determined by the Occupational Safety and Health Administration (OSHA) as having the potential to cause a physical or health hazard. This is based on its potential for burning, exploding, or otherwise causing an injury to workers or the likelihood that exposure will result in acute or chronic health effects among employees\",\"isNullable\":true,\"name\":\"HazardousMaterialIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveInventoryItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Any item or element of inventory which has been used or sold within a given period.\",\"isNullable\":true,\"name\":\"ActiveInventoryItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EligibleForExportIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Product is eligible for export to foreign countries without restriction.\",\"isNullable\":true,\"name\":\"EligibleForExportIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CoManagedInventoryItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"A support arrangement similar to Vendor Managed Inventory but where replacement orders for the vendor-owned stock are agreed by the user prior to delivery\",\"isNullable\":true,\"name\":\"CoManagedInventoryItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RotableItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"An repairable inventory item that can be repeatedly restored to a fully serviceable condition and re-used over the normal life cycle of the parent equipment to which it is related. Such items have a repair lead time as well as a procurement lead time and normally have a serial number that is retained throughout the rotable life regardless of the extent of replacement of its component parts.\",\"isNullable\":true,\"name\":\"RotableItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ConsignmentItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Consignments can be used to keep track of inventory that you don't own, but at the time you sell it, you must pay for it.\",\"isNullable\":true,\"name\":\"ConsignmentItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SerializedItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Item is serialized.\",\"isNullable\":true,\"name\":\"SerializedItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TrackSerialNumberIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Item must be tracked by Serial Number.\",\"isNullable\":true,\"name\":\"TrackSerialNumberIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairableItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"An inventory item that is not normally consumed in use but one which will be repaired and re-used as part of the normal stock policy for that item. Such items have a repair lead-time as well as a procurement lead-time.\",\"isNullable\":true,\"name\":\"RepairableItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairPeriod\"},\"dataType\":\"decimal\",\"dataTypeLength\":3,\"description\":\"The total out of service time, including transit time, from when a repairable component becomes unfit for use until the time it is returned to stock and is available for further use.\",\"isNullable\":true,\"scale\":0,\"name\":\"RepairPeriod\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ManufacturerId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Manufacturer.\",\"isNullable\":true,\"name\":\"ManufacturerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemIdentificationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Item Identification Method.\",\"isNullable\":true,\"name\":\"ItemIdentificationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CommodityTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Commodity Type.\",\"isNullable\":true,\"name\":\"CommodityTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSafetyClassificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Item Safety Classification.\",\"isNullable\":true,\"name\":\"ItemSafetyClassificationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardStorageUnitTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Standard Storage Unit Type.\",\"isNullable\":true,\"name\":\"StandardStorageUnitTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SecurityLevelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Item Security Level.\",\"isNullable\":true,\"name\":\"SecurityLevelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VendorId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Vendor.\",\"isNullable\":true,\"name\":\"VendorId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"FamilyGroupId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Family Group.\",\"isNullable\":true,\"name\":\"FamilyGroupId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardSeverityCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Hazard Severity Category.\",\"isNullable\":true,\"name\":\"HazardSeverityCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DepreciationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Depreciation Method.\",\"isNullable\":true,\"name\":\"DepreciationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Item Type.\",\"isNullable\":true,\"name\":\"ItemTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"BarCodeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Bar Code.\",\"isNullable\":true,\"name\":\"BarCodeId\"}]}}}",
								"Description": "Something that is inventoried.\n\nA SKU, Stock keeping unit, refers to a specific item in a specific unit of measure.  \n\nFor example, if you distributed a specific chemical in both gallon containers and barrels then you would maintain the inventory as two SKUs even though they are both the same specific chemical.\n\nItems are classified as follows:\n\n- Tool\n- Product\n- Raw Material\n- Kit\n- Replacement Part\n- Unit\n- Miscellaneous Item",
								"DisplayFolderInfo": "{\"name\":\"Inventory\",\"colorCode\":\"#EA279F\"}",
								"PrimaryKeys": "ItemSku",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Location",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "A location is a physical point that can be defined as a single latitude / longitude. A location can be used to describe:\n\n- the address of a physical structure\n- the location of a business or service\n- the location of a component\n- the delivery location for a shipment or mail",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationId"
										}
									},
									{
										"Name": "LocationName",
										"Description": "The name of a location.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationName"
										}
									},
									{
										"Name": "LocationDescription",
										"Description": "The description of a location.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationDescription"
										}
									},
									{
										"Name": "LocationAddressLine1",
										"Description": "The 'street' component of a location. Includes street name, apartment, suite number or PO Box.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationAddressLine1"
										}
									},
									{
										"Name": "LocationAddressLine2",
										"Description": "The 'street' component of a location. Includes street name, apartment, suite number or PO Box.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationAddressLine2"
										}
									},
									{
										"Name": "LocationCity",
										"Description": "The 'city' component of a location.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationCity"
										}
									},
									{
										"Name": "LocationStateId",
										"Description": "The unique identifier of the State = State Code.\n\nA two-digit FIPS code assigned by the NIST to identify each State and statistically equivalent entity. The NIST assigns the codes based on the alphabetic sequence of State names (Puerto Rico and the Outlying Areas appear at the end); it documents these codes in a FIPS publication (FIPS PUB 5). Also, a two-digit code assigned by the Census Bureau to identify each State within its census geographic division (Puerto Rico and the Outlying Areas appear at the end).",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationStateId"
										}
									},
									{
										"Name": "LocationZipCode",
										"Description": "The unique identifier of a Zip Code.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 11,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationZipCode"
										}
									},
									{
										"Name": "LocationNote",
										"Description": "Notes, comments or additional information about the location. The note could be used to describe access to the location as well as any hazardous conditions that might exist at the location.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationNote"
										}
									},
									{
										"Name": "LocationLatitude",
										"Description": "The location north or south in reference to the equator, which is designated at zero (0) degrees. Parallel lines that circle the globe both north and south of the equator. \n\nLatitude is often measured in degrees, minutes, seconds (ddd mm ss), but other formats are also commonly used: gps coordinate (ddd mm.mmmm), decimal degrees (ddd.dddd).",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 7,
											"Scale": 4,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationLatitude"
										}
									},
									{
										"Name": "LocationLongitude",
										"Description": "The location east or west in reference to the Prime Meridian, which is designated as zero (0) degrees longitude. The distance between lines of longitude are greater at the equator and smaller at the higher latitudes, intersecting at the earth's North and South Poles. Time zones are correlated to longitude.\n\nLongitude is often measured in degrees, minutes, seconds (ddd mm ss), but other formats are also commonly used: gps coordinate (ddd mm.mmmm), decimal degrees (ddd.dddd).",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 7,
											"Scale": 4,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationLongitude"
										}
									},
									{
										"Name": "LocationDatum",
										"Description": "Latitude and longitude are based on a datum.  A datum is a reference point, surface or axis against which measurements are made.\n\nDifferent datums can be used for determining the latitude and longitude. If different datums are used the latitude and longitude for a single point (location) may be different.\n\nWGS 84 is a datum that is used on most GPS equipment.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 5,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationDatum"
										}
									},
									{
										"Name": "LocationElevation",
										"Description": "The distance above sea level of this location at ground level.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationElevation"
										}
									},
									{
										"Name": "LocationElevationUnitOfMeasureId",
										"Description": "The elevation unit of measurement.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "LocationElevationUnitOfMeasureId"
										}
									},
									{
										"Name": "GlobalLocationNumber",
										"Description": "The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "GlobalLocationNumber"
										}
									},
									{
										"Name": "TimezoneId",
										"Description": "The unique identifier of a timezone.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "TimezoneId"
										}
									},
									{
										"Name": "DaylightSavingsTimeObservedIndicator",
										"Description": "Indicates whether daylight savings time (DST) is observed at this location.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "DaylightSavingsTimeObservedIndicator"
										}
									},
									{
										"Name": "CountryId",
										"Description": "The unique identifier of the Country.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "CountryId"
										}
									},
									{
										"Name": "SubdivisionId",
										"Description": "The unique identifier of the Country Subdivision.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Location.cdm.json/Location",
											"Name": "SubdivisionId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Location",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Location",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"LocationId\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationId\"},\"LocationName\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationName\"},\"LocationDescription\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationDescription\"},\"LocationAddressLine1\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationAddressLine1\"},\"LocationAddressLine2\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationAddressLine2\"},\"LocationCity\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationCity\"},\"LocationStateId\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationStateId\"},\"LocationZipCode\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationZipCode\"},\"LocationNote\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationNote\"},\"LocationLatitude\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationLatitude\"},\"LocationLongitude\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationLongitude\"},\"LocationDatum\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationDatum\"},\"LocationElevation\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationElevation\"},\"LocationElevationUnitOfMeasureId\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationElevationUnitOfMeasureId\"},\"GlobalLocationNumber\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"GlobalLocationNumber\"},\"TimezoneId\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"TimezoneId\"},\"DaylightSavingsTimeObservedIndicator\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"DaylightSavingsTimeObservedIndicator\"},\"CountryId\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"CountryId\"},\"SubdivisionId\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"SubdivisionId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Location\",\"path\":\"Location.cdm.json/Location\"},\"description\":\"A location is a physical point that can be defined as a single latitude / longitude. A location can be used to describe:\\n\\n- the address of a physical structure\\n- the location of a business or service\\n- the location of a component\\n- the delivery location for a shipment or mail\",\"primaryKey\":[\"LocationId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":false,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a location.\",\"isNullable\":true,\"name\":\"LocationName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a location.\",\"isNullable\":true,\"name\":\"LocationDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationAddressLine1\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The 'street' component of a location. Includes street name, apartment, suite number or PO Box.\",\"isNullable\":true,\"name\":\"LocationAddressLine1\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationAddressLine2\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The 'street' component of a location. Includes street name, apartment, suite number or PO Box.\",\"isNullable\":true,\"name\":\"LocationAddressLine2\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationCity\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The 'city' component of a location.\",\"isNullable\":true,\"name\":\"LocationCity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationStateId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the State = State Code.\\n\\nA two-digit FIPS code assigned by the NIST to identify each State and statistically equivalent entity. The NIST assigns the codes based on the alphabetic sequence of State names (Puerto Rico and the Outlying Areas appear at the end); it documents these codes in a FIPS publication (FIPS PUB 5). Also, a two-digit code assigned by the Census Bureau to identify each State within its census geographic division (Puerto Rico and the Outlying Areas appear at the end).\",\"isNullable\":true,\"name\":\"LocationStateId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationZipCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":11,\"description\":\"The unique identifier of a Zip Code.\",\"isNullable\":true,\"scale\":0,\"name\":\"LocationZipCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"Notes, comments or additional information about the location. The note could be used to describe access to the location as well as any hazardous conditions that might exist at the location.\",\"isNullable\":true,\"name\":\"LocationNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationLatitude\"},\"dataType\":\"decimal\",\"dataTypeLength\":7,\"description\":\"The location north or south in reference to the equator, which is designated at zero (0) degrees. Parallel lines that circle the globe both north and south of the equator. \\n\\nLatitude is often measured in degrees, minutes, seconds (ddd mm ss), but other formats are also commonly used: gps coordinate (ddd mm.mmmm), decimal degrees (ddd.dddd).\",\"isNullable\":true,\"scale\":4,\"name\":\"LocationLatitude\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationLongitude\"},\"dataType\":\"decimal\",\"dataTypeLength\":7,\"description\":\"The location east or west in reference to the Prime Meridian, which is designated as zero (0) degrees longitude. The distance between lines of longitude are greater at the equator and smaller at the higher latitudes, intersecting at the earth's North and South Poles. Time zones are correlated to longitude.\\n\\nLongitude is often measured in degrees, minutes, seconds (ddd mm ss), but other formats are also commonly used: gps coordinate (ddd mm.mmmm), decimal degrees (ddd.dddd).\",\"isNullable\":true,\"scale\":4,\"name\":\"LocationLongitude\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationDatum\"},\"dataType\":\"string\",\"dataTypeLength\":5,\"description\":\"Latitude and longitude are based on a datum.  A datum is a reference point, surface or axis against which measurements are made.\\n\\nDifferent datums can be used for determining the latitude and longitude. If different datums are used the latitude and longitude for a single point (location) may be different.\\n\\nWGS 84 is a datum that is used on most GPS equipment.\",\"isNullable\":true,\"name\":\"LocationDatum\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationElevation\"},\"dataType\":\"integer\",\"description\":\"The distance above sea level of this location at ground level.\",\"isNullable\":true,\"name\":\"LocationElevation\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"LocationElevationUnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The elevation unit of measurement.\",\"isNullable\":true,\"name\":\"LocationElevationUnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"GlobalLocationNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalLocationNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"TimezoneId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a timezone.\",\"isNullable\":true,\"name\":\"TimezoneId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"DaylightSavingsTimeObservedIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether daylight savings time (DST) is observed at this location.\",\"isNullable\":true,\"name\":\"DaylightSavingsTimeObservedIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"CountryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Country.\",\"isNullable\":true,\"name\":\"CountryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Location.cdm.json/Location\",\"name\":\"SubdivisionId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Country Subdivision.\",\"isNullable\":true,\"name\":\"SubdivisionId\"}]}}}",
								"Description": "A location is a physical point that can be defined as a single latitude / longitude. A location can be used to describe:\n\n- the address of a physical structure\n- the location of a business or service\n- the location of a component\n- the delivery location for a shipment or mail",
								"DisplayFolderInfo": "{\"name\":\"Geography\",\"colorCode\":\"#8170C2\"}",
								"PrimaryKeys": "LocationId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProductCategory",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "A means of categorizing retail products by functions performed, characteristics or similar common characteristics.\n\nEx:\n\n- Baby\n- Beer, Wine & Spirits\n- Beverages\n- Bread & Bakery\n- Breakfast & Cereal\n- Canned Goods & Soups\n- Clothing & Apparel\n- Condiments / Spices & Bake\n- Cookies, Snacks & Candy\n- Dairy, Eggs & Cheese\n- Deli & Signature Cafe\n- Frozen Foods\n- Fruits & Vegetables\n- Grains, Pasta & Sides\n- International Cuisine\n- Meat & Seafood\n- Paper, Cleaning & Home\n- Personal Care & Pharmacy\n- Pet Care\n- Tobacco",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProductCategoryId",
										"Description": "The unique identifier of a Product Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProductCategory.cdm.json/ProductCategory",
											"Name": "ProductCategoryId"
										}
									},
									{
										"Name": "ProductCategoryName",
										"Description": "The name of a Product Category.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProductCategory.cdm.json/ProductCategory",
											"Name": "ProductCategoryName"
										}
									},
									{
										"Name": "ProductCategoryDescription",
										"Description": "The description of a Product Category.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProductCategory.cdm.json/ProductCategory",
											"Name": "ProductCategoryDescription"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/ProductCategory",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/ProductCategory",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProductCategoryId\":{\"entity\":\"ProductCategory.cdm.json/ProductCategory\",\"name\":\"ProductCategoryId\"},\"ProductCategoryName\":{\"entity\":\"ProductCategory.cdm.json/ProductCategory\",\"name\":\"ProductCategoryName\"},\"ProductCategoryDescription\":{\"entity\":\"ProductCategory.cdm.json/ProductCategory\",\"name\":\"ProductCategoryDescription\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProductCategory\",\"path\":\"ProductCategory.cdm.json/ProductCategory\"},\"description\":\"A means of categorizing retail products by functions performed, characteristics or similar common characteristics.\\n\\nEx:\\n\\n- Baby\\n- Beer, Wine & Spirits\\n- Beverages\\n- Bread & Bakery\\n- Breakfast & Cereal\\n- Canned Goods & Soups\\n- Clothing & Apparel\\n- Condiments / Spices & Bake\\n- Cookies, Snacks & Candy\\n- Dairy, Eggs & Cheese\\n- Deli & Signature Cafe\\n- Frozen Foods\\n- Fruits & Vegetables\\n- Grains, Pasta & Sides\\n- International Cuisine\\n- Meat & Seafood\\n- Paper, Cleaning & Home\\n- Personal Care & Pharmacy\\n- Pet Care\\n- Tobacco\",\"primaryKey\":[\"ProductCategoryId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProductCategory.cdm.json/ProductCategory\",\"name\":\"ProductCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Product Category.\",\"isNullable\":false,\"name\":\"ProductCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProductCategory.cdm.json/ProductCategory\",\"name\":\"ProductCategoryName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Product Category.\",\"isNullable\":true,\"name\":\"ProductCategoryName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProductCategory.cdm.json/ProductCategory\",\"name\":\"ProductCategoryDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Product Category.\",\"isNullable\":true,\"name\":\"ProductCategoryDescription\"}]}}}",
								"Description": "A means of categorizing retail products by functions performed, characteristics or similar common characteristics.\n\nEx:\n\n- Baby\n- Beer, Wine & Spirits\n- Beverages\n- Bread & Bakery\n- Breakfast & Cereal\n- Canned Goods & Soups\n- Clothing & Apparel\n- Condiments / Spices & Bake\n- Cookies, Snacks & Candy\n- Dairy, Eggs & Cheese\n- Deli & Signature Cafe\n- Frozen Foods\n- Fruits & Vegetables\n- Grains, Pasta & Sides\n- International Cuisine\n- Meat & Seafood\n- Paper, Cleaning & Home\n- Personal Care & Pharmacy\n- Pet Care\n- Tobacco",
								"DisplayFolderInfo": "{\"name\":\"Product\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProductCategoryId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProductType",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "A means of categorizing products by functions performed, characteristics or similar common characteristics.\n\nEx:\n- Retail Product\n- Apparel Product\n- Beauty & Bodycare Product\n- Building Materials Product\n- Cleaning Product\n- Contact Lens Product\n- Eyeglass Product\n- Food & Beverage Product\n- Footwear Product\n- Gas & Oil Product\n- Home Healthcare Product\n- Meat Product\n- Milk Cheese Egg Product\n- Pet Food Product\n- Produce Product\n- Pharmacy Product\n- Drug\n- Facility Ancillary Service\n- Service\n- Vision Product\n- Personal Care\n\nThis list can be expanded to provide an arbitrary grouping of products that reflect the product hierarchy.\n\nFood & Beverage Ex:\n- Diet drinks\n- Energy drinks\n- Natural drinks\n- Caffeinated drinks\n- Convenience Foods\n- Organic Foods\n- Frozen Foods\n- Microwave Foods\n- Baby Foods\n- Diabetic Foods\n\nHome Healthcare Ex:\n-  Ambulatory Aids\n-  Apnea Monitors \n-  Automobile Aids \n-  Back Supports \n-  Bathroom Safety Aids\n-  Compression Systems\n-  Cushioning Supports \n-  Daily Living Aids\n-  Diabetes Products \n-  Diagnostic Equipment \n-  Dialysis Home Units\n-  Emergency First Aid Supplies\n-  Enuresis Alarms \n-  Feeding Systems \n-  Foot Care Products\n-  Heat + Cold Therapy\n-  Hospital Beds & Accessories\n-  Lifts\n-  Mastectomy Products \n-  Maternity Products \n-  Monitors\n-  Orthopedia/Surgical Supports \n-  Ostomy Care \n-  Patient Alarms \n-  Pediatric Rehabilitation\n-  Physical/Occupational Therapy Equi\n-  Respiratory Care Equipment\n-  Suction Equipment \n-  Traction Equipment\n\nTires Ex:\n- Summer Tires\n- Winder Tires\n- All-season Tires\n- Off-road Tires",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProductTypeId",
										"Description": "The unique identifier of a Product Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProductType.cdm.json/ProductType",
											"Name": "ProductTypeId"
										}
									},
									{
										"Name": "ProductTypeName",
										"Description": "The name of a Product Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProductType.cdm.json/ProductType",
											"Name": "ProductTypeName"
										}
									},
									{
										"Name": "ProductTypeDescription",
										"Description": "The description of a Product Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProductType.cdm.json/ProductType",
											"Name": "ProductTypeDescription"
										}
									},
									{
										"Name": "ProductCategoryId",
										"Description": "The unique identifier of a Product Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProductType.cdm.json/ProductType",
											"Name": "ProductCategoryId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/ProductType",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/ProductType",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProductTypeId\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductTypeId\"},\"ProductTypeName\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductTypeName\"},\"ProductTypeDescription\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductTypeDescription\"},\"ProductCategoryId\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductCategoryId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProductType\",\"path\":\"ProductType.cdm.json/ProductType\"},\"description\":\"A means of categorizing products by functions performed, characteristics or similar common characteristics.\\n\\nEx:\\n- Retail Product\\n- Apparel Product\\n- Beauty & Bodycare Product\\n- Building Materials Product\\n- Cleaning Product\\n- Contact Lens Product\\n- Eyeglass Product\\n- Food & Beverage Product\\n- Footwear Product\\n- Gas & Oil Product\\n- Home Healthcare Product\\n- Meat Product\\n- Milk Cheese Egg Product\\n- Pet Food Product\\n- Produce Product\\n- Pharmacy Product\\n- Drug\\n- Facility Ancillary Service\\n- Service\\n- Vision Product\\n- Personal Care\\n\\nThis list can be expanded to provide an arbitrary grouping of products that reflect the product hierarchy.\\n\\nFood & Beverage Ex:\\n- Diet drinks\\n- Energy drinks\\n- Natural drinks\\n- Caffeinated drinks\\n- Convenience Foods\\n- Organic Foods\\n- Frozen Foods\\n- Microwave Foods\\n- Baby Foods\\n- Diabetic Foods\\n\\nHome Healthcare Ex:\\n-  Ambulatory Aids\\n-  Apnea Monitors \\n-  Automobile Aids \\n-  Back Supports \\n-  Bathroom Safety Aids\\n-  Compression Systems\\n-  Cushioning Supports \\n-  Daily Living Aids\\n-  Diabetes Products \\n-  Diagnostic Equipment \\n-  Dialysis Home Units\\n-  Emergency First Aid Supplies\\n-  Enuresis Alarms \\n-  Feeding Systems \\n-  Foot Care Products\\n-  Heat + Cold Therapy\\n-  Hospital Beds & Accessories\\n-  Lifts\\n-  Mastectomy Products \\n-  Maternity Products \\n-  Monitors\\n-  Orthopedia/Surgical Supports \\n-  Ostomy Care \\n-  Patient Alarms \\n-  Pediatric Rehabilitation\\n-  Physical/Occupational Therapy Equi\\n-  Respiratory Care Equipment\\n-  Suction Equipment \\n-  Traction Equipment\\n\\nTires Ex:\\n- Summer Tires\\n- Winder Tires\\n- All-season Tires\\n- Off-road Tires\",\"primaryKey\":[\"ProductTypeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Product Type.\",\"isNullable\":false,\"name\":\"ProductTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductTypeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Product Type.\",\"isNullable\":true,\"name\":\"ProductTypeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductTypeDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Product Type.\",\"isNullable\":true,\"name\":\"ProductTypeDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProductType.cdm.json/ProductType\",\"name\":\"ProductCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Product Category.\",\"isNullable\":true,\"name\":\"ProductCategoryId\"}]}}}",
								"Description": "A means of categorizing products by functions performed, characteristics or similar common characteristics.\n\nEx:\n- Retail Product\n- Apparel Product\n- Beauty & Bodycare Product\n- Building Materials Product\n- Cleaning Product\n- Contact Lens Product\n- Eyeglass Product\n- Food & Beverage Product\n- Footwear Product\n- Gas & Oil Product\n- Home Healthcare Product\n- Meat Product\n- Milk Cheese Egg Product\n- Pet Food Product\n- Produce Product\n- Pharmacy Product\n- Drug\n- Facility Ancillary Service\n- Service\n- Vision Product\n- Personal Care\n\nThis list can be expanded to provide an arbitrary grouping of products that reflect the product hierarchy.\n\nFood & Beverage Ex:\n- Diet drinks\n- Energy drinks\n- Natural drinks\n- Caffeinated drinks\n- Convenience Foods\n- Organic Foods\n- Frozen Foods\n- Microwave Foods\n- Baby Foods\n- Diabetic Foods\n\nHome Healthcare Ex:\n-  Ambulatory Aids\n-  Apnea Monitors \n-  Automobile Aids \n-  Back Supports \n-  Bathroom Safety Aids\n-  Compression Systems\n-  Cushioning Supports \n-  Daily Living Aids\n-  Diabetes Products \n-  Diagnostic Equipment \n-  Dialysis Home Units\n-  Emergency First Aid Supplies\n-  Enuresis Alarms \n-  Feeding Systems \n-  Foot Care Products\n-  Heat + Cold Therapy\n-  Hospital Beds & Accessories\n-  Lifts\n-  Mastectomy Products \n-  Maternity Products \n-  Monitors\n-  Orthopedia/Surgical Supports \n-  Ostomy Care \n-  Patient Alarms \n-  Pediatric Rehabilitation\n-  Physical/Occupational Therapy Equi\n-  Respiratory Care Equipment\n-  Suction Equipment \n-  Traction Equipment\n\nTires Ex:\n- Summer Tires\n- Winder Tires\n- All-season Tires\n- Off-road Tires",
								"DisplayFolderInfo": "{\"name\":\"Product\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProductTypeId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "RetailProduct",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "A product is anything that can be offered to a market that might satisfy a want or need by potential customers.    That product is the sum of all physical, psychological, symbolic, and service attributes associated with it.\n\nThere are two basic types of products:\n\n- Tangible (physical)\n- Intangible (non-physical) such as services\n\nA service is a non-material or intangible product - such as professional consultancy, maintenance service, repair service etc.\nEach product has its own benefits, application, brand name, and packaging that gives it its own identity and distinguishing characteristics.\n\nEvery business or organization has business rules that define precisely what a product is.    While we intuitively know what a product is, we must quantify that knowledge and associated business rules with consistent definitions that can be implemented within the organization in strategies and applications.\n\nA product typically goes through five stages of development:\n\n(1) Idea Stage - involving a thorough evaluation of the potential product\n\n(2) Concept Stage - determines customer acceptance by testing and presentation to consumers and distribution channel members.   Specific aspects regarding quality, dependability, reliability, warranty, packaging, service, pricing, terms of sale, sales and distribution channels, advertising and promotions are evaluated.\n\n(3) Product Development Stage - transforms the prototype product into an actual product for mass sale.   This stage requires close interaction between both marketing and manufacturing.\n\n(4) Test Marketing Stage - may or may not be used since it is an expensive and time-consuming process.  Test marketing involves evaluating various product options and alternatives.\n\n(5) Commercialization - It is very expensive to launch a new product so commercialization only applies to those specific products that are actually going to be sold to the market.\n\nProducts tend to be categorized as either:  Industrial goods and consumer goods\n\nIndustrial goods are used to produce other products .\n\nIndustrial goods may be further divided into:\n\n- Raw materials\n- Equipment\n- Pre-built materials \n- Supplies.\n\nConsumer goods are intended for consumption by the general public.\n\nConsumer goods may be further divided into:\n\n- Durable goods\n- Nondurable goods\n- Packaged goods\n\nA product may be a member of a product family or product line.\n\nA product family is a grouping of products or services that are related to each other by common function, functionality, design platform or similar characteristics.\n\nMembers of a product family frequently have many common parts and assemblies.\n\nProduct families are the highest level of grouping for forecasting, capacity planning or related functions.\n\nEx:\nThe Apple Macintosh family of products consists of the product lines:\n- Mac mini\n- MacBook Pro\n- Mac Pro\n\nA product line is a grouping of products that are closely related in usage, functionality or marketing characteristics.\n\nA Product Family typically is created to address one or five functions:\n\n1. To increase profits and not erode the sales of existing products\n\n2. To attract additional Markets or Market Segments\n\n3. To counter competitor's products\n\n4. To fill a gap in an existing Product Family.\n\n5. To promote sales of other products in the family line\n\nLine Depth refers to the number of products in the product line.\n\nLine consistency refers to how closely related the products are that make up the product line.\n\nLine vulnerability refers to the percentage of sales or profits that are derived from only a few products in the product line.\n\nProduct width refers to the number of different product lines sold by a company.\n\nProduct mix refers to the total number of products sold in all product lines.\n\nLine extension refers to the adding of a new product to a line.\n\n\"Trading up or brand leveraging\" refers to adding a product of better quality to a product line than the other products in that line.\n\n\"Trading down\" refers to adding a product of lesser quality to a product line than the other products in that line.\n\nIf a line of products is sold with the same brand name, this is referred to as family branding.\nStrategy and decisions regarding a product line are usually incorporated in a high-level marketing plan addressing product line strategy, sales, channels, distribution channels, pricing and related issues.\nA product-line manager is responsible for a product line and supervises several product managers who are responsible for individual products within the line.\nProduct-line managers typically have the following responsibilities:\n- Expansion and composition of a product line\n- Evaluate the effects of product mixes on the profitability of other items in the line\n- Planning and allocation of resources to individual products in the line\nA product is normally associated with a brand strategy - manufacturer, private or generic.\n\n1. Manufacturer-  or 'national' branding in which the brand is assigned by the manufacturer of the Product.\n\n2. Private - or 'dealer' branding in which the brand is assigned by the retailer or wholesaler of the Product.\n\n3. Generic - in which the Product is not marked with any identification.   Generic brands are a means for manufacturers to increase profits by saving on advertising, packaging or other costs associated with manufacturer or private branding.\n\nA brand is name, term, sign, symbol or design or a combination of these which identify the goods or services and differentiate them from those of competitors'\n\nA Trade mark is a brand or some part of the brand that is given legal protection because it is capable of exclusive appropriation and representation.\n\nManufacturers can use their own brands (known as Manufacturers' brands) or brands of their distributors (Distributors' brands).\n\nManufacturers/ distributors use brand names for a variety of reasons ranging from simple identification purposes to having legal protection for unique features of the products from imitations.\n\nBrands help consumers recognize certain quality parameters. In some cases, brands are just used to endow the product with unique story and character which itself can be a basis for product differentiation.\n\nIndividual brands have their own identity and the corporate or common name is not used to promote its equity.\n\nIndividual branding requires more expensive advertising and brand extensive brand creation investments.  By extension, each new brand does not benefit from the positive perceptions of earlier brands.\n\nBy contrast, family branding has several advantages.\n\nEach new product is quickly associated with the other products and brand in terms of quality and benefits.\n\nReduced or eliminated time for name identification and advertising for name recognition purposes.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProductId",
										"Description": "The unique identifier of a Product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductId"
										}
									},
									{
										"Name": "ProductName",
										"Description": "The name of the Product, which normally corresponds to the 'marketing name' of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductName"
										}
									},
									{
										"Name": "ProductShortDescription",
										"Description": "The short description of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductShortDescription"
										}
									},
									{
										"Name": "ProductDescription",
										"Description": "The description of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductDescription"
										}
									},
									{
										"Name": "ProductInternalName",
										"Description": "The internal name by which a Product is known.\n\nThis normally approximates the business name by which the public identifies the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductInternalName"
										}
									},
									{
										"Name": "ProductModelName",
										"Description": "The name of the Product Model.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductModelName"
										}
									},
									{
										"Name": "ProductBaseName",
										"Description": "The name of the Product, which normally corresponds to the 'marketing name' of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductBaseName"
										}
									},
									{
										"Name": "ProductCodeName",
										"Description": "The internal code name by which the Product is known within the company.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductCodeName"
										}
									},
									{
										"Name": "ProductIntendedUse",
										"Description": "The intended use of the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductIntendedUse"
										}
									},
									{
										"Name": "IntroductionDate",
										"Description": "The date that the Product was introduced for sale.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "IntroductionDate"
										}
									},
									{
										"Name": "FirstDateManufactured",
										"Description": "The date that the Product was first manufactured by the Manufacturer.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "FirstDateManufactured"
										}
									},
									{
										"Name": "PlannedAbandonmentDate",
										"Description": "The planned date to discontinue marketing the product.    \n\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\n\nThere are three (3) strategies for abandoning a product:\n\n(1)  Reduced marketing and expenditures to maintain profits.\n\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\n\n(3)  Maintain the marketing level until the product is discontinued.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PlannedAbandonmentDate"
										}
									},
									{
										"Name": "ActualAbandonmentDate",
										"Description": "The actual date that the marketing of the product was discontinued. \n\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\n\nThere are three (3) strategies for abandoning a product:\n\n(1)  Reduced marketing and expenditures to maintain profits.\n\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\n\n(3)  Maintain the marketing level until the product is discontinued.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ActualAbandonmentDate"
										}
									},
									{
										"Name": "GlobalTradeItemNumber",
										"Description": "The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.\n\nA GTIN can be assigned to only one brick.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "GlobalTradeItemNumber"
										}
									},
									{
										"Name": "GtinName",
										"Description": "A note, comment or additional information regarding the Product GTIN.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "GtinName"
										}
									},
									{
										"Name": "EuropeanArticleNumber",
										"Description": "A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\n\naka International Article Number (abbreviation of EAN retained)",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "EuropeanArticleNumber"
										}
									},
									{
										"Name": "UniversalProductCode",
										"Description": "A system that identifies products by type and by manufacturer.  \n\nA UPC consists of eleven (11) digits.  Six (6) indicate the Manufacturer and five (5) digits describe the product.\n\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \n\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 12,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "UniversalProductCode"
										}
									},
									{
										"Name": "GpcBrickId",
										"Description": "The unique identifier of a GPC Brick.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "GpcBrickId"
										}
									},
									{
										"Name": "ItemElectronicProductCode",
										"Description": "EPC is the RFID version of the UPC barcode. \nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ItemElectronicProductCode"
										}
									},
									{
										"Name": "ComponentPartIdentifier",
										"Description": "The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 30,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ComponentPartIdentifier"
										}
									},
									{
										"Name": "PluCode",
										"Description": "The PLU or Price Look-Up code is a 4- or 5-digit number that is primarily used on fresh produce items and will typically appear on a small sticker that is applied to an individual piece of fresh produce. \n\nThe PLU code identifies produce items based upon the commodity, variety and size group. \n\nThey are used by supermarkets to make check-out and inventory control easier, faster and more accurate. \n\nThese numbers are assigned by the International Federation for Produce Standards (IFPS)\n\nEx: WHITE FLESH PEACHES\nPLU Code = 4400",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 5,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PluCode"
										}
									},
									{
										"Name": "ProductNetContent",
										"Description": "The standard product length.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductNetContent"
										}
									},
									{
										"Name": "NetContentUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "NetContentUomId"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "StorageInstructions",
										"Description": "Statements regarding how the product should be stored.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "StorageInstructions"
										}
									},
									{
										"Name": "ShelfLifeDays",
										"Description": "The amount of time that a product can be stored before it can no longer be safely consumed or sold.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ShelfLifeDays"
										}
									},
									{
										"Name": "ConsumerStorageInstructions",
										"Description": "Statements regarding how the product should be stored by the consumer.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ConsumerStorageInstructions"
										}
									},
									{
										"Name": "ProductShippingInstructions",
										"Description": "Statements regarding how the product should be shipped.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductShippingInstructions"
										}
									},
									{
										"Name": "ConsumerUsageInstructions",
										"Description": "Statements regarding how the product should be used by the consumer.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ConsumerUsageInstructions"
										}
									},
									{
										"Name": "HealthClaimDescription",
										"Description": "A health claim regarding the product as per regulations of the target market.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "HealthClaimDescription"
										}
									},
									{
										"Name": "MarketingMessageDescription",
										"Description": "A market message that is present on the packaging of the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MarketingMessageDescription"
										}
									},
									{
										"Name": "BundledProductIndicator",
										"Description": "Indicates whether a Product is comprised of a bundle of other Products.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "BundledProductIndicator"
										}
									},
									{
										"Name": "InformationLabelText",
										"Description": "The label text that identifies the care, use, preparation and handling or the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "InformationLabelText"
										}
									},
									{
										"Name": "DescriptiveLabelText",
										"Description": "The label text that describes significant characteristics and benefits.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "DescriptiveLabelText"
										}
									},
									{
										"Name": "WarningInformationText",
										"Description": "The text of the warning label, if any, appearing upon the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "WarningInformationText"
										}
									},
									{
										"Name": "GradeLabelText",
										"Description": "The label text that identifies Product quality with letters, number or conditions.\n\nExamples:\n\n-  Grade A\n-  Prime\n-  #1",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "GradeLabelText"
										}
									},
									{
										"Name": "GovernmentWarningLabelText",
										"Description": "The US Government (or foreign government) label text that addressing the US legal requirements of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "GovernmentWarningLabelText"
										}
									},
									{
										"Name": "PatentNumber",
										"Description": "The patent that is associated with the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 12,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PatentNumber"
										}
									},
									{
										"Name": "PatentDate",
										"Description": "The date that the Patent was granted.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PatentDate"
										}
									},
									{
										"Name": "PatentExpirationDate",
										"Description": "The date that the patent is scheduled to expire.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PatentExpirationDate"
										}
									},
									{
										"Name": "Trademark",
										"Description": "A 'trademark' is a brand name or brand mark that is given legal protection.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "Trademark"
										}
									},
									{
										"Name": "ProductLogo",
										"Description": "A design, symbol or series of words that identifies the product.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductLogo"
										}
									},
									{
										"Name": "ProductSymbol",
										"Description": "A symbol by which the product is known.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductSymbol"
										}
									},
									{
										"Name": "CopyrightNumber",
										"Description": "The unique identifier (number) of the copyright granted.\n\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 18,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "CopyrightNumber"
										}
									},
									{
										"Name": "CopyrightDate",
										"Description": "The date that the copyright was granted.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "CopyrightDate"
										}
									},
									{
										"Name": "ProductLicenserName",
										"Description": "The name of the company that receives a flat fee or royalty for selling the rights to use a trademark, Patent, manufacturing right or process for the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductLicenserName"
										}
									},
									{
										"Name": "EligibleForExportIndicator",
										"Description": "Indicates that the product is eligible for export to foreign countries without restriction.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "EligibleForExportIndicator"
										}
									},
									{
										"Name": "ProductExportRestrictionIndicator",
										"Description": "Indicates that exportation of the product is restricted.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductExportRestrictionIndicator"
										}
									},
									{
										"Name": "ProductExportRestrictionStartDate",
										"Description": "The period start date for which the associated restriction is in effect.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductExportRestrictionStartDate"
										}
									},
									{
										"Name": "ProductExportRestrictionEndDate",
										"Description": "The period end date for which the associated restriction is in effect.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductExportRestrictionEndDate"
										}
									},
									{
										"Name": "ProductExportRestrictionDescription",
										"Description": "A description or statement defining the export restriction(s) placed upon the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductExportRestrictionDescription"
										}
									},
									{
										"Name": "BaseProductQuantity",
										"Description": "The number of base product items contained in the product packaging.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "BaseProductQuantity"
										}
									},
									{
										"Name": "ProductLength",
										"Description": "The standard product length.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductLength"
										}
									},
									{
										"Name": "ProductPlanogramLength",
										"Description": "The standard product length.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductPlanogramLength"
										}
									},
									{
										"Name": "ProductLengthUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductLengthUomId"
										}
									},
									{
										"Name": "ProductWidth",
										"Description": "The standard product width.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductWidth"
										}
									},
									{
										"Name": "ProductPlanogramWidth",
										"Description": "The standard product width.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductPlanogramWidth"
										}
									},
									{
										"Name": "ProductWidthUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductWidthUomId"
										}
									},
									{
										"Name": "ProductHeight",
										"Description": "The standard product height.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductHeight"
										}
									},
									{
										"Name": "ProductPlanogramHeight",
										"Description": "The standard product height.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductPlanogramHeight"
										}
									},
									{
										"Name": "ProductHeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductHeightUomId"
										}
									},
									{
										"Name": "ProductVolume",
										"Description": "The standard product volume.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductVolume"
										}
									},
									{
										"Name": "ProductVolumeUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductVolumeUomId"
										}
									},
									{
										"Name": "ProductNetWeight",
										"Description": "The net product weight.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductNetWeight"
										}
									},
									{
										"Name": "ProductNetWeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductNetWeightUomId"
										}
									},
									{
										"Name": "ProductGrossWeight",
										"Description": "The gross product weight.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductGrossWeight"
										}
									},
									{
										"Name": "ProductGrossWeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductGrossWeightUomId"
										}
									},
									{
										"Name": "ProductDrainedWeight",
										"Description": "The drained product weight.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductDrainedWeight"
										}
									},
									{
										"Name": "ProductDrainedWeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductDrainedWeightUomId"
										}
									},
									{
										"Name": "MinimumStorageTemperature",
										"Description": "The minimum temperature at which the product may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MinimumStorageTemperature"
										}
									},
									{
										"Name": "MinimumStorageTemperatureUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MinimumStorageTemperatureUomId"
										}
									},
									{
										"Name": "MaximumStorageTemperature",
										"Description": "The maximum temperature at which the product may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MaximumStorageTemperature"
										}
									},
									{
										"Name": "MaximumStorageTemperatureUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MaximumStorageTemperatureUomId"
										}
									},
									{
										"Name": "MinimumStorageHumidity",
										"Description": "The minimum humidity that the product may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MinimumStorageHumidity"
										}
									},
									{
										"Name": "MinimumStorageHumidityUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MinimumStorageHumidityUomId"
										}
									},
									{
										"Name": "MaximumStorageHumidity",
										"Description": "The maximum humidity that the product may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MaximumStorageHumidity"
										}
									},
									{
										"Name": "MaximumStorageHumidityUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "MaximumStorageHumidityUomId"
										}
									},
									{
										"Name": "ReturnPolicyStatement",
										"Description": "A statement detailing the product return policy.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ReturnPolicyStatement"
										}
									},
									{
										"Name": "ReturnPolicyPeriodInDays",
										"Description": "The period in days allowed under the associated return policy.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ReturnPolicyPeriodInDays"
										}
									},
									{
										"Name": "ReplacementPolicyStatement",
										"Description": "A statement detailing the product replacement policy.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ReplacementPolicyStatement"
										}
									},
									{
										"Name": "ReplacementPeriodInDays",
										"Description": "The period in days allowed under the associated replacement policy.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ReplacementPeriodInDays"
										}
									},
									{
										"Name": "ExchangePolicyStatement",
										"Description": "A statement detailing the product exchange policy.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ExchangePolicyStatement"
										}
									},
									{
										"Name": "ExchangePolicyPeriodInDays",
										"Description": "The period in days allowed under the associated exchange policy.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ExchangePolicyPeriodInDays"
										}
									},
									{
										"Name": "ProductMustBeDeliveredDaysPriorToExpirationDate",
										"Description": "The number of days prior to the expiration date of the product that the product must be delivered to the an agreed upon point in the distribution system.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductMustBeDeliveredDaysPriorToExpirationDate"
										}
									},
									{
										"Name": "WarrantyId",
										"Description": "The unique identifier of a Warranty.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "WarrantyId"
										}
									},
									{
										"Name": "ItemSku",
										"Description": "The Stock Keeping Unit identifier, which is typically used for inventory-related activities.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 20,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ItemSku"
										}
									},
									{
										"Name": "PrimaryBrandId",
										"Description": "The unique identifier of a Brand.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PrimaryBrandId"
										}
									},
									{
										"Name": "ProductTypeId",
										"Description": "The unique identifier of a Product Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ProductTypeId"
										}
									},
									{
										"Name": "PackageTypeId",
										"Description": "The unique identifier of a Package Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PackageTypeId"
										}
									},
									{
										"Name": "PrimaryCountryOfOriginCountryId",
										"Description": "The unique identifier of the Country.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PrimaryCountryOfOriginCountryId"
										}
									},
									{
										"Name": "GeographicAreaOfOriginGeographicAreaId",
										"Description": "The unique identifier of a Geographic Area.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "GeographicAreaOfOriginGeographicAreaId"
										}
									},
									{
										"Name": "PrimaryColorId",
										"Description": "The unique identifier of a color.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "PrimaryColorId"
										}
									},
									{
										"Name": "FlavorTypeId",
										"Description": "The unique identifier of a Flavor Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "FlavorTypeId"
										}
									},
									{
										"Name": "ScentTypeId",
										"Description": "The unique identifier of a Scent Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "ScentTypeId"
										}
									},
									{
										"Name": "SuitableAgeRatingId",
										"Description": "The unique identifier of a suitable age rating.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "SuitableAgeRatingId"
										}
									},
									{
										"Name": "SeasonalUsageId",
										"Description": "The unique identifier of a seasonal usage for the associated product.\n\nEx:\n- Summer\n- Fall\n- Winter\n- Spring\n- All seasons",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "RetailProduct.cdm.json/RetailProduct",
											"Name": "SeasonalUsageId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/RetailProduct",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/RetailProduct",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProductId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductId\"},\"ProductName\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductName\"},\"ProductShortDescription\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductShortDescription\"},\"ProductDescription\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductDescription\"},\"ProductInternalName\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductInternalName\"},\"ProductModelName\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductModelName\"},\"ProductBaseName\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductBaseName\"},\"ProductCodeName\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductCodeName\"},\"ProductIntendedUse\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductIntendedUse\"},\"IntroductionDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"IntroductionDate\"},\"FirstDateManufactured\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"FirstDateManufactured\"},\"PlannedAbandonmentDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PlannedAbandonmentDate\"},\"ActualAbandonmentDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ActualAbandonmentDate\"},\"GlobalTradeItemNumber\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GlobalTradeItemNumber\"},\"GtinName\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GtinName\"},\"EuropeanArticleNumber\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"EuropeanArticleNumber\"},\"UniversalProductCode\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"UniversalProductCode\"},\"GpcBrickId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GpcBrickId\"},\"ItemElectronicProductCode\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ItemElectronicProductCode\"},\"ComponentPartIdentifier\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ComponentPartIdentifier\"},\"PluCode\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PluCode\"},\"ProductNetContent\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductNetContent\"},\"NetContentUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"NetContentUomId\"},\"ResponsibilityCenterId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ResponsibilityCenterId\"},\"StorageInstructions\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"StorageInstructions\"},\"ShelfLifeDays\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ShelfLifeDays\"},\"ConsumerStorageInstructions\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ConsumerStorageInstructions\"},\"ProductShippingInstructions\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductShippingInstructions\"},\"ConsumerUsageInstructions\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ConsumerUsageInstructions\"},\"HealthClaimDescription\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"HealthClaimDescription\"},\"MarketingMessageDescription\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MarketingMessageDescription\"},\"BundledProductIndicator\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"BundledProductIndicator\"},\"InformationLabelText\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"InformationLabelText\"},\"DescriptiveLabelText\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"DescriptiveLabelText\"},\"WarningInformationText\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"WarningInformationText\"},\"GradeLabelText\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GradeLabelText\"},\"GovernmentWarningLabelText\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GovernmentWarningLabelText\"},\"PatentNumber\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PatentNumber\"},\"PatentDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PatentDate\"},\"PatentExpirationDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PatentExpirationDate\"},\"Trademark\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"Trademark\"},\"ProductLogo\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLogo\"},\"ProductSymbol\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductSymbol\"},\"CopyrightNumber\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"CopyrightNumber\"},\"CopyrightDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"CopyrightDate\"},\"ProductLicenserName\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLicenserName\"},\"EligibleForExportIndicator\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"EligibleForExportIndicator\"},\"ProductExportRestrictionIndicator\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionIndicator\"},\"ProductExportRestrictionStartDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionStartDate\"},\"ProductExportRestrictionEndDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionEndDate\"},\"ProductExportRestrictionDescription\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionDescription\"},\"BaseProductQuantity\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"BaseProductQuantity\"},\"ProductLength\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLength\"},\"ProductPlanogramLength\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductPlanogramLength\"},\"ProductLengthUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLengthUomId\"},\"ProductWidth\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductWidth\"},\"ProductPlanogramWidth\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductPlanogramWidth\"},\"ProductWidthUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductWidthUomId\"},\"ProductHeight\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductHeight\"},\"ProductPlanogramHeight\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductPlanogramHeight\"},\"ProductHeightUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductHeightUomId\"},\"ProductVolume\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductVolume\"},\"ProductVolumeUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductVolumeUomId\"},\"ProductNetWeight\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductNetWeight\"},\"ProductNetWeightUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductNetWeightUomId\"},\"ProductGrossWeight\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductGrossWeight\"},\"ProductGrossWeightUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductGrossWeightUomId\"},\"ProductDrainedWeight\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductDrainedWeight\"},\"ProductDrainedWeightUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductDrainedWeightUomId\"},\"MinimumStorageTemperature\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageTemperature\"},\"MinimumStorageTemperatureUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageTemperatureUomId\"},\"MaximumStorageTemperature\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageTemperature\"},\"MaximumStorageTemperatureUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageTemperatureUomId\"},\"MinimumStorageHumidity\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageHumidity\"},\"MinimumStorageHumidityUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageHumidityUomId\"},\"MaximumStorageHumidity\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageHumidity\"},\"MaximumStorageHumidityUomId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageHumidityUomId\"},\"ReturnPolicyStatement\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReturnPolicyStatement\"},\"ReturnPolicyPeriodInDays\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReturnPolicyPeriodInDays\"},\"ReplacementPolicyStatement\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReplacementPolicyStatement\"},\"ReplacementPeriodInDays\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReplacementPeriodInDays\"},\"ExchangePolicyStatement\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ExchangePolicyStatement\"},\"ExchangePolicyPeriodInDays\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ExchangePolicyPeriodInDays\"},\"ProductMustBeDeliveredDaysPriorToExpirationDate\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductMustBeDeliveredDaysPriorToExpirationDate\"},\"WarrantyId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"WarrantyId\"},\"ItemSku\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ItemSku\"},\"PrimaryBrandId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PrimaryBrandId\"},\"ProductTypeId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductTypeId\"},\"PackageTypeId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PackageTypeId\"},\"PrimaryCountryOfOriginCountryId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PrimaryCountryOfOriginCountryId\"},\"GeographicAreaOfOriginGeographicAreaId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GeographicAreaOfOriginGeographicAreaId\"},\"PrimaryColorId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PrimaryColorId\"},\"FlavorTypeId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"FlavorTypeId\"},\"ScentTypeId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ScentTypeId\"},\"SuitableAgeRatingId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"SuitableAgeRatingId\"},\"SeasonalUsageId\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"SeasonalUsageId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"RetailProduct\",\"path\":\"RetailProduct.cdm.json/RetailProduct\"},\"description\":\"A product is anything that can be offered to a market that might satisfy a want or need by potential customers.    That product is the sum of all physical, psychological, symbolic, and service attributes associated with it.\\n\\nThere are two basic types of products:\\n\\n- Tangible (physical)\\n- Intangible (non-physical) such as services\\n\\nA service is a non-material or intangible product - such as professional consultancy, maintenance service, repair service etc.\\nEach product has its own benefits, application, brand name, and packaging that gives it its own identity and distinguishing characteristics.\\n\\nEvery business or organization has business rules that define precisely what a product is.    While we intuitively know what a product is, we must quantify that knowledge and associated business rules with consistent definitions that can be implemented within the organization in strategies and applications.\\n\\nA product typically goes through five stages of development:\\n\\n(1) Idea Stage - involving a thorough evaluation of the potential product\\n\\n(2) Concept Stage - determines customer acceptance by testing and presentation to consumers and distribution channel members.   Specific aspects regarding quality, dependability, reliability, warranty, packaging, service, pricing, terms of sale, sales and distribution channels, advertising and promotions are evaluated.\\n\\n(3) Product Development Stage - transforms the prototype product into an actual product for mass sale.   This stage requires close interaction between both marketing and manufacturing.\\n\\n(4) Test Marketing Stage - may or may not be used since it is an expensive and time-consuming process.  Test marketing involves evaluating various product options and alternatives.\\n\\n(5) Commercialization - It is very expensive to launch a new product so commercialization only applies to those specific products that are actually going to be sold to the market.\\n\\nProducts tend to be categorized as either:  Industrial goods and consumer goods\\n\\nIndustrial goods are used to produce other products .\\n\\nIndustrial goods may be further divided into:\\n\\n- Raw materials\\n- Equipment\\n- Pre-built materials \\n- Supplies.\\n\\nConsumer goods are intended for consumption by the general public.\\n\\nConsumer goods may be further divided into:\\n\\n- Durable goods\\n- Nondurable goods\\n- Packaged goods\\n\\nA product may be a member of a product family or product line.\\n\\nA product family is a grouping of products or services that are related to each other by common function, functionality, design platform or similar characteristics.\\n\\nMembers of a product family frequently have many common parts and assemblies.\\n\\nProduct families are the highest level of grouping for forecasting, capacity planning or related functions.\\n\\nEx:\\nThe Apple Macintosh family of products consists of the product lines:\\n- Mac mini\\n- MacBook Pro\\n- Mac Pro\\n\\nA product line is a grouping of products that are closely related in usage, functionality or marketing characteristics.\\n\\nA Product Family typically is created to address one or five functions:\\n\\n1. To increase profits and not erode the sales of existing products\\n\\n2. To attract additional Markets or Market Segments\\n\\n3. To counter competitor's products\\n\\n4. To fill a gap in an existing Product Family.\\n\\n5. To promote sales of other products in the family line\\n\\nLine Depth refers to the number of products in the product line.\\n\\nLine consistency refers to how closely related the products are that make up the product line.\\n\\nLine vulnerability refers to the percentage of sales or profits that are derived from only a few products in the product line.\\n\\nProduct width refers to the number of different product lines sold by a company.\\n\\nProduct mix refers to the total number of products sold in all product lines.\\n\\nLine extension refers to the adding of a new product to a line.\\n\\n\\\"Trading up or brand leveraging\\\" refers to adding a product of better quality to a product line than the other products in that line.\\n\\n\\\"Trading down\\\" refers to adding a product of lesser quality to a product line than the other products in that line.\\n\\nIf a line of products is sold with the same brand name, this is referred to as family branding.\\nStrategy and decisions regarding a product line are usually incorporated in a high-level marketing plan addressing product line strategy, sales, channels, distribution channels, pricing and related issues.\\nA product-line manager is responsible for a product line and supervises several product managers who are responsible for individual products within the line.\\nProduct-line managers typically have the following responsibilities:\\n- Expansion and composition of a product line\\n- Evaluate the effects of product mixes on the profitability of other items in the line\\n- Planning and allocation of resources to individual products in the line\\nA product is normally associated with a brand strategy - manufacturer, private or generic.\\n\\n1. Manufacturer-  or 'national' branding in which the brand is assigned by the manufacturer of the Product.\\n\\n2. Private - or 'dealer' branding in which the brand is assigned by the retailer or wholesaler of the Product.\\n\\n3. Generic - in which the Product is not marked with any identification.   Generic brands are a means for manufacturers to increase profits by saving on advertising, packaging or other costs associated with manufacturer or private branding.\\n\\nA brand is name, term, sign, symbol or design or a combination of these which identify the goods or services and differentiate them from those of competitors'\\n\\nA Trade mark is a brand or some part of the brand that is given legal protection because it is capable of exclusive appropriation and representation.\\n\\nManufacturers can use their own brands (known as Manufacturers' brands) or brands of their distributors (Distributors' brands).\\n\\nManufacturers/ distributors use brand names for a variety of reasons ranging from simple identification purposes to having legal protection for unique features of the products from imitations.\\n\\nBrands help consumers recognize certain quality parameters. In some cases, brands are just used to endow the product with unique story and character which itself can be a basis for product differentiation.\\n\\nIndividual brands have their own identity and the corporate or common name is not used to promote its equity.\\n\\nIndividual branding requires more expensive advertising and brand extensive brand creation investments.  By extension, each new brand does not benefit from the positive perceptions of earlier brands.\\n\\nBy contrast, family branding has several advantages.\\n\\nEach new product is quickly associated with the other products and brand in terms of quality and benefits.\\n\\nReduced or eliminated time for name identification and advertising for name recognition purposes.\",\"primaryKey\":[\"ProductId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Product.\",\"isNullable\":false,\"name\":\"ProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Product, which normally corresponds to the 'marketing name' of the Product.\",\"isNullable\":true,\"name\":\"ProductName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductShortDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The short description of the Product.\",\"isNullable\":true,\"name\":\"ProductShortDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the Product.\",\"isNullable\":true,\"name\":\"ProductDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductInternalName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The internal name by which a Product is known.\\n\\nThis normally approximates the business name by which the public identifies the Product.\",\"isNullable\":true,\"name\":\"ProductInternalName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductModelName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Product Model.\",\"isNullable\":true,\"name\":\"ProductModelName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductBaseName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Product, which normally corresponds to the 'marketing name' of the Product.\",\"isNullable\":true,\"name\":\"ProductBaseName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductCodeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The internal code name by which the Product is known within the company.\",\"isNullable\":true,\"name\":\"ProductCodeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductIntendedUse\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The intended use of the product.\",\"isNullable\":true,\"name\":\"ProductIntendedUse\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"IntroductionDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Product was introduced for sale.\",\"isNullable\":true,\"name\":\"IntroductionDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"FirstDateManufactured\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Product was first manufactured by the Manufacturer.\",\"isNullable\":true,\"name\":\"FirstDateManufactured\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PlannedAbandonmentDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The planned date to discontinue marketing the product.    \\n\\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\\n\\nThere are three (3) strategies for abandoning a product:\\n\\n(1)  Reduced marketing and expenditures to maintain profits.\\n\\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\\n\\n(3)  Maintain the marketing level until the product is discontinued.\",\"isNullable\":true,\"name\":\"PlannedAbandonmentDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ActualAbandonmentDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The actual date that the marketing of the product was discontinued. \\n\\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\\n\\nThere are three (3) strategies for abandoning a product:\\n\\n(1)  Reduced marketing and expenditures to maintain profits.\\n\\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\\n\\n(3)  Maintain the marketing level until the product is discontinued.\",\"isNullable\":true,\"name\":\"ActualAbandonmentDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GlobalTradeItemNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.\\n\\nA GTIN can be assigned to only one brick.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalTradeItemNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GtinName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"A note, comment or additional information regarding the Product GTIN.\",\"isNullable\":true,\"name\":\"GtinName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"EuropeanArticleNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\\n\\naka International Article Number (abbreviation of EAN retained)\",\"isNullable\":true,\"scale\":0,\"name\":\"EuropeanArticleNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"UniversalProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":12,\"description\":\"A system that identifies products by type and by manufacturer.  \\n\\nA UPC consists of eleven (11) digits.  Six (6) indicate the Manufacturer and five (5) digits describe the product.\\n\\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \\n\\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.\",\"isNullable\":true,\"scale\":0,\"name\":\"UniversalProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GpcBrickId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a GPC Brick.\",\"isNullable\":true,\"name\":\"GpcBrickId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ItemElectronicProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"EPC is the RFID version of the UPC barcode. \\nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \\nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \\nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.\",\"isNullable\":true,\"scale\":0,\"name\":\"ItemElectronicProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ComponentPartIdentifier\"},\"dataType\":\"string\",\"dataTypeLength\":30,\"description\":\"The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.\",\"isNullable\":true,\"name\":\"ComponentPartIdentifier\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PluCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":5,\"description\":\"The PLU or Price Look-Up code is a 4- or 5-digit number that is primarily used on fresh produce items and will typically appear on a small sticker that is applied to an individual piece of fresh produce. \\n\\nThe PLU code identifies produce items based upon the commodity, variety and size group. \\n\\nThey are used by supermarkets to make check-out and inventory control easier, faster and more accurate. \\n\\nThese numbers are assigned by the International Federation for Produce Standards (IFPS)\\n\\nEx: WHITE FLESH PEACHES\\nPLU Code = 4400\",\"isNullable\":true,\"scale\":0,\"name\":\"PluCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductNetContent\"},\"dataType\":\"integer\",\"description\":\"The standard product length.\",\"isNullable\":true,\"name\":\"ProductNetContent\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"NetContentUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"NetContentUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":false,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"StorageInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be stored.\",\"isNullable\":true,\"name\":\"StorageInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ShelfLifeDays\"},\"dataType\":\"integer\",\"description\":\"The amount of time that a product can be stored before it can no longer be safely consumed or sold.\",\"isNullable\":true,\"name\":\"ShelfLifeDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ConsumerStorageInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be stored by the consumer.\",\"isNullable\":true,\"name\":\"ConsumerStorageInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductShippingInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be shipped.\",\"isNullable\":true,\"name\":\"ProductShippingInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ConsumerUsageInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be used by the consumer.\",\"isNullable\":true,\"name\":\"ConsumerUsageInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"HealthClaimDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"A health claim regarding the product as per regulations of the target market.\",\"isNullable\":true,\"name\":\"HealthClaimDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MarketingMessageDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"A market message that is present on the packaging of the product.\",\"isNullable\":true,\"name\":\"MarketingMessageDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"BundledProductIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether a Product is comprised of a bundle of other Products.\",\"isNullable\":true,\"name\":\"BundledProductIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"InformationLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies the care, use, preparation and handling or the product.\",\"isNullable\":true,\"name\":\"InformationLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"DescriptiveLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that describes significant characteristics and benefits.\",\"isNullable\":true,\"name\":\"DescriptiveLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"WarningInformationText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The text of the warning label, if any, appearing upon the product.\",\"isNullable\":true,\"name\":\"WarningInformationText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GradeLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies Product quality with letters, number or conditions.\\n\\nExamples:\\n\\n-  Grade A\\n-  Prime\\n-  #1\",\"isNullable\":true,\"name\":\"GradeLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GovernmentWarningLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The US Government (or foreign government) label text that addressing the US legal requirements of the Product.\",\"isNullable\":true,\"name\":\"GovernmentWarningLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PatentNumber\"},\"dataType\":\"string\",\"dataTypeLength\":12,\"description\":\"The patent that is associated with the Product.\",\"isNullable\":true,\"name\":\"PatentNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PatentDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Patent was granted.\",\"isNullable\":true,\"name\":\"PatentDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PatentExpirationDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the patent is scheduled to expire.\",\"isNullable\":true,\"name\":\"PatentExpirationDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"Trademark\"},\"dataType\":\"binary\",\"description\":\"A 'trademark' is a brand name or brand mark that is given legal protection.\",\"isNullable\":true,\"name\":\"Trademark\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLogo\"},\"dataType\":\"binary\",\"description\":\"A design, symbol or series of words that identifies the product.\",\"isNullable\":true,\"name\":\"ProductLogo\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductSymbol\"},\"dataType\":\"binary\",\"description\":\"A symbol by which the product is known.\",\"isNullable\":true,\"name\":\"ProductSymbol\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"CopyrightNumber\"},\"dataType\":\"string\",\"dataTypeLength\":18,\"description\":\"The unique identifier (number) of the copyright granted.\\n\\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.\",\"isNullable\":true,\"name\":\"CopyrightNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"CopyrightDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the copyright was granted.\",\"isNullable\":true,\"name\":\"CopyrightDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLicenserName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the company that receives a flat fee or royalty for selling the rights to use a trademark, Patent, manufacturing right or process for the Product.\",\"isNullable\":true,\"name\":\"ProductLicenserName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"EligibleForExportIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the product is eligible for export to foreign countries without restriction.\",\"isNullable\":true,\"name\":\"EligibleForExportIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that exportation of the product is restricted.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionStartDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The period start date for which the associated restriction is in effect.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionStartDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionEndDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The period end date for which the associated restriction is in effect.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionEndDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductExportRestrictionDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"A description or statement defining the export restriction(s) placed upon the Product.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"BaseProductQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The number of base product items contained in the product packaging.\",\"isNullable\":true,\"scale\":2,\"name\":\"BaseProductQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLength\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product length.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductLength\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductPlanogramLength\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product length.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductPlanogramLength\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductLengthUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductLengthUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductWidth\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product width.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductWidth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductPlanogramWidth\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product width.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductPlanogramWidth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductWidthUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductWidthUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductHeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product height.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductHeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductPlanogramHeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product height.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductPlanogramHeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductHeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductHeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductVolume\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product volume.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductVolume\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductVolumeUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductVolumeUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductNetWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The net product weight.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductNetWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductNetWeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductNetWeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductGrossWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The gross product weight.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductGrossWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductGrossWeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductGrossWeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductDrainedWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The drained product weight.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductDrainedWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductDrainedWeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductDrainedWeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum temperature at which the product may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageTemperatureUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MinimumStorageTemperatureUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum temperature at which the product may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageTemperatureUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MaximumStorageTemperatureUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum humidity that the product may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MinimumStorageHumidityUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MinimumStorageHumidityUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum humidity that the product may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"MaximumStorageHumidityUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MaximumStorageHumidityUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReturnPolicyStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement detailing the product return policy.\",\"isNullable\":true,\"name\":\"ReturnPolicyStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReturnPolicyPeriodInDays\"},\"dataType\":\"integer\",\"description\":\"The period in days allowed under the associated return policy.\",\"isNullable\":true,\"name\":\"ReturnPolicyPeriodInDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReplacementPolicyStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement detailing the product replacement policy.\",\"isNullable\":true,\"name\":\"ReplacementPolicyStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ReplacementPeriodInDays\"},\"dataType\":\"integer\",\"description\":\"The period in days allowed under the associated replacement policy.\",\"isNullable\":true,\"name\":\"ReplacementPeriodInDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ExchangePolicyStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement detailing the product exchange policy.\",\"isNullable\":true,\"name\":\"ExchangePolicyStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ExchangePolicyPeriodInDays\"},\"dataType\":\"integer\",\"description\":\"The period in days allowed under the associated exchange policy.\",\"isNullable\":true,\"name\":\"ExchangePolicyPeriodInDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductMustBeDeliveredDaysPriorToExpirationDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The number of days prior to the expiration date of the product that the product must be delivered to the an agreed upon point in the distribution system.\",\"isNullable\":true,\"name\":\"ProductMustBeDeliveredDaysPriorToExpirationDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"WarrantyId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Warranty.\",\"isNullable\":true,\"name\":\"WarrantyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ItemSku\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The Stock Keeping Unit identifier, which is typically used for inventory-related activities.\",\"isNullable\":true,\"name\":\"ItemSku\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PrimaryBrandId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Brand.\",\"isNullable\":true,\"name\":\"PrimaryBrandId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ProductTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Product Type.\",\"isNullable\":true,\"name\":\"ProductTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PackageTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Package Type.\",\"isNullable\":true,\"name\":\"PackageTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PrimaryCountryOfOriginCountryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Country.\",\"isNullable\":true,\"name\":\"PrimaryCountryOfOriginCountryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"GeographicAreaOfOriginGeographicAreaId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Geographic Area.\",\"isNullable\":false,\"name\":\"GeographicAreaOfOriginGeographicAreaId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"PrimaryColorId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a color.\",\"isNullable\":true,\"name\":\"PrimaryColorId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"FlavorTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Flavor Type.\",\"isNullable\":true,\"name\":\"FlavorTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"ScentTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Scent Type.\",\"isNullable\":true,\"name\":\"ScentTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"SuitableAgeRatingId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a suitable age rating.\",\"isNullable\":true,\"name\":\"SuitableAgeRatingId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"RetailProduct.cdm.json/RetailProduct\",\"name\":\"SeasonalUsageId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a seasonal usage for the associated product.\\n\\nEx:\\n- Summer\\n- Fall\\n- Winter\\n- Spring\\n- All seasons\",\"isNullable\":true,\"name\":\"SeasonalUsageId\"}]}}}",
								"Description": "A product is anything that can be offered to a market that might satisfy a want or need by potential customers.    That product is the sum of all physical, psychological, symbolic, and service attributes associated with it.\n\nThere are two basic types of products:\n\n- Tangible (physical)\n- Intangible (non-physical) such as services\n\nA service is a non-material or intangible product - such as professional consultancy, maintenance service, repair service etc.\nEach product has its own benefits, application, brand name, and packaging that gives it its own identity and distinguishing characteristics.\n\nEvery business or organization has business rules that define precisely what a product is.    While we intuitively know what a product is, we must quantify that knowledge and associated business rules with consistent definitions that can be implemented within the organization in strategies and applications.\n\nA product typically goes through five stages of development:\n\n(1) Idea Stage - involving a thorough evaluation of the potential product\n\n(2) Concept Stage - determines customer acceptance by testing and presentation to consumers and distribution channel members.   Specific aspects regarding quality, dependability, reliability, warranty, packaging, service, pricing, terms of sale, sales and distribution channels, advertising and promotions are evaluated.\n\n(3) Product Development Stage - transforms the prototype product into an actual product for mass sale.   This stage requires close interaction between both marketing and manufacturing.\n\n(4) Test Marketing Stage - may or may not be used since it is an expensive and time-consuming process.  Test marketing involves evaluating various product options and alternatives.\n\n(5) Commercialization - It is very expensive to launch a new product so commercialization only applies to those specific products that are actually going to be sold to the market.\n\nProducts tend to be categorized as either:  Industrial goods and consumer goods\n\nIndustrial goods are used to produce other products .\n\nIndustrial goods may be further divided into:\n\n- Raw materials\n- Equipment\n- Pre-built materials \n- Supplies.\n\nConsumer goods are intended for consumption by the general public.\n\nConsumer goods may be further divided into:\n\n- Durable goods\n- Nondurable goods\n- Packaged goods\n\nA product may be a member of a product family or product line.\n\nA product family is a grouping of products or services that are related to each other by common function, functionality, design platform or similar characteristics.\n\nMembers of a product family frequently have many common parts and assemblies.\n\nProduct families are the highest level of grouping for forecasting, capacity planning or related functions.\n\nEx:\nThe Apple Macintosh family of products consists of the product lines:\n- Mac mini\n- MacBook Pro\n- Mac Pro\n\nA product line is a grouping of products that are closely related in usage, functionality or marketing characteristics.\n\nA Product Family typically is created to address one or five functions:\n\n1. To increase profits and not erode the sales of existing products\n\n2. To attract additional Markets or Market Segments\n\n3. To counter competitor's products\n\n4. To fill a gap in an existing Product Family.\n\n5. To promote sales of other products in the family line\n\nLine Depth refers to the number of products in the product line.\n\nLine consistency refers to how closely related the products are that make up the product line.\n\nLine vulnerability refers to the percentage of sales or profits that are derived from only a few products in the product line.\n\nProduct width refers to the number of different product lines sold by a company.\n\nProduct mix refers to the total number of products sold in all product lines.\n\nLine extension refers to the adding of a new product to a line.\n\n\"Trading up or brand leveraging\" refers to adding a product of better quality to a product line than the other products in that line.\n\n\"Trading down\" refers to adding a product of lesser quality to a product line than the other products in that line.\n\nIf a line of products is sold with the same brand name, this is referred to as family branding.\nStrategy and decisions regarding a product line are usually incorporated in a high-level marketing plan addressing product line strategy, sales, channels, distribution channels, pricing and related issues.\nA product-line manager is responsible for a product line and supervises several product managers who are responsible for individual products within the line.\nProduct-line managers typically have the following responsibilities:\n- Expansion and composition of a product line\n- Evaluate the effects of product mixes on the profitability of other items in the line\n- Planning and allocation of resources to individual products in the line\nA product is normally associated with a brand strategy - manufacturer, private or generic.\n\n1. Manufacturer-  or 'national' branding in which the brand is assigned by the manufacturer of the Product.\n\n2. Private - or 'dealer' branding in which the brand is assigned by the retailer or wholesaler of the Product.\n\n3. Generic - in which the Product is not marked with any identification.   Generic brands are a means for manufacturers to increase profits by saving on advertising, packaging or other costs associated with manufacturer or private branding.\n\nA brand is name, term, sign, symbol or design or a combination of these which identify the goods or services and differentiate them from those of competitors'\n\nA Trade mark is a brand or some part of the brand that is given legal protection because it is capable of exclusive appropriation and representation.\n\nManufacturers can use their own brands (known as Manufacturers' brands) or brands of their distributors (Distributors' brands).\n\nManufacturers/ distributors use brand names for a variety of reasons ranging from simple identification purposes to having legal protection for unique features of the products from imitations.\n\nBrands help consumers recognize certain quality parameters. In some cases, brands are just used to endow the product with unique story and character which itself can be a basis for product differentiation.\n\nIndividual brands have their own identity and the corporate or common name is not used to promote its equity.\n\nIndividual branding requires more expensive advertising and brand extensive brand creation investments.  By extension, each new brand does not benefit from the positive perceptions of earlier brands.\n\nBy contrast, family branding has several advantages.\n\nEach new product is quickly associated with the other products and brand in terms of quality and benefits.\n\nReduced or eliminated time for name identification and advertising for name recognition purposes.",
								"DisplayFolderInfo": "{\"name\":\"Product\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProductId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Transaction",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "The lowest level of executable work or customer activity.\n\nA transaction consists of one or more discrete events.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "TransactionId",
										"Description": "The unique identifier of a Transaction.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionId"
										}
									},
									{
										"Name": "TransactionInitiatedTimestamp",
										"Description": "The timestamp the transaction was initiated.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionInitiatedTimestamp"
										}
									},
									{
										"Name": "TransactionCompletedTimestamp",
										"Description": "The timestamp that the transaction was completed or closed.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionCompletedTimestamp"
										}
									},
									{
										"Name": "TransactionReceivedTimestamp",
										"Description": "The timestamp that the Transaction was received.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionReceivedTimestamp"
										}
									},
									{
										"Name": "TransactionEntryTimestamp",
										"Description": "The timestamp that the Transaction was entered into the appropriate system for processing.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionEntryTimestamp"
										}
									},
									{
										"Name": "TransactionConfirmationTimestamp",
										"Description": "The timestamp that the Transaction was confirmed to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionConfirmationTimestamp"
										}
									},
									{
										"Name": "CreditCheckTimestamp",
										"Description": "The timestamp that the Customer/Customer Account had a credit check in regard to the Transaction amount.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CreditCheckTimestamp"
										}
									},
									{
										"Name": "RequestedDeliveryDate",
										"Description": "The date that the Customer/Customer Account requested delivery of the items.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "RequestedDeliveryDate"
										}
									},
									{
										"Name": "CommittedDeliveryDate",
										"Description": "The date committed to the Customer/Customer Account for delivery of the items.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CommittedDeliveryDate"
										}
									},
									{
										"Name": "ActualDeliveryTimestamp",
										"Description": "The actual timestamp of delivery of the items to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ActualDeliveryTimestamp"
										}
									},
									{
										"Name": "DeliveryConfirmationTimestamp",
										"Description": "The timestamp that confirmation of the delivery or Shipment was made to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DeliveryConfirmationTimestamp"
										}
									},
									{
										"Name": "TransactionAmount",
										"Description": "The amount associated with the transaction.\n\nEx:\nRefund = 'amount'\nCredit = 'amount'",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionAmount"
										}
									},
									{
										"Name": "ShipmentToName",
										"Description": "The name of the ship-to party.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipmentToName"
										}
									},
									{
										"Name": "ShipmentToLocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipmentToLocationId"
										}
									},
									{
										"Name": "TransactionConfirmationNumber",
										"Description": "The transaction confirmation number provided to confirm that the transaction was executed.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionConfirmationNumber"
										}
									},
									{
										"Name": "IdentificationCheckedIndicator",
										"Description": "Indicates whether the individual's identification was checked for any requirements for the transaction. For example: The individual is 21 years of age or older in order to purchase alcohol products.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "IdentificationCheckedIndicator"
										}
									},
									{
										"Name": "IdentificationId",
										"Description": "The unique identifier of the identification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "IdentificationId"
										}
									},
									{
										"Name": "TotalRetailPriceAmount",
										"Description": "The total list price value of the Transaction products = (list price per unit product price)x(quantity ordered) for each line item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalRetailPriceAmount"
										}
									},
									{
										"Name": "TotalAdjustmentPercentage",
										"Description": "The total percentage of adjustment(s) applied to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalAdjustmentPercentage"
										}
									},
									{
										"Name": "TotalAdjustmentAmount",
										"Description": "The total amount of adjustments applied to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalAdjustmentAmount"
										}
									},
									{
										"Name": "TotalTransactionSalesPriceAmount",
										"Description": "The total actual price value of the transaction item(s) = (actual selling price per unit product price)x(quantity) for each line item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalTransactionSalesPriceAmount"
										}
									},
									{
										"Name": "TotalShippingChargeAmount",
										"Description": "The total amount of shipping charge associated with the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalShippingChargeAmount"
										}
									},
									{
										"Name": "TransactionTotalTaxAmount",
										"Description": "The total amount of all taxes applied to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTotalTaxAmount"
										}
									},
									{
										"Name": "TransactionRoundingAmount",
										"Description": "The amount of rounding applied to the transaction. This is typically done when the payment method is cash and the total invoice amount is rounded to an amount that is payable using legal tender. (e.g. 1 cent coin is no longer in legal circulation.)",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionRoundingAmount"
										}
									},
									{
										"Name": "TransactionTotalInvoicedAmount",
										"Description": "The total invoiced amount to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTotalInvoicedAmount"
										}
									},
									{
										"Name": "TotalCommissionsPayableAmount",
										"Description": "The total amount of commissions payable and due in regard to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalCommissionsPayableAmount"
										}
									},
									{
										"Name": "SplitCommissionsIndicator",
										"Description": "Indicates that the commissions are to be split between two or more employees.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SplitCommissionsIndicator"
										}
									},
									{
										"Name": "RequestedShipmentCarrierName",
										"Description": "The name of the Carrier for the Shipment requested by the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "RequestedShipmentCarrierName"
										}
									},
									{
										"Name": "AlternateCarrierAcceptableIndicator",
										"Description": "Indicates that an alternate Carrier of the Shipment would be acceptable to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "AlternateCarrierAcceptableIndicator"
										}
									},
									{
										"Name": "ShipCompleteIndicator",
										"Description": "Indicates that the Transaction item(s) are only to be shipped when complete - no partial shipments.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipCompleteIndicator"
										}
									},
									{
										"Name": "AcknowledgementRequiredIndicator",
										"Description": "Indicates that an acknowledgement  to the Customer/Customer Account is required for the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "AcknowledgementRequiredIndicator"
										}
									},
									{
										"Name": "ExpediteTransactionIndicator",
										"Description": "Indicates that the Transaction is to be expedited.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ExpediteTransactionIndicator"
										}
									},
									{
										"Name": "DropShipmentIndicator",
										"Description": "Indicates that the Transaction item(s) are to be drop shipped.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DropShipmentIndicator"
										}
									},
									{
										"Name": "ActualShipmentCarrierName",
										"Description": "The Carrier of the Shipment.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ActualShipmentCarrierName"
										}
									},
									{
										"Name": "TotalWeight",
										"Description": "The total weight of the Transaction item(s).",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalWeight"
										}
									},
									{
										"Name": "TotalFreightChargeAmount",
										"Description": "The total freight charges amount.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalFreightChargeAmount"
										}
									},
									{
										"Name": "UnitOfMeasureId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "UnitOfMeasureId"
										}
									},
									{
										"Name": "EarliestDeliveryWindowTimestamp",
										"Description": "The earliest timestamp that the transaction should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "EarliestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "LatestDeliveryWindowTimestamp",
										"Description": "The latest timestamp that the transaction should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "LatestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "DeliveryInstructions",
										"Description": "Instructions related to the delivery of the Transaction item(s).",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DeliveryInstructions"
										}
									},
									{
										"Name": "CustomerCreditCheckNote",
										"Description": "A note, comment or additional information regarding the Transaction credit check.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerCreditCheckNote"
										}
									},
									{
										"Name": "MessageToCustomer",
										"Description": "A message to the Customer/Customer Account regarding the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "MessageToCustomer"
										}
									},
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerId"
										}
									},
									{
										"Name": "CustomerAccountId",
										"Description": "The unique identifier of a Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerAccountId"
										}
									},
									{
										"Name": "PurchasingChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PurchasingChannelId"
										}
									},
									{
										"Name": "SalesChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SalesChannelId"
										}
									},
									{
										"Name": "DistributionChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DistributionChannelId"
										}
									},
									{
										"Name": "MarketingEventId",
										"Description": "The unique identifier of a Marketing Event.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "MarketingEventId"
										}
									},
									{
										"Name": "AdvertisingEventId",
										"Description": "The unique identifier of an Advertising Event.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "AdvertisingEventId"
										}
									},
									{
										"Name": "PromotionId",
										"Description": "The unique identifier of a Promotion.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PromotionId"
										}
									},
									{
										"Name": "TransactionTypeId",
										"Description": "The unique identifier of a Transaction Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTypeId"
										}
									},
									{
										"Name": "BillingCycleId",
										"Description": "The unique identifier of a Billing Cycle.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "BillingCycleId"
										}
									},
									{
										"Name": "MerchantId",
										"Description": "The unique identifier of a Merchant.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "MerchantId"
										}
									},
									{
										"Name": "CustomerIdentificationMethodId",
										"Description": "The unique identifier of a customer identification method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerIdentificationMethodId"
										}
									},
									{
										"Name": "TransactionClassificationId",
										"Description": "The unique identifier of an Transaction Classification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionClassificationId"
										}
									},
									{
										"Name": "TransactionProcessingStatusId",
										"Description": "The unique identifier of a Transaction Processing Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionProcessingStatusId"
										}
									},
									{
										"Name": "IsoCurrencyCode",
										"Description": "The ISO 4217 currency code.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 3,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "IsoCurrencyCode"
										}
									},
									{
										"Name": "TransactionExecutionMethodId",
										"Description": "The unique identifier of a Transaction Execution Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionExecutionMethodId"
										}
									},
									{
										"Name": "TransactionPriorityId",
										"Description": "The unique identifier of a Transaction Priority.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionPriorityId"
										}
									},
									{
										"Name": "TransactionTaxStatusId",
										"Description": "The unique identifier of a Transaction Tax Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTaxStatusId"
										}
									},
									{
										"Name": "WebPageUrl",
										"Description": "The unique address of any Web document.\n\nThe URL consists of:\nType of file (ex: http://)\nDomain name (ex: www. name.com)\nPath or directory to file (ex: /notes/internet)\nName of file (...name.html)",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2083,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "WebPageUrl"
										}
									},
									{
										"Name": "SessionId",
										"Description": "The unique identifier of a Session.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SessionId"
										}
									},
									{
										"Name": "WorkstationSessionId",
										"Description": "The unique identifier of a Workstation Session.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "WorkstationSessionId"
										}
									},
									{
										"Name": "PointOfSaleId",
										"Description": "The unique identifier of a POS.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PointOfSaleId"
										}
									},
									{
										"Name": "StoreId",
										"Description": "The unique identifier of a Store.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "StoreId"
										}
									},
									{
										"Name": "WarehouseId",
										"Description": "The unique identifier of a Warehouse.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "WarehouseId"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "TransactionNote",
										"Description": "A note, comment or additional information regarding the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionNote"
										}
									},
									{
										"Name": "ShipmentMethodId",
										"Description": "The unique identifier of a Shipment Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipmentMethodId"
										}
									},
									{
										"Name": "DeviceId",
										"Description": "The unique identifier of a Device.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DeviceId"
										}
									},
									{
										"Name": "SoftwareProductId",
										"Description": "The unique identifier of a software product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SoftwareProductId"
										}
									},
									{
										"Name": "SoftwareProductVersionNumber",
										"Description": "The version number of the software product.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SoftwareProductVersionNumber"
										}
									},
									{
										"Name": "ApprovedByEmployeeId",
										"Description": "The unique identifier of an Employee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ApprovedByEmployeeId"
										}
									},
									{
										"Name": "PromotionOfferId",
										"Description": "The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PromotionOfferId"
										}
									},
									{
										"Name": "LoyaltyCardId",
										"Description": "The unique identifier of a Loyalty Card.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "LoyaltyCardId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Transaction",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/Transaction",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"TransactionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionId\"},\"TransactionInitiatedTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionInitiatedTimestamp\"},\"TransactionCompletedTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionCompletedTimestamp\"},\"TransactionReceivedTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionReceivedTimestamp\"},\"TransactionEntryTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionEntryTimestamp\"},\"TransactionConfirmationTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationTimestamp\"},\"CreditCheckTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CreditCheckTimestamp\"},\"RequestedDeliveryDate\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedDeliveryDate\"},\"CommittedDeliveryDate\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CommittedDeliveryDate\"},\"ActualDeliveryTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualDeliveryTimestamp\"},\"DeliveryConfirmationTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryConfirmationTimestamp\"},\"TransactionAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionAmount\"},\"ShipmentToName\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToName\"},\"ShipmentToLocationId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToLocationId\"},\"TransactionConfirmationNumber\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationNumber\"},\"IdentificationCheckedIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationCheckedIndicator\"},\"IdentificationId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationId\"},\"TotalRetailPriceAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalRetailPriceAmount\"},\"TotalAdjustmentPercentage\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentPercentage\"},\"TotalAdjustmentAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentAmount\"},\"TotalTransactionSalesPriceAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalTransactionSalesPriceAmount\"},\"TotalShippingChargeAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalShippingChargeAmount\"},\"TransactionTotalTaxAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalTaxAmount\"},\"TransactionRoundingAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionRoundingAmount\"},\"TransactionTotalInvoicedAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalInvoicedAmount\"},\"TotalCommissionsPayableAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalCommissionsPayableAmount\"},\"SplitCommissionsIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SplitCommissionsIndicator\"},\"RequestedShipmentCarrierName\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedShipmentCarrierName\"},\"AlternateCarrierAcceptableIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AlternateCarrierAcceptableIndicator\"},\"ShipCompleteIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipCompleteIndicator\"},\"AcknowledgementRequiredIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AcknowledgementRequiredIndicator\"},\"ExpediteTransactionIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ExpediteTransactionIndicator\"},\"DropShipmentIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DropShipmentIndicator\"},\"ActualShipmentCarrierName\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualShipmentCarrierName\"},\"TotalWeight\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalWeight\"},\"TotalFreightChargeAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalFreightChargeAmount\"},\"UnitOfMeasureId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"UnitOfMeasureId\"},\"EarliestDeliveryWindowTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"LatestDeliveryWindowTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"DeliveryInstructions\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryInstructions\"},\"CustomerCreditCheckNote\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerCreditCheckNote\"},\"MessageToCustomer\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MessageToCustomer\"},\"CustomerId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerId\"},\"CustomerAccountId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerAccountId\"},\"PurchasingChannelId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PurchasingChannelId\"},\"SalesChannelId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SalesChannelId\"},\"DistributionChannelId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DistributionChannelId\"},\"MarketingEventId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MarketingEventId\"},\"AdvertisingEventId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AdvertisingEventId\"},\"PromotionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionId\"},\"TransactionTypeId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTypeId\"},\"BillingCycleId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"BillingCycleId\"},\"MerchantId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MerchantId\"},\"CustomerIdentificationMethodId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerIdentificationMethodId\"},\"TransactionClassificationId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionClassificationId\"},\"TransactionProcessingStatusId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionProcessingStatusId\"},\"IsoCurrencyCode\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IsoCurrencyCode\"},\"TransactionExecutionMethodId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionExecutionMethodId\"},\"TransactionPriorityId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionPriorityId\"},\"TransactionTaxStatusId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTaxStatusId\"},\"WebPageUrl\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WebPageUrl\"},\"SessionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SessionId\"},\"WorkstationSessionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WorkstationSessionId\"},\"PointOfSaleId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PointOfSaleId\"},\"StoreId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"StoreId\"},\"WarehouseId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WarehouseId\"},\"ResponsibilityCenterId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ResponsibilityCenterId\"},\"TransactionNote\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionNote\"},\"ShipmentMethodId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentMethodId\"},\"DeviceId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeviceId\"},\"SoftwareProductId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductId\"},\"SoftwareProductVersionNumber\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductVersionNumber\"},\"ApprovedByEmployeeId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ApprovedByEmployeeId\"},\"PromotionOfferId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionOfferId\"},\"LoyaltyCardId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LoyaltyCardId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Transaction\",\"path\":\"Transaction.cdm.json/Transaction\"},\"description\":\"The lowest level of executable work or customer activity.\\n\\nA transaction consists of one or more discrete events.\",\"primaryKey\":[\"TransactionId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Transaction.\",\"isNullable\":false,\"name\":\"TransactionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionInitiatedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp the transaction was initiated.\",\"isNullable\":true,\"name\":\"TransactionInitiatedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionCompletedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the transaction was completed or closed.\",\"isNullable\":true,\"name\":\"TransactionCompletedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionReceivedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Transaction was received.\",\"isNullable\":true,\"name\":\"TransactionReceivedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionEntryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Transaction was entered into the appropriate system for processing.\",\"isNullable\":true,\"name\":\"TransactionEntryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Transaction was confirmed to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"TransactionConfirmationTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CreditCheckTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Customer/Customer Account had a credit check in regard to the Transaction amount.\",\"isNullable\":true,\"name\":\"CreditCheckTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedDeliveryDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Customer/Customer Account requested delivery of the items.\",\"isNullable\":true,\"name\":\"RequestedDeliveryDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CommittedDeliveryDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date committed to the Customer/Customer Account for delivery of the items.\",\"isNullable\":true,\"name\":\"CommittedDeliveryDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualDeliveryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual timestamp of delivery of the items to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"ActualDeliveryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryConfirmationTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that confirmation of the delivery or Shipment was made to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"DeliveryConfirmationTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount associated with the transaction.\\n\\nEx:\\nRefund = 'amount'\\nCredit = 'amount'\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the ship-to party.\",\"isNullable\":true,\"name\":\"ShipmentToName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToLocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"ShipmentToLocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The transaction confirmation number provided to confirm that the transaction was executed.\",\"isNullable\":true,\"name\":\"TransactionConfirmationNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationCheckedIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the individual's identification was checked for any requirements for the transaction. For example: The individual is 21 years of age or older in order to purchase alcohol products.\",\"isNullable\":true,\"name\":\"IdentificationCheckedIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the identification.\",\"isNullable\":true,\"name\":\"IdentificationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalRetailPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total list price value of the Transaction products = (list price per unit product price)x(quantity ordered) for each line item.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalRetailPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentPercentage\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total percentage of adjustment(s) applied to the Transaction.\",\"isNullable\":true,\"scale\":8,\"name\":\"TotalAdjustmentPercentage\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of adjustments applied to the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalAdjustmentAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalTransactionSalesPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total actual price value of the transaction item(s) = (actual selling price per unit product price)x(quantity) for each line item.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalTransactionSalesPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalShippingChargeAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of shipping charge associated with the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalShippingChargeAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalTaxAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of all taxes applied to the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionTotalTaxAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionRoundingAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount of rounding applied to the transaction. This is typically done when the payment method is cash and the total invoice amount is rounded to an amount that is payable using legal tender. (e.g. 1 cent coin is no longer in legal circulation.)\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionRoundingAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalInvoicedAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total invoiced amount to the Customer/Customer Account.\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionTotalInvoicedAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalCommissionsPayableAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of commissions payable and due in regard to the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalCommissionsPayableAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SplitCommissionsIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the commissions are to be split between two or more employees.\",\"isNullable\":true,\"name\":\"SplitCommissionsIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedShipmentCarrierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Carrier for the Shipment requested by the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"RequestedShipmentCarrierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AlternateCarrierAcceptableIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that an alternate Carrier of the Shipment would be acceptable to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"AlternateCarrierAcceptableIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipCompleteIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Transaction item(s) are only to be shipped when complete - no partial shipments.\",\"isNullable\":true,\"name\":\"ShipCompleteIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AcknowledgementRequiredIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that an acknowledgement  to the Customer/Customer Account is required for the Transaction.\",\"isNullable\":true,\"name\":\"AcknowledgementRequiredIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ExpediteTransactionIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Transaction is to be expedited.\",\"isNullable\":true,\"name\":\"ExpediteTransactionIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DropShipmentIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Transaction item(s) are to be drop shipped.\",\"isNullable\":true,\"name\":\"DropShipmentIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualShipmentCarrierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The Carrier of the Shipment.\",\"isNullable\":true,\"name\":\"ActualShipmentCarrierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total weight of the Transaction item(s).\",\"isNullable\":true,\"scale\":8,\"name\":\"TotalWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalFreightChargeAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total freight charges amount.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalFreightChargeAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"UnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"UnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest timestamp that the transaction should be made available for delivery.\",\"isNullable\":true,\"name\":\"EarliestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest timestamp that the transaction should be made available for delivery.\",\"isNullable\":true,\"name\":\"LatestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Instructions related to the delivery of the Transaction item(s).\",\"isNullable\":true,\"name\":\"DeliveryInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerCreditCheckNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Transaction credit check.\",\"isNullable\":true,\"name\":\"CustomerCreditCheckNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MessageToCustomer\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A message to the Customer/Customer Account regarding the Transaction.\",\"isNullable\":true,\"name\":\"MessageToCustomer\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":true,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerAccountId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer Account.\",\"isNullable\":true,\"name\":\"CustomerAccountId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PurchasingChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"PurchasingChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SalesChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"SalesChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DistributionChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"DistributionChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MarketingEventId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Marketing Event.\",\"isNullable\":true,\"name\":\"MarketingEventId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AdvertisingEventId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Advertising Event.\",\"isNullable\":true,\"name\":\"AdvertisingEventId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Promotion.\",\"isNullable\":true,\"name\":\"PromotionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Type.\",\"isNullable\":true,\"name\":\"TransactionTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"BillingCycleId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Billing Cycle.\",\"isNullable\":true,\"name\":\"BillingCycleId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MerchantId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Merchant.\",\"isNullable\":true,\"name\":\"MerchantId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerIdentificationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a customer identification method.\",\"isNullable\":true,\"name\":\"CustomerIdentificationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionClassificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Transaction Classification.\",\"isNullable\":true,\"name\":\"TransactionClassificationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionProcessingStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Processing Status.\",\"isNullable\":true,\"name\":\"TransactionProcessingStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IsoCurrencyCode\"},\"dataType\":\"string\",\"dataTypeLength\":3,\"description\":\"The ISO 4217 currency code.\",\"isNullable\":true,\"name\":\"IsoCurrencyCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionExecutionMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Execution Type.\",\"isNullable\":true,\"name\":\"TransactionExecutionMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionPriorityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Priority.\",\"isNullable\":true,\"name\":\"TransactionPriorityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTaxStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Tax Status.\",\"isNullable\":true,\"name\":\"TransactionTaxStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WebPageUrl\"},\"dataType\":\"string\",\"dataTypeLength\":2083,\"description\":\"The unique address of any Web document.\\n\\nThe URL consists of:\\nType of file (ex: http://)\\nDomain name (ex: www. name.com)\\nPath or directory to file (ex: /notes/internet)\\nName of file (...name.html)\",\"isNullable\":true,\"name\":\"WebPageUrl\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SessionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Session.\",\"isNullable\":true,\"name\":\"SessionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WorkstationSessionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Workstation Session.\",\"isNullable\":true,\"name\":\"WorkstationSessionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PointOfSaleId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a POS.\",\"isNullable\":true,\"name\":\"PointOfSaleId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"StoreId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Store.\",\"isNullable\":true,\"name\":\"StoreId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WarehouseId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Warehouse.\",\"isNullable\":true,\"name\":\"WarehouseId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Transaction.\",\"isNullable\":true,\"name\":\"TransactionNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Shipment Method.\",\"isNullable\":true,\"name\":\"ShipmentMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeviceId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Device.\",\"isNullable\":true,\"name\":\"DeviceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a software product.\",\"isNullable\":true,\"name\":\"SoftwareProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductVersionNumber\"},\"dataType\":\"integer\",\"description\":\"The version number of the software product.\",\"isNullable\":true,\"name\":\"SoftwareProductVersionNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ApprovedByEmployeeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employee.\",\"isNullable\":true,\"name\":\"ApprovedByEmployeeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionOfferId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.\",\"isNullable\":true,\"name\":\"PromotionOfferId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LoyaltyCardId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Loyalty Card.\",\"isNullable\":true,\"name\":\"LoyaltyCardId\"}]}}}",
								"Description": "The lowest level of executable work or customer activity.\n\nA transaction consists of one or more discrete events.",
								"DisplayFolderInfo": "{\"name\":\"Transaction\",\"colorCode\":\"#F775C5\"}",
								"PrimaryKeys": "TransactionId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "TransactionLineItem",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Description": "The components of an Transaction broken down by Product and Quantity, one per line item.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "TransactionId",
										"Description": "The unique identifier of a Transaction.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionId"
										}
									},
									{
										"Name": "TransactionLineItemId",
										"Description": "The unique identifier that identifies the Transaction Line Item.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionLineItemId"
										}
									},
									{
										"Name": "TransactionLineItemStartTimestamp",
										"Description": "The timestamp the transaction line item was started.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionLineItemStartTimestamp"
										}
									},
									{
										"Name": "TransactionLineItemCompletedTimestamp",
										"Description": "The timestamp that the transaction line item was completed or closed.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionLineItemCompletedTimestamp"
										}
									},
									{
										"Name": "ProductId",
										"Description": "The unique identifier of a Product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ProductId"
										}
									},
									{
										"Name": "ItemSku",
										"Description": "The Stock Keeping Unit identifier, which is typically used for inventory-related activities.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 20,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ItemSku"
										}
									},
									{
										"Name": "UniversalProductCode",
										"Description": "A system that identifies products by type and by manufacturer.  \n\nA UPC consists of eleven (11) digits.  Six (6) indicate the Manufacturer and five (5) digits describe the product.\n\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \n\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 12,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "UniversalProductCode"
										}
									},
									{
										"Name": "Quantity",
										"Description": "The quantity of Product ordered on the transaction line item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "Quantity"
										}
									},
									{
										"Name": "UnitOfMeasureId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "UnitOfMeasureId"
										}
									},
									{
										"Name": "PreorderIndicator",
										"Description": "The quantity of Line Items returned.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PreorderIndicator"
										}
									},
									{
										"Name": "ProductListPriceAmount",
										"Description": "The current per unit list price of the Transaction Line Item products.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ProductListPriceAmount"
										}
									},
									{
										"Name": "TransactionProductPriceAmount",
										"Description": "The price of the product as applicable to the Transaction Line Item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionProductPriceAmount"
										}
									},
									{
										"Name": "IsoCurrencyCode",
										"Description": "The ISO 4217 currency code.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 3,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "IsoCurrencyCode"
										}
									},
									{
										"Name": "FreeSampleIndicator",
										"Description": "Indicates that product was provided as a free sample.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "FreeSampleIndicator"
										}
									},
									{
										"Name": "TotalTransactionLineItemAmount",
										"Description": "The total amount of line item charges related to the quantity of products sold at the actual selling price less rebates and discounts.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TotalTransactionLineItemAmount"
										}
									},
									{
										"Name": "TotalTransactionSalesPriceAmount",
										"Description": "The total amount of line item charges including all rebates and discount and taxes.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TotalTransactionSalesPriceAmount"
										}
									},
									{
										"Name": "TransactionLineEntryMethodId",
										"Description": "The unique identifier of a Transaction Line Entry Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionLineEntryMethodId"
										}
									},
									{
										"Name": "TransactionLineItemScanTimestamp",
										"Description": "The timestamp the transaction line item was scanned.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionLineItemScanTimestamp"
										}
									},
									{
										"Name": "PosDeviceId",
										"Description": "The unique identifier of a POS Device.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PosDeviceId"
										}
									},
									{
										"Name": "ScaleUsedIndicator",
										"Description": "Indicates that the scale was used to determine the weight of the item.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ScaleUsedIndicator"
										}
									},
									{
										"Name": "ScaleMeasuredItemWeight",
										"Description": "The weight of the line item on the scale for pricing purposes.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ScaleMeasuredItemWeight"
										}
									},
									{
										"Name": "WeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "WeightUomId"
										}
									},
									{
										"Name": "ScaleQuantity",
										"Description": "The quantity of Product ordered placed on the scale.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ScaleQuantity"
										}
									},
									{
										"Name": "TransactionLineVolume",
										"Description": "The volume of the line item for pricing purposes.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionLineVolume"
										}
									},
									{
										"Name": "VolumeUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "VolumeUomId"
										}
									},
									{
										"Name": "ProductPriceOverrideIndicator",
										"Description": "Indicates that the standard product price amount from the price list has been overridden.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ProductPriceOverrideIndicator"
										}
									},
									{
										"Name": "ProductPriceAdjustmentAmount",
										"Description": "The per product unit adjustment amount applied to each product unit.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ProductPriceAdjustmentAmount"
										}
									},
									{
										"Name": "ProductPriceAdjustmentPercentage",
										"Description": "The per product unit adjustment percentage applied to each product unit.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ProductPriceAdjustmentPercentage"
										}
									},
									{
										"Name": "TotalLineItemAdjustmentAmount",
										"Description": "The amount of adjustment for all line items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TotalLineItemAdjustmentAmount"
										}
									},
									{
										"Name": "LineItemNote",
										"Description": "A note, comment or additional information regarding the Line Item.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "LineItemNote"
										}
									},
									{
										"Name": "QuantityBooked",
										"Description": "The quantity of Product booked.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "QuantityBooked"
										}
									},
									{
										"Name": "QuantityBilled",
										"Description": "The quantity billed.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "QuantityBilled"
										}
									},
									{
										"Name": "QuantityBacklog",
										"Description": "The quantity on backlog.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "QuantityBacklog"
										}
									},
									{
										"Name": "AcceptedQuantity",
										"Description": "The quantity of Line Item products accepted.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "AcceptedQuantity"
										}
									},
									{
										"Name": "QuantityCancelled",
										"Description": "The quantity of Line Items cancelled.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "QuantityCancelled"
										}
									},
									{
										"Name": "QuantityReturned",
										"Description": "The quantity of Line Items returned.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "QuantityReturned"
										}
									},
									{
										"Name": "BookedTimestamp",
										"Description": "The booked date of the Line Items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "BookedTimestamp"
										}
									},
									{
										"Name": "BilledTimestamp",
										"Description": "The billed date of the Line Items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "BilledTimestamp"
										}
									},
									{
										"Name": "CancelledTimestamp",
										"Description": "The date  and time that Line Items were cancelled.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "CancelledTimestamp"
										}
									},
									{
										"Name": "ReturnedTimestamp",
										"Description": "The date that Line Items were returned.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ReturnedTimestamp"
										}
									},
									{
										"Name": "CommittedShipmentTimestamp",
										"Description": "The timestamp committed for shipment of the Line Item.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "CommittedShipmentTimestamp"
										}
									},
									{
										"Name": "RequestedDeliveryTimestamp",
										"Description": "The timestamp for delivery of the Line Item requested by the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "RequestedDeliveryTimestamp"
										}
									},
									{
										"Name": "CommittedDeliveryTimestamp",
										"Description": "The timestamp committed for delivery of the Line Item.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "CommittedDeliveryTimestamp"
										}
									},
									{
										"Name": "CommittedAvailableForPickupTimestamp",
										"Description": "The timestamp committed for the Line Item to be available for pickup.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "CommittedAvailableForPickupTimestamp"
										}
									},
									{
										"Name": "PlannedPickTimestamp",
										"Description": "The planned inventory pick timestamp for the Line Items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PlannedPickTimestamp"
										}
									},
									{
										"Name": "ActualPickTimestamp",
										"Description": "The actual inventory pick timestamp for the Line Items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ActualPickTimestamp"
										}
									},
									{
										"Name": "PlannedShipmentTimestamp",
										"Description": "The planned shipment timestamp of the Line Items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PlannedShipmentTimestamp"
										}
									},
									{
										"Name": "ActualShipmentTimestamp",
										"Description": "The actual shipment timestamp of the Line Items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ActualShipmentTimestamp"
										}
									},
									{
										"Name": "PlannedDeliveryTimestamp",
										"Description": "The planned delivery timestamp of the Line Items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PlannedDeliveryTimestamp"
										}
									},
									{
										"Name": "ActualDeliveryTimestamp",
										"Description": "The actual delivery timestamp of the line items.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ActualDeliveryTimestamp"
										}
									},
									{
										"Name": "DeliveryConfirmationTimestamp",
										"Description": "The timestamp that the shipment/delivery confirmation notice was sent to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "DeliveryConfirmationTimestamp"
										}
									},
									{
										"Name": "ShipmentChargeAmount",
										"Description": "The amount the customer has been charged for shipping.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ShipmentChargeAmount"
										}
									},
									{
										"Name": "ShipmentCostAmount",
										"Description": "The amount that the shipping cost.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ShipmentCostAmount"
										}
									},
									{
										"Name": "PickPackageCostAmount",
										"Description": "The cost associated with picking a packing the item. This amount is normally included in the overall shipment cost.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PickPackageCostAmount"
										}
									},
									{
										"Name": "ShippingLocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ShippingLocationId"
										}
									},
									{
										"Name": "ShipmentMethodId",
										"Description": "The unique identifier of a Shipment Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ShipmentMethodId"
										}
									},
									{
										"Name": "DropShipLineItemIndicator",
										"Description": "Indicates that the Line Item(s) are to be drop shipped.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "DropShipLineItemIndicator"
										}
									},
									{
										"Name": "WaybillNumber",
										"Description": "The shipment waybill number.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "WaybillNumber"
										}
									},
									{
										"Name": "TareWeight",
										"Description": "The weight of the line items excluding packaging.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TareWeight"
										}
									},
									{
										"Name": "NetWeight",
										"Description": "The weight of the line items including packaging.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "NetWeight"
										}
									},
									{
										"Name": "ShipCompleteIndicator",
										"Description": "Indicates that the Transaction item(s) are only to be shipped when complete - no partial shipments.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ShipCompleteIndicator"
										}
									},
									{
										"Name": "EarliestDeliveryWindowTimestamp",
										"Description": "The earliest timestamp that the transaction should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "EarliestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "LatestDeliveryWindowTimestamp",
										"Description": "The latest timestamp that the transaction should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "LatestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "ReturnOfTransactionId",
										"Description": "The unique identifier of a Transaction.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ReturnOfTransactionId"
										}
									},
									{
										"Name": "ReturnOfTransactionLineItemId",
										"Description": "The unique identifier that identifies the Transaction Line Item.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ReturnOfTransactionLineItemId"
										}
									},
									{
										"Name": "ReturnToStockIndicator",
										"Description": "Indicates that the Line Item(s) were returned to stock.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ReturnToStockIndicator"
										}
									},
									{
										"Name": "ReturnToStoreIndicator",
										"Description": "Indicates that the Line Item(s) were returned to the store from which they were purchased.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ReturnToStoreIndicator"
										}
									},
									{
										"Name": "ApprovedByEmployeeId",
										"Description": "The unique identifier of an Employee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "ApprovedByEmployeeId"
										}
									},
									{
										"Name": "SalesChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "SalesChannelId"
										}
									},
									{
										"Name": "DistributionChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "DistributionChannelId"
										}
									},
									{
										"Name": "TransactionLineItemTypeId",
										"Description": "The unique identifier of a Transaction Line Item Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "TransactionLineItemTypeId"
										}
									},
									{
										"Name": "FuelPumpId",
										"Description": "The unique identifier of a Fuel Pump.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "FuelPumpId"
										}
									},
									{
										"Name": "BuyClassId",
										"Description": "The unique identifier of a Buy Class.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "BuyClassId"
										}
									},
									{
										"Name": "PromotionId",
										"Description": "The unique identifier of a Promotion.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PromotionId"
										}
									},
									{
										"Name": "PharmacyId",
										"Description": "The number assigned by the NABP to identify the pharmacy",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PharmacyId"
										}
									},
									{
										"Name": "PharmacyTransactionId",
										"Description": "The number assigned by the Pharmacy to identify prescription fulfillment.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PharmacyTransactionId"
										}
									},
									{
										"Name": "PromotionOfferId",
										"Description": "The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TransactionLineItem.cdm.json/TransactionLineItem",
											"Name": "PromotionOfferId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/TransactionLineItem",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/RetailTemplateDB/TransactionLineItem",
									"Properties": {
										"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"TransactionId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionId\"},\"TransactionLineItemId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemId\"},\"TransactionLineItemStartTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemStartTimestamp\"},\"TransactionLineItemCompletedTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemCompletedTimestamp\"},\"ProductId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductId\"},\"ItemSku\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ItemSku\"},\"UniversalProductCode\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"UniversalProductCode\"},\"Quantity\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"Quantity\"},\"UnitOfMeasureId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"UnitOfMeasureId\"},\"PreorderIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PreorderIndicator\"},\"ProductListPriceAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductListPriceAmount\"},\"TransactionProductPriceAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionProductPriceAmount\"},\"IsoCurrencyCode\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"IsoCurrencyCode\"},\"FreeSampleIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"FreeSampleIndicator\"},\"TotalTransactionLineItemAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TotalTransactionLineItemAmount\"},\"TotalTransactionSalesPriceAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TotalTransactionSalesPriceAmount\"},\"TransactionLineEntryMethodId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineEntryMethodId\"},\"TransactionLineItemScanTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemScanTimestamp\"},\"PosDeviceId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PosDeviceId\"},\"ScaleUsedIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ScaleUsedIndicator\"},\"ScaleMeasuredItemWeight\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ScaleMeasuredItemWeight\"},\"WeightUomId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"WeightUomId\"},\"ScaleQuantity\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ScaleQuantity\"},\"TransactionLineVolume\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineVolume\"},\"VolumeUomId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"VolumeUomId\"},\"ProductPriceOverrideIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductPriceOverrideIndicator\"},\"ProductPriceAdjustmentAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductPriceAdjustmentAmount\"},\"ProductPriceAdjustmentPercentage\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductPriceAdjustmentPercentage\"},\"TotalLineItemAdjustmentAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TotalLineItemAdjustmentAmount\"},\"LineItemNote\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"LineItemNote\"},\"QuantityBooked\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityBooked\"},\"QuantityBilled\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityBilled\"},\"QuantityBacklog\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityBacklog\"},\"AcceptedQuantity\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"AcceptedQuantity\"},\"QuantityCancelled\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityCancelled\"},\"QuantityReturned\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityReturned\"},\"BookedTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"BookedTimestamp\"},\"BilledTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"BilledTimestamp\"},\"CancelledTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CancelledTimestamp\"},\"ReturnedTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnedTimestamp\"},\"CommittedShipmentTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CommittedShipmentTimestamp\"},\"RequestedDeliveryTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"RequestedDeliveryTimestamp\"},\"CommittedDeliveryTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CommittedDeliveryTimestamp\"},\"CommittedAvailableForPickupTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CommittedAvailableForPickupTimestamp\"},\"PlannedPickTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PlannedPickTimestamp\"},\"ActualPickTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ActualPickTimestamp\"},\"PlannedShipmentTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PlannedShipmentTimestamp\"},\"ActualShipmentTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ActualShipmentTimestamp\"},\"PlannedDeliveryTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PlannedDeliveryTimestamp\"},\"ActualDeliveryTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ActualDeliveryTimestamp\"},\"DeliveryConfirmationTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"DeliveryConfirmationTimestamp\"},\"ShipmentChargeAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipmentChargeAmount\"},\"ShipmentCostAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipmentCostAmount\"},\"PickPackageCostAmount\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PickPackageCostAmount\"},\"ShippingLocationId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShippingLocationId\"},\"ShipmentMethodId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipmentMethodId\"},\"DropShipLineItemIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"DropShipLineItemIndicator\"},\"WaybillNumber\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"WaybillNumber\"},\"TareWeight\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TareWeight\"},\"NetWeight\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"NetWeight\"},\"ShipCompleteIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipCompleteIndicator\"},\"EarliestDeliveryWindowTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"LatestDeliveryWindowTimestamp\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"ReturnOfTransactionId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnOfTransactionId\"},\"ReturnOfTransactionLineItemId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnOfTransactionLineItemId\"},\"ReturnToStockIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnToStockIndicator\"},\"ReturnToStoreIndicator\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnToStoreIndicator\"},\"ApprovedByEmployeeId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ApprovedByEmployeeId\"},\"SalesChannelId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"SalesChannelId\"},\"DistributionChannelId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"DistributionChannelId\"},\"TransactionLineItemTypeId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemTypeId\"},\"FuelPumpId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"FuelPumpId\"},\"BuyClassId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"BuyClassId\"},\"PromotionId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PromotionId\"},\"PharmacyId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PharmacyId\"},\"PharmacyTransactionId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PharmacyTransactionId\"},\"PromotionOfferId\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PromotionOfferId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"TransactionLineItem\",\"path\":\"TransactionLineItem.cdm.json/TransactionLineItem\"},\"description\":\"The components of an Transaction broken down by Product and Quantity, one per line item.\",\"primaryKey\":[\"TransactionId\",\"TransactionLineItemId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Transaction.\",\"isNullable\":false,\"name\":\"TransactionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier that identifies the Transaction Line Item.\",\"isNullable\":false,\"name\":\"TransactionLineItemId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp the transaction line item was started.\",\"isNullable\":true,\"name\":\"TransactionLineItemStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemCompletedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the transaction line item was completed or closed.\",\"isNullable\":true,\"name\":\"TransactionLineItemCompletedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Product.\",\"isNullable\":true,\"name\":\"ProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ItemSku\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The Stock Keeping Unit identifier, which is typically used for inventory-related activities.\",\"isNullable\":true,\"name\":\"ItemSku\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"UniversalProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":12,\"description\":\"A system that identifies products by type and by manufacturer.  \\n\\nA UPC consists of eleven (11) digits.  Six (6) indicate the Manufacturer and five (5) digits describe the product.\\n\\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \\n\\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.\",\"isNullable\":true,\"scale\":0,\"name\":\"UniversalProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"Quantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The quantity of Product ordered on the transaction line item.\",\"isNullable\":true,\"scale\":2,\"name\":\"Quantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"UnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"UnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PreorderIndicator\"},\"dataType\":\"boolean\",\"description\":\"The quantity of Line Items returned.\",\"isNullable\":true,\"name\":\"PreorderIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductListPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The current per unit list price of the Transaction Line Item products.\",\"isNullable\":true,\"scale\":2,\"name\":\"ProductListPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionProductPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The price of the product as applicable to the Transaction Line Item.\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionProductPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"IsoCurrencyCode\"},\"dataType\":\"string\",\"dataTypeLength\":3,\"description\":\"The ISO 4217 currency code.\",\"isNullable\":true,\"name\":\"IsoCurrencyCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"FreeSampleIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that product was provided as a free sample.\",\"isNullable\":true,\"name\":\"FreeSampleIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TotalTransactionLineItemAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of line item charges related to the quantity of products sold at the actual selling price less rebates and discounts.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalTransactionLineItemAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TotalTransactionSalesPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of line item charges including all rebates and discount and taxes.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalTransactionSalesPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineEntryMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Line Entry Method.\",\"isNullable\":true,\"name\":\"TransactionLineEntryMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemScanTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp the transaction line item was scanned.\",\"isNullable\":true,\"name\":\"TransactionLineItemScanTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PosDeviceId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a POS Device.\",\"isNullable\":true,\"name\":\"PosDeviceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ScaleUsedIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the scale was used to determine the weight of the item.\",\"isNullable\":true,\"name\":\"ScaleUsedIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ScaleMeasuredItemWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The weight of the line item on the scale for pricing purposes.\",\"isNullable\":true,\"scale\":8,\"name\":\"ScaleMeasuredItemWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"WeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"WeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ScaleQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The quantity of Product ordered placed on the scale.\",\"isNullable\":true,\"scale\":2,\"name\":\"ScaleQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineVolume\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The volume of the line item for pricing purposes.\",\"isNullable\":true,\"scale\":8,\"name\":\"TransactionLineVolume\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"VolumeUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"VolumeUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductPriceOverrideIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the standard product price amount from the price list has been overridden.\",\"isNullable\":true,\"name\":\"ProductPriceOverrideIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductPriceAdjustmentAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The per product unit adjustment amount applied to each product unit.\",\"isNullable\":true,\"scale\":2,\"name\":\"ProductPriceAdjustmentAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ProductPriceAdjustmentPercentage\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The per product unit adjustment percentage applied to each product unit.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductPriceAdjustmentPercentage\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TotalLineItemAdjustmentAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount of adjustment for all line items.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalLineItemAdjustmentAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"LineItemNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Line Item.\",\"isNullable\":true,\"name\":\"LineItemNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityBooked\"},\"dataType\":\"integer\",\"description\":\"The quantity of Product booked.\",\"isNullable\":true,\"name\":\"QuantityBooked\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityBilled\"},\"dataType\":\"integer\",\"description\":\"The quantity billed.\",\"isNullable\":true,\"name\":\"QuantityBilled\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityBacklog\"},\"dataType\":\"integer\",\"description\":\"The quantity on backlog.\",\"isNullable\":true,\"name\":\"QuantityBacklog\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"AcceptedQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The quantity of Line Item products accepted.\",\"isNullable\":true,\"scale\":2,\"name\":\"AcceptedQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityCancelled\"},\"dataType\":\"integer\",\"description\":\"The quantity of Line Items cancelled.\",\"isNullable\":true,\"name\":\"QuantityCancelled\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"QuantityReturned\"},\"dataType\":\"integer\",\"description\":\"The quantity of Line Items returned.\",\"isNullable\":true,\"name\":\"QuantityReturned\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"BookedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The booked date of the Line Items.\",\"isNullable\":true,\"name\":\"BookedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"BilledTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The billed date of the Line Items.\",\"isNullable\":true,\"name\":\"BilledTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CancelledTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The date  and time that Line Items were cancelled.\",\"isNullable\":true,\"name\":\"CancelledTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The date that Line Items were returned.\",\"isNullable\":true,\"name\":\"ReturnedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CommittedShipmentTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp committed for shipment of the Line Item.\",\"isNullable\":true,\"name\":\"CommittedShipmentTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"RequestedDeliveryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp for delivery of the Line Item requested by the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"RequestedDeliveryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CommittedDeliveryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp committed for delivery of the Line Item.\",\"isNullable\":true,\"name\":\"CommittedDeliveryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"CommittedAvailableForPickupTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp committed for the Line Item to be available for pickup.\",\"isNullable\":true,\"name\":\"CommittedAvailableForPickupTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PlannedPickTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned inventory pick timestamp for the Line Items.\",\"isNullable\":true,\"name\":\"PlannedPickTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ActualPickTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual inventory pick timestamp for the Line Items.\",\"isNullable\":true,\"name\":\"ActualPickTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PlannedShipmentTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned shipment timestamp of the Line Items.\",\"isNullable\":true,\"name\":\"PlannedShipmentTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ActualShipmentTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual shipment timestamp of the Line Items.\",\"isNullable\":true,\"name\":\"ActualShipmentTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PlannedDeliveryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned delivery timestamp of the Line Items.\",\"isNullable\":true,\"name\":\"PlannedDeliveryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ActualDeliveryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual delivery timestamp of the line items.\",\"isNullable\":true,\"name\":\"ActualDeliveryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"DeliveryConfirmationTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the shipment/delivery confirmation notice was sent to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"DeliveryConfirmationTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipmentChargeAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount the customer has been charged for shipping.\",\"isNullable\":true,\"scale\":2,\"name\":\"ShipmentChargeAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipmentCostAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount that the shipping cost.\",\"isNullable\":true,\"scale\":2,\"name\":\"ShipmentCostAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PickPackageCostAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The cost associated with picking a packing the item. This amount is normally included in the overall shipment cost.\",\"isNullable\":true,\"scale\":2,\"name\":\"PickPackageCostAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShippingLocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"ShippingLocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipmentMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Shipment Method.\",\"isNullable\":true,\"name\":\"ShipmentMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"DropShipLineItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Line Item(s) are to be drop shipped.\",\"isNullable\":true,\"name\":\"DropShipLineItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"WaybillNumber\"},\"dataType\":\"integer\",\"description\":\"The shipment waybill number.\",\"isNullable\":true,\"name\":\"WaybillNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TareWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The weight of the line items excluding packaging.\",\"isNullable\":true,\"scale\":8,\"name\":\"TareWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"NetWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The weight of the line items including packaging.\",\"isNullable\":true,\"scale\":8,\"name\":\"NetWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ShipCompleteIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Transaction item(s) are only to be shipped when complete - no partial shipments.\",\"isNullable\":true,\"name\":\"ShipCompleteIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest timestamp that the transaction should be made available for delivery.\",\"isNullable\":true,\"name\":\"EarliestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest timestamp that the transaction should be made available for delivery.\",\"isNullable\":true,\"name\":\"LatestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnOfTransactionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Transaction.\",\"isNullable\":true,\"name\":\"ReturnOfTransactionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnOfTransactionLineItemId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier that identifies the Transaction Line Item.\",\"isNullable\":true,\"name\":\"ReturnOfTransactionLineItemId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnToStockIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Line Item(s) were returned to stock.\",\"isNullable\":true,\"name\":\"ReturnToStockIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ReturnToStoreIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Line Item(s) were returned to the store from which they were purchased.\",\"isNullable\":true,\"name\":\"ReturnToStoreIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"ApprovedByEmployeeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employee.\",\"isNullable\":true,\"name\":\"ApprovedByEmployeeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"SalesChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"SalesChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"DistributionChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"DistributionChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"TransactionLineItemTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Line Item Type.\",\"isNullable\":true,\"name\":\"TransactionLineItemTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"FuelPumpId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Fuel Pump.\",\"isNullable\":true,\"name\":\"FuelPumpId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"BuyClassId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Buy Class.\",\"isNullable\":true,\"name\":\"BuyClassId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PromotionId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Promotion.\",\"isNullable\":true,\"name\":\"PromotionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PharmacyId\"},\"dataType\":\"integer\",\"description\":\"The number assigned by the NABP to identify the pharmacy\",\"isNullable\":true,\"name\":\"PharmacyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PharmacyTransactionId\"},\"dataType\":\"long\",\"description\":\"The number assigned by the Pharmacy to identify prescription fulfillment.\",\"isNullable\":true,\"name\":\"PharmacyTransactionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"name\":\"PromotionOfferId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.\",\"isNullable\":true,\"name\":\"PromotionOfferId\"}]}}}",
								"Description": "The components of an Transaction broken down by Product and Quantity, one per line item.",
								"DisplayFolderInfo": "{\"name\":\"Transaction\",\"colorCode\":\"#F775C5\"}",
								"PrimaryKeys": "TransactionId,TransactionLineItemId",
								"spark.sql.sources.provider": "csv"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-azyraswroy",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "TransactionLineItem",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TransactionLineItemId",
									"ToColumnName": "ReturnOfTransactionLineItemId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"TransactionLineItemId\",\"toAttribute\":\"ReturnOfTransactionLineItemId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-chnyqvzaix",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "TransactionLineItem",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TransactionId",
									"ToColumnName": "ReturnOfTransactionId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"TransactionId\",\"toAttribute\":\"ReturnOfTransactionId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-emckwzpsqy",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Country",
							"ToTableName": "RetailProduct",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "CountryId",
									"ToColumnName": "PrimaryCountryOfOriginCountryId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Country.cdm.json/Country\",\"toEntity\":\"RetailProduct.cdm.json/RetailProduct\",\"joinPairs\":[{\"fromAttribute\":\"CountryId\",\"toAttribute\":\"PrimaryCountryOfOriginCountryId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-fpudtzulwa",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Item",
							"ToTableName": "RetailProduct",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ItemSku",
									"ToColumnName": "ItemSku"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Item.cdm.json/Item\",\"toEntity\":\"RetailProduct.cdm.json/RetailProduct\",\"joinPairs\":[{\"fromAttribute\":\"ItemSku\",\"toAttribute\":\"ItemSku\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-fqwbtrphsu",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ChannelType",
							"ToTableName": "Channel",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelTypeId",
									"ToColumnName": "ChannelTypeId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ChannelType.cdm.json/ChannelType\",\"toEntity\":\"Channel.cdm.json/Channel\",\"joinPairs\":[{\"fromAttribute\":\"ChannelTypeId\",\"toAttribute\":\"ChannelTypeId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-gmmuqagmmz",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Location",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "LocationId",
									"ToColumnName": "ShippingLocationId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Location.cdm.json/Location\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"LocationId\",\"toAttribute\":\"ShippingLocationId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-gnzgxagneg",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "RetailProduct",
							"ToTableName": "Item",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProductId",
									"ToColumnName": "ProductId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"RetailProduct.cdm.json/RetailProduct\",\"toEntity\":\"Item.cdm.json/Item\",\"joinPairs\":[{\"fromAttribute\":\"ProductId\",\"toAttribute\":\"ProductId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-itjulawwsu",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Transaction",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TransactionId",
									"ToColumnName": "ReturnOfTransactionId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Transaction.cdm.json/Transaction\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"TransactionId\",\"toAttribute\":\"ReturnOfTransactionId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-jlsgmceluy",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProductCategory",
							"ToTableName": "ProductType",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProductCategoryId",
									"ToColumnName": "ProductCategoryId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProductCategory.cdm.json/ProductCategory\",\"toEntity\":\"ProductType.cdm.json/ProductType\",\"joinPairs\":[{\"fromAttribute\":\"ProductCategoryId\",\"toAttribute\":\"ProductCategoryId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-kgxrcmevwt",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Location",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "LocationId",
									"ToColumnName": "ShipmentToLocationId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Location.cdm.json/Location\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"LocationId\",\"toAttribute\":\"ShipmentToLocationId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-knvrfahing",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Location",
							"ToTableName": "Channel",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "LocationId",
									"ToColumnName": "LocationId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Location.cdm.json/Location\",\"toEntity\":\"Channel.cdm.json/Channel\",\"joinPairs\":[{\"fromAttribute\":\"LocationId\",\"toAttribute\":\"LocationId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-krpoygsssq",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "DistributionChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"DistributionChannelId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-okwdyjinsf",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "RetailProduct",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProductId",
									"ToColumnName": "ProductId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"RetailProduct.cdm.json/RetailProduct\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"ProductId\",\"toAttribute\":\"ProductId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-osxsppupro",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Item",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ItemSku",
									"ToColumnName": "ItemSku"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Item.cdm.json/Item\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"ItemSku\",\"toAttribute\":\"ItemSku\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-ovtrqrvaol",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "SalesChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"SalesChannelId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-qqgqeryrfd",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "PurchasingChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"PurchasingChannelId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-rcmoudtisf",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Transaction",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TransactionId",
									"ToColumnName": "TransactionId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Transaction.cdm.json/Transaction\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"TransactionId\",\"toAttribute\":\"TransactionId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-sebqfikiyx",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProductType",
							"ToTableName": "RetailProduct",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProductTypeId",
									"ToColumnName": "ProductTypeId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProductType.cdm.json/ProductType\",\"toEntity\":\"RetailProduct.cdm.json/RetailProduct\",\"joinPairs\":[{\"fromAttribute\":\"ProductTypeId\",\"toAttribute\":\"ProductTypeId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-xygrzckjbw",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Country",
							"ToTableName": "Location",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "CountryId",
									"ToColumnName": "CountryId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Country.cdm.json/Country\",\"toEntity\":\"Location.cdm.json/Location\",\"joinPairs\":[{\"fromAttribute\":\"CountryId\",\"toAttribute\":\"CountryId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-yjttefnsgh",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "SalesChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"SalesChannelId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-ylfultfvot",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "RetailTemplateDB"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "TransactionLineItem",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "DistributionChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"TransactionLineItem.cdm.json/TransactionLineItem\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"DistributionChannelId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworks')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "adworks",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks",
								"Properties": {
									"FormatType": "parquet",
									"LinkedServiceName": "azwksdatalakego2d3"
								}
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 5,
							"ObjectId": "b9dcf732-8a65-472f-89c9-eb9e2e66418d"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ChannelType",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "ChannelTypeId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "ChannelTypeName",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"ColumnSetEntityName": "23abb8b5-dbbe-4042-ac35-69a5e13a0425",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/ChannelType",
										"FormatTypeSetToDatabaseDefault": false
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/ChannelType",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1649737605,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1649737605",
								"PrimaryKeys": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"ChannelTypeId\",\"type\":\"short\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ChannelTypeName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 1,
							"ObjectId": "492826d3-e3e7-4a46-8bc7-6299214072d4"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Country",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "CountryId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "IsoCountryName",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"ColumnSetEntityName": "111903bb-46a5-4c28-8834-e08083c13f2b",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Country",
										"FormatTypeSetToDatabaseDefault": false
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Country",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1649737907,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1649737907",
								"PrimaryKeys": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"CountryId\",\"type\":\"short\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IsoCountryName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 1,
							"ObjectId": "47b9db82-43a7-4e42-9885-772e66cf77fb"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "CustomerData",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "CustomerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "CustomerId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Customer",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "City",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "StateProvince",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "CountryRegion",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "PostalCode",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"ColumnSetEntityName": "ac556015-10f1-4fca-9b97-84cc5b96751d",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/CustomerData",
										"FormatTypeSetToDatabaseDefault": "true"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/CustomerData",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648792212,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648792212",
								"PrimaryKeys": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"CustomerKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerId\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Customer\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"City\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StateProvince\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CountryRegion\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PostalCode\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.provider": "parquet",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078"
							},
							"ObjectVersion": 1,
							"ObjectId": "e4e11b0f-f266-444b-8b0e-80adfae0f106"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Date",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"Partitioning": {
								"PartitionFunctionType": null,
								"Keys": null
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "DateKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "date"
											}
										}
									},
									{
										"Name": "Date",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "date"
											}
										}
									},
									{
										"Name": "FiscalYear",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "FiscalQuarter",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Month",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "FullDate",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "MonthKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									}
								],
								"ColumnSetEntityName": "0ae7b373-4f3c-48e4-940b-0c44acc2df4c",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Date",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Date",
									"Properties": {
										"LinkedServiceName": "azwksdatalakego2d3",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648743534,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648744833",
								"NumFiles": "2",
								"TotalSize": "15603",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"DateKey\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Date\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FiscalYear\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FiscalQuarter\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Month\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FullDate\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MonthKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 4,
							"ObjectId": "86da1878-72bb-4e0e-9615-ba029445983c"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProductData",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"Partitioning": {
								"PartitionFunctionType": null,
								"Keys": null
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "Category",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Subcategory",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Model",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "ListPrice",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "double",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "double"
											}
										}
									},
									{
										"Name": "Color",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "StandardCost",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "double",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "double"
											}
										}
									},
									{
										"Name": "Product",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "SKU",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "ProductKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									}
								],
								"ColumnSetEntityName": "ae84f65f-5b0b-4b91-ad69-0c07c6e54699",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/ProductData",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/ProductData",
									"Properties": {
										"LinkedServiceName": "azwksdatalakego2d3",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648743531,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648744840",
								"NumFiles": "2",
								"TotalSize": "25650",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"Category\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Subcategory\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Model\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ListPrice\",\"type\":\"double\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Color\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StandardCost\",\"type\":\"double\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Product\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SKU\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductKey\",\"type\":\"short\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 4,
							"ObjectId": "155ee6be-e310-42a3-82cd-761cb1a287ce"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Reseller",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"Partitioning": {
								"PartitionFunctionType": null,
								"Keys": null
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "PostalCode",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "CountryRegion",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "StateProvince",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "City",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Reseller",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "BusinessType",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "ResellerId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "ResellerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									}
								],
								"ColumnSetEntityName": "cb3c14e8-85ab-4167-abe8-6e6e437cfd4d",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Reseller",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Reseller",
									"Properties": {
										"LinkedServiceName": "azwksdatalakego2d3",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648743524,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648744821",
								"NumFiles": "2",
								"TotalSize": "55570",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"PostalCode\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CountryRegion\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StateProvince\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"City\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Reseller\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BusinessType\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResellerId\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResellerKey\",\"type\":\"short\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 4,
							"ObjectId": "fa50b13e-3432-4acb-b464-c46cbf3a7297"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Sales",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "SalesAmount",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 10,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "TotalProductCost",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 10,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "ProductStandardCost",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 10,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "UnitPriceDiscountPct",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 10,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "ExtendedAmount",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 10,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "UnitPrice",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 10,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "OrderQuantity",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "SalesTerritoryKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "ShipDateKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "DueDateKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "OrderDateKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "ProductKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "CustomerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "ResellerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "SalesOrderLineKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									}
								],
								"ColumnSetEntityName": "22d610d9-af1f-45af-b46d-7d1175dcbda9",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Sales",
										"FormatTypeSetToDatabaseDefault": "true"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/Sales",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648791781,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648791781",
								"PrimaryKeys": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"SalesAmount\",\"type\":\"decimal(10,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalProductCost\",\"type\":\"decimal(10,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductStandardCost\",\"type\":\"decimal(10,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UnitPriceDiscountPct\",\"type\":\"decimal(10,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ExtendedAmount\",\"type\":\"decimal(10,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UnitPrice\",\"type\":\"decimal(10,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderQuantity\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesTerritoryKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipDateKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DueDateKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderDateKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResellerKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesOrderLineKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.provider": "parquet",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078"
							},
							"ObjectVersion": 1,
							"ObjectId": "ceef3d7e-407b-4782-bdb8-9c79b26c039a"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "SalesOrder",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"Partitioning": {
								"PartitionFunctionType": null,
								"Keys": null
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "SalesOrderLine",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "SalesOrder",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "SalesOrderLineKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "Channel",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"ColumnSetEntityName": "59a32d55-7b8c-4b63-9f00-7f5be261d6b8",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/SalesOrder",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/SalesOrder",
									"Properties": {
										"LinkedServiceName": "azwksdatalakego2d3",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648743520,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648744825",
								"NumFiles": "4",
								"TotalSize": "2497752",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"SalesOrderLine\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesOrder\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesOrderLineKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Channel\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 4,
							"ObjectId": "f17e003f-d80c-4cee-85f7-6d5cc9184b60"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "SalesTerritory",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworks"
							},
							"Partitioning": {
								"PartitionFunctionType": null,
								"Keys": null
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "SalesTerritoryKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "Region",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Country",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Group",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"ColumnSetEntityName": "c016c73d-784b-4225-94eb-541fb4b949d8",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/SalesTerritory",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworks/SalesTerritory",
									"Properties": {
										"LinkedServiceName": "azwksdatalakego2d3",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648743529,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648744830",
								"NumFiles": "2",
								"TotalSize": "2465",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"SalesTerritoryKey\",\"type\":\"short\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Region\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Country\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Group\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 4,
							"ObjectId": "7b3f68de-35b9-4a7c-812e-356d2620a893"
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adworkstarget')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "adworkstarget",
							"EntityType": "DATABASE",
							"Description": "",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Retail\",\"Version\":\"0.1.0\"}}}",
								"IsSyMSCDMDatabase": true,
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget",
								"Properties": {
									"FormatType": "parquet",
									"LinkedServiceName": "azsynapsewksgo2d3-WorkspaceDefaultStorage"
								}
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 13,
							"ObjectId": "ab975da5-142d-4024-829a-1ef88d14f222"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Country",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworkstarget"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "CountryId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "IsoCountryName",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"ColumnSetEntityName": "391fdda1-05be-4185-b345-18b040d29ef5",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Country",
										"FormatTypeSetToDatabaseDefault": false
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Country",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648785542,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"TotalSize": "3758",
								"NumFiles": "10",
								"Transient_lastDdlTime": "1648786368",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"CountryId\",\"type\":\"short\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IsoCountryName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 5,
							"ObjectId": "e5dfed2e-54cf-499d-937b-30075fcb8afe"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Customer",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworkstarget"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "LocationId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "CustomerId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "CustomerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									}
								],
								"ColumnSetEntityName": "eeb5de7e-8db9-445d-9a24-772d56c0b5be",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Customer",
										"FormatTypeSetToDatabaseDefault": false
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Customer",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1649779312,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1649779312",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"LocationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerId\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 2,
							"ObjectId": "29a658f8-a8ef-4a0b-9818-327e238614b3"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "IndividualCustomer",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworkstarget"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "CustomerId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "CustomerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "IndividualCustomerName",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									}
								],
								"ColumnSetEntityName": "bc0ec2d4-36ae-4ac8-8deb-845324954bfc",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/IndividualCustomer",
										"FormatTypeSetToDatabaseDefault": "true"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/IndividualCustomer",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648792397,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648792397",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"CustomerId\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IndividualCustomerName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.provider": "parquet",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078"
							},
							"ObjectVersion": 2,
							"ObjectId": "1404e954-f038-4ebe-bbe9-45811e345baa"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Location",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworkstarget"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "LocationId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										}
									},
									{
										"Name": "LocationZip",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "LocationState",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "LocationCity",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "CountryId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									}
								],
								"ColumnSetEntityName": "adc5b2b0-99e0-4ae1-b996-27f634483f7e",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Location",
										"FormatTypeSetToDatabaseDefault": false
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Location",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648788728,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"TotalSize": "552455",
								"NumFiles": "228",
								"Transient_lastDdlTime": "1648788950",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"LocationId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LocationZip\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LocationState\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LocationCity\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CountryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 5,
							"ObjectId": "a82219db-5fbe-478e-8aa6-e65f552cdd00"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Territory",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworkstarget"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "Group",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Country",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "Region",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "TerritoryId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									}
								],
								"ColumnSetEntityName": "7fe880c5-ea81-4d1b-8ea1-98d9c28e138e",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Territory",
										"FormatTypeSetToDatabaseDefault": "true"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Territory",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648783641,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648783641",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"Group\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Country\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Region\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TerritoryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.provider": "parquet",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078"
							},
							"ObjectVersion": 2,
							"ObjectId": "d4cd3103-2a3a-41c9-8886-15fd4f126822"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Transaction",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "adworkstarget"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "SalesOrder",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "CustomerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "ResellerKey",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "ResellerId",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "SalesAmount",
										"Description": null,
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 28,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									}
								],
								"ColumnSetEntityName": "3062136c-04c7-4583-b2ba-049e70f7ac4a",
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Transaction",
										"FormatTypeSetToDatabaseDefault": false
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://azsynapsewksgo2d3@azwksdatalakego2d3.dfs.core.windows.net/azsynapsewksgo2d3/adworkstarget/Transaction",
									"Properties": {
										"LinkedServiceName": "",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": "trusted-service-user",
							"CreateTime": 1648794546,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"Transient_lastDdlTime": "1648794546",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"SalesOrder\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Channel\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerId\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Customer\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResellerKey\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResellerId\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Reseller\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesAmount\",\"type\":\"decimal(28,2)\",\"nullable\":true,\"metadata\":{}}]}",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.create.version": "2.4.8.2.6.99.201-58153078",
								"spark.sql.sources.provider": "parquet"
							},
							"ObjectVersion": 2,
							"ObjectId": "25fff234-3828-47d3-ab88-190951d7649d"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-cnjpjovnjh",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "adworkstarget"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Transaction",
							"ToTableName": "IndividualCustomer",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ResellerKey",
									"ToColumnName": "CustomerKey"
								}
							],
							"RelationshipType": 0,
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "60f34be8-4f72-44bc-b4d9-9f4ba0d469c6",
							"Properties": {}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-cotkyrpejx",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "adworkstarget"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Transaction",
							"ToTableName": "IndividualCustomer",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "CustomerKey",
									"ToColumnName": "CustomerKey"
								}
							],
							"RelationshipType": 0,
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "71e59fdb-38d9-4143-b702-6aa9798e305d",
							"Properties": {}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SampleSpark')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": false,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Medium",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.1",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DedicatedPool01')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}